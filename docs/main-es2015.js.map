{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/algorithm-page/algorithm-navbar/algorithm-navbar.component.ts","./src/app/algorithm-page/algorithm-page.component.ts","./src/app/algorithm-page/algorithm-page.component.html","./src/app/algorithm-page/algorithms/abstract-classes/EgsOneToMany.ts","./src/app/algorithm-page/algorithms/abstract-classes/ExtendedGaleShapley.ts","./src/app/algorithm-page/algorithms/abstract-classes/GaleShapley.ts","./src/app/algorithm-page/algorithms/abstract-classes/MatchingAlgorithm.ts","./src/app/algorithm-page/algorithms/abstract-classes/StableRoomMates.ts","./src/app/algorithm-page/algorithms/algorithm-services/hr-hospital-egs/hr-hospital-egs.service.ts","./src/app/algorithm-page/algorithms/algorithm-services/hr-resident-egs/hr-resident-egs.service.ts","./src/app/algorithm-page/algorithms/algorithm-services/smp-man-egs/egs-stable-marriage.service.ts","./src/app/algorithm-page/algorithms/algorithm-services/smp-man-gs/gs-stable-marriage.service.ts","./src/app/algorithm-page/algorithms/algorithm-services/smp-room-irv/stable-room-irv.service.ts","./src/app/algorithm-page/animation-container/agent-titles/agent-titles.component.ts","./src/app/algorithm-page/animation-container/agent-titles/agent-titles.component.html","./src/app/algorithm-page/animation-container/animation-container.component.ts","./src/app/algorithm-page/animation-container/canvas-display/canvas-display.component.ts","./src/app/algorithm-page/animation-guide-dialog/animation-guide-dialog.component.ts","./src/app/algorithm-page/animation-guide-dialog/animation-guide-dialog.component.html","./src/app/algorithm-page/animations/algorithm-animation.service.ts","./src/app/algorithm-page/code-display/code-display.component.ts","./src/app/algorithm-page/code-display/code-display.component.html","./src/app/algorithm-page/edit-preferences-dialog/edit-preferences-dialog/edit-preferences-dialog.component.ts","./src/app/algorithm-page/edit-preferences-dialog/edit-preferences-dialog/edit-preferences-dialog.component.html","./src/app/algorithm-page/mat-animated-icon/mat-animated-icon.component.ts","./src/app/algorithm-page/mat-animated-icon/mat-animated-icon.component.html","./src/app/algorithm-page/playback-controls/playback-controls.component.ts","./src/app/algorithm-page/playback-controls/playback-controls.component.html","./src/app/algorithm-page/services/canvas/canvas.service.ts","./src/app/algorithm-page/services/execution/execution.service.ts","./src/app/algorithm-page/services/playback/playback.service.ts","./src/app/algorithm-page/sidebar/alg-description/alg-description.component.ts","./src/app/algorithm-page/sidebar/alg-description/alg-description.component.html","./src/app/algorithm-page/sidebar/execution-log/execution-log.component.ts","./src/app/algorithm-page/sidebar/execution-log/execution-log.component.html","./src/app/algorithm-page/sidebar/free-agents/free-agents.component.ts","./src/app/algorithm-page/sidebar/free-agents/free-agents.component.html","./src/app/algorithm-page/sidebar/pseudocode/pseudocode.component.ts","./src/app/algorithm-page/sidebar/pseudocode/pseudocode.component.html","./src/app/algorithm-page/sidebar/sidebar.component.ts","./src/app/algorithm-page/sidebar/sidebar.component.html","./src/app/algorithm-retrieval.service.ts","./src/app/animations/fadeAnimation.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home-page/about-content/about-content.component.ts","./src/app/home-page/about-content/about-content.component.html","./src/app/home-page/algorithm-content/algorithm-card/algorithm-card.component.ts","./src/app/home-page/algorithm-content/algorithm-card/algorithm-card.component.html","./src/app/home-page/algorithm-content/algorithm-content.component.ts","./src/app/home-page/algorithm-content/algorithm-content.component.html","./src/app/home-page/feedback-banner/feedback-banner.component.ts","./src/app/home-page/feedback-banner/feedback-banner.component.html","./src/app/home-page/feedback-content/feedback-content.component.ts","./src/app/home-page/feedback-content/feedback-content.component.html","./src/app/home-page/home-content/home-content.component.ts","./src/app/home-page/home-content/home-content.component.html","./src/app/home-page/home-page.component.ts","./src/app/home-page/home-page.component.html","./src/app/home-page/icon-banner/icon-banner.component.ts","./src/app/home-page/icon-banner/icon-banner.component.html","./src/app/home-page/navbar/navbar.component.ts","./src/app/home-page/navbar/navbar.component.html","./src/app/routing/algorithm-guard.ts","./src/app/routing/app-routing.module.ts","./src/app/utils/utils.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAG9C,IAAI,WAAW,GAAG,CAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YACnC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YACnC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YACnC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YACnC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YACnC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YACnC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YACnC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;QAEzD,IAAI,WAAW,GAAG,CAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YACnC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YACnC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YACnC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YACnC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YACnC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'algorithm-navbar',\r\n  templateUrl: './algorithm-navbar.component.html',\r\n  styleUrls: ['./algorithm-navbar.component.scss']\r\n})\r\nexport class AlgorithmNavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, ElementRef, HostListener, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { AlgorithmRetrievalService } from '../algorithm-retrieval.service';\r\nimport { UtilsService } from '../utils/utils.service';\r\nimport { AnimationGuideDialogComponent } from './animation-guide-dialog/animation-guide-dialog.component';\r\nimport { AlgorithmAnimationService } from './animations/algorithm-animation.service';\r\nimport { CanvasService } from './services/canvas/canvas.service';\r\nimport { EditPreferencesDialogComponent } from './edit-preferences-dialog/edit-preferences-dialog/edit-preferences-dialog.component';\r\nimport { PlaybackService } from './services/playback/playback.service';\r\ndeclare var $: any;  // declaring jquery for use in this file\r\n\r\n\r\n// -------------------------------------------------- FILE DESCRIPTION\r\n\r\n/*\r\n\r\nalgorithm-page.component.ts\r\n\r\nThis is the Typescript file for the algorithm page (algorithm-page.component.html).\r\n\r\nPurpose:\r\n  - Acts as a \"main\" class for the algorithm page\r\n  - Mediates interaction between all other services\r\n\r\nFlow:\r\n  - When algorithm page is to be loaded, run the constructor, injecting all necessary services\r\n  - ngOnInit() is then run, linking the global canvas variable for the canvasService (having a canvasService allows us to make calls to draw elements from anywhere)\r\n  - Set listener functions for the following actions:\r\n    - keypress down:\r\n        handleKeyboardEvent(event: KeyboardEvent): void\r\n    - home link (algmatch) clicked:\r\n        async goHome(): Promise<void>\r\n    - generate new preferences button clicked:\r\n        async generateNewPreferences(): Promise<void>\r\n    - toggle sidebar button clicked:\r\n        async toggleSidebar(): Promise<void>\r\n\r\nFunctions in this file:\r\n  - ngOnInit(): void\r\n  - ngAfterViewInit(): void\r\n  - handleKeyboardEvent(event: KeyboardEvent): void\r\n\r\n  - openEditPreferencesDialog(): void\r\n  - openAnimationGuideDialog(): void\r\n\r\n  - async goHome(): Promise<void>\r\n  - async generateNewPreferences(): Promise<void>\r\n  - async toggleSidebar(): Promise<void>\r\n\r\n  - nextTutorialStep(): void\r\n  - startTutorial(): void\r\n  - sidebarTutorial(): void\r\n  - mainContentTutorial(): void\r\n  - stopTutorial(): void\r\n\r\n*/\r\n\r\n\r\n// -------------------------------------------------- CODE\r\n\r\n\r\n@Component({\r\n  selector: 'algorithm-page',\r\n  templateUrl: './algorithm-page.component.html',\r\n  styleUrls: ['./algorithm-page.component.scss']\r\n})\r\nexport class AlgorithmPageComponent implements OnInit {\r\n\r\n  // --------------------------------------------------------------------------------- | INSTANCE VARIABLES\r\n\r\n\r\n  // looks for the canvas element on the algorithm page and assigns it to the canvas variable\r\n  @ViewChild('canvas', {static: true})\r\n  canvas: ElementRef<HTMLCanvasElement>;\r\n\r\n  showCode: boolean = false;\r\n  dialogOpen: boolean = false;\r\n\r\n  tutorialStep: number;\r\n\r\n  duringAnimation: boolean = false;\r\n\r\n  firstSelection: boolean = true\r\n  algorithm = new FormControl('');\r\n  numPeople: number;\r\n\r\n  // where SR is going to generate a stable matching or a unstable matching\r\n  SRstable: boolean = true;\r\n  SRstableText: string = \"Generating Stable Matchings\"\r\n\r\n\r\n  // --------------------------------------------------------------------------------- | INIT FUNCTIONS\r\n\r\n\r\n  constructor(\r\n    public playback: PlaybackService,  // injecting the playback service\r\n    public algorithmService: AlgorithmRetrievalService,  // injecting the algorithm service\r\n    public drawService: CanvasService,  // injecting the canvas service\r\n    public animation: AlgorithmAnimationService,\r\n    public utils: UtilsService,\r\n    public dialog: MatDialog,  // injecting the dialog component\r\n    public router: Router  // injecting the router service (for programmatic route navigation)\r\n  ) { }\r\n\r\n\r\n  // function that runs when page is created\r\n  ngOnInit(): void {\r\n\r\n    // set the global canvas element (in the canvasService) to the canvas on this page\r\n    this.drawService.canvas = this.canvas;\r\n    this.drawService.ctx = this.canvas.nativeElement.getContext('2d');\r\n\r\n    // debugging: use the following lines (113-121) to test individual algorithms\r\n    // you can use this in conjunction with changing the routing in order to direct to the animation page (so you don't have to keep selecting an algorithm through the main page, etc.)\r\n    // let group1 = 5;\r\n    // let group2 = 5;\r\n    // // let alg: string = \"smp-man-gs\";\r\n    // let alg: string = \"hr-resident-egs\";\r\n\r\n    // this.algorithmService.numberOfGroup1Agents = group1;\r\n    // this.algorithmService.numberOfGroup2Agents = group2;\r\n\r\n    // this.algorithmService.currentAlgorithm = this.algorithmService.mapOfAvailableAlgorithms.get(alg);\r\n    // this.playback.setAlgorithm(alg, group1, group2);\r\n\r\n\r\n    this.drawService.initialise();\r\n\r\n    // (un)comment the line below to (disable)/enable working algorithm selection\r\n    this.playback.setAlgorithm(this.algorithmService.currentAlgorithm.id, this.algorithmService.numberOfGroup1Agents, this.algorithmService.numberOfGroup2Agents);\r\n\r\n\r\n    // initialise all of the popovers for the tutorial (they won't appear without this function)\r\n    $(function () {\r\n      $('[data-toggle=\"popover\"]').popover()\r\n    })\r\n\r\n    // initialise the tutorial to the beginning\r\n    this.tutorialStep = 0;\r\n\r\n  }\r\n\r\n  // function that runs when page is visible to user\r\n  ngAfterViewInit(): void {\r\n    this.animation.loadPage();\r\n  }\r\n\r\n\r\n  // creating a listener function for keydown events\r\n  // Key:\r\n    // (< arrow) or (a) == backstep in algorithm\r\n    // (> arrow) or (d) == forward step in algorithm\r\n    // (r) or (#) == generate new preferences\r\n    // (e) or (]) == open edit preferences dialog\r\n  @HostListener('document:keydown', ['$event'])\r\n  handleKeyboardEvent(event: KeyboardEvent): void {\r\n    if (!this.dialogOpen && this.tutorialStep == 0) {  // disable events on tutorial or edit preferences open\r\n      if (event.key == \"ArrowRight\" || event.key == \"d\") {\r\n        if (!(!this.playback.pause || this.playback.stepCounter >= this.playback.numCommands)) {\r\n          this.playback.forwardStep();\r\n        }\r\n      } else if (event.key == \"ArrowLeft\" || event.key == \"a\") {\r\n        if (!(!this.playback.pause || this.playback.stepCounter == 0)) {\r\n          this.playback.backStep();\r\n        }\r\n      } else if (event.key == \" \") {\r\n        if (!(this.playback.stepCounter >= this.playback.numCommands)) {\r\n          this.playback.toggle();\r\n        }\r\n      } else if (event.key == \"r\" || event.key == \"#\") {\r\n        this.generateNewPreferences()\r\n      } else if (event.key == \"e\" || event.key == \"]\") {\r\n        this.openEditPreferencesDialog()\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // --------------------------------------------------------------------------------- | GENERAL FUNCTIONS\r\n\r\n\r\n  // open the edit preferences dialog with a callback function\r\n  openEditPreferencesDialog(): void {\r\n    const dialogRef = this.dialog.open(EditPreferencesDialogComponent);\r\n\r\n    this.dialogOpen = true;\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.dialogOpen = false;\r\n    });\r\n\r\n  }\r\n\r\n  // open the animation guide dialog with a callback function\r\n  openAnimationGuideDialog(): void {\r\n    const dialogRef = this.dialog.open(AnimationGuideDialogComponent);\r\n\r\n    this.dialogOpen = true;\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.dialogOpen = false;\r\n    });\r\n\r\n  }\r\n\r\n\r\n  // --------------------------------------------------------------------------------- | ON CLICK FUNCTIONS\r\n\r\n\r\n  // function run when home link clicked\r\n  // start animation for going home, delay 1000ms, then change route to home\r\n  async goHome(): Promise<void> {\r\n    this.animation.goHome();\r\n    await this.utils.delay(1000);\r\n    this.router.navigateByUrl(\"/\");\r\n  }\r\n\r\n\r\n  // function run when generate new preferences button clicked\r\n  async generateNewPreferences(): Promise<void> {\r\n    // clears any code highlighting\r\n    var command = this.playback.commandList[this.playback.previousStepCounter];\r\n    let a = document.getElementById(\"line\" + command[\"lineNumber\"]);\r\n    a.style.backgroundColor = \"\";\r\n    a.style.color = \"\";\r\n\r\n\r\n    // animates changing of preferences (fade in/out)\r\n    this.animation.fadeCanvasOut();\r\n    await this.utils.delay(300);\r\n    for (let i = 0; i < 1; i++) {\r\n      // let agent1Count: number = Math.floor(Math.random() * (9 - 2) + 2);\r\n      // let agent2Count: number = Math.floor(Math.random() * (9 - 2) + 2);\r\n      // this.playback.setAlgorithm(this.algorithmService.currentAlgorithm.id, agent1Count, agent2Count);\r\n\r\n      console.log(this.algorithmService.currentAlgorithm.name)\r\n\r\n      if (this.algorithmService.currentAlgorithm.name == \"Stable Roommates Problem\") {\r\n        console.log(\"yes\", this.SRstable)\r\n        this.playback.setAlgorithm(this.algorithmService.currentAlgorithm.id, this.algorithmService.numberOfGroup1Agents, this.algorithmService.numberOfGroup2Agents, null, this.SRstable);\r\n\r\n      } else {\r\n        this.playback.setAlgorithm(this.algorithmService.currentAlgorithm.id, this.algorithmService.numberOfGroup1Agents, this.algorithmService.numberOfGroup2Agents);\r\n      }\r\n\r\n    }\r\n    this.animation.fadeCanvasIn();\r\n  }\r\n\r\n\r\n  // function run when toggle sidebar button clicked (top left)\r\n  async toggleSidebar(): Promise<void> {\r\n\r\n    this.duringAnimation = true;\r\n\r\n    let mainContent = document.getElementById(\"mainContent\");\r\n\r\n    if (!this.showCode) {\r\n\r\n      // hide sidebar and content\r\n      this.animation.hideSidebar();\r\n      this.animation.hideMainContent();\r\n\r\n      await this.utils.delay(700);\r\n  \r\n      // show sidebar and content\r\n      mainContent.style.position = \"\";\r\n      this.animation.showMainContent();\r\n      this.showCode = !this.showCode\r\n\r\n    } else {\r\n\r\n      // hide content\r\n      this.animation.hideMainContent();\r\n\r\n      await this.utils.delay(400);\r\n\r\n      // show sidebar\r\n      this.showCode = !this.showCode\r\n      this.animation.showSidebar();\r\n\r\n      await this.utils.delay(200);\r\n\r\n      // show content\r\n      this.animation.showMainContent();\r\n\r\n    }\r\n\r\n    await this.utils.delay(200);\r\n\r\n    this.duringAnimation = false;\r\n\r\n  }\r\n\r\n  ChangeStableSR(): void {\r\n    \r\n    if (this.SRstable == true) {\r\n      this.SRstable = false\r\n      this.SRstableText = \"Generating Unstable Matchings\"\r\n    } else {\r\n      this.SRstable = true\r\n      this.SRstableText = \"Generating Stable Matchings\"\r\n\r\n    }\r\n\r\n    console.log(\"New SR setting\", this.SRstable)\r\n  }\r\n\r\n\r\n  // --------------------------------------------------------------------------------- | TUTORIAL FUNCTIONS\r\n  \r\n\r\n  // function run when \">\" arrow clicked in tutorial\r\n  // progresses to next stage of tutorial\r\n  nextTutorialStep(): void {\r\n    // step 1 (shows sidebar so tutorial doesn't break)\r\n    if (this.tutorialStep == 0) {\r\n      if (this.showCode) {\r\n        this.toggleSidebar();\r\n      }\r\n      this.startTutorial();\r\n    \r\n    // step 2\r\n    } else if (this.tutorialStep == 1) {\r\n      this.sidebarTutorial();\r\n\r\n    // step 3\r\n    } else if (this.tutorialStep == 2) {\r\n      this.mainContentTutorial();\r\n      \r\n    // step 4\r\n    } else if (this.tutorialStep == 3) {\r\n      this.stopTutorial();\r\n    }\r\n  }\r\n\r\n\r\n  // functions to hide/show appropriate popovers for tutorial steps\r\n  startTutorial(): void {\r\n    this.tutorialStep += 1;\r\n    $('.navbarPopover').popover('show');\r\n  }\r\n\r\n  sidebarTutorial(): void {\r\n    this.tutorialStep += 1;\r\n    $('.navbarPopover').popover('hide');\r\n    $('.sidebarPopover').popover('show');\r\n  }\r\n\r\n  mainContentTutorial(): void {\r\n    this.tutorialStep += 1;\r\n    $('.sidebarPopover').popover('hide');\r\n    $('.mainContentPopover').popover('show');\r\n  }\r\n\r\n  stopTutorial(): void {\r\n    this.tutorialStep = 0;\r\n    $('.navbarPopover').popover('hide');\r\n    $('.sidebarPopover').popover('hide');\r\n    $('.mainContentPopover').popover('hide');\r\n  }\r\n\r\n\r\n}\r\n","<!-- semi-transparent panel to give illusion of modal on tutorial -->\r\n<div class=\"covering-panel\" *ngIf=\"this.tutorialStep != 0\"></div>\r\n\r\n\r\n<!-- navbar -->\r\n<nav class=\"navbar alg-navbar sticky-top navbar-light p-0 moveToTop shadow-lg\">\r\n\r\n\r\n  <div class=\"col-3 text-left align-middle\" style=\"height: 100%\">\r\n    <div class=\"align-middle\" style=\"display: inline-block; height: 100%\">\r\n      \r\n    </div>\r\n    <mat-icon class=\"navbarIconButton unselectable mr-4 navbarPopover\" data-toggle=\"popover\" data-placement=\"bottom\" title=\"Menu button\" data-content=\"Click this to hide or expand the sidebar underneath when not in this tutorial!\" data-trigger=\"manual\" (click)=\"this.toggleSidebar(); $event.stopImmediatePropagation()\" matTooltip=\"{{this.showCode ? 'Expand Panel' : 'Close Panel'}}\" [ngClass]=\"{'disabled': this.tutorialStep != 0 || this.duringAnimation}\">{{this.showCode ? \"menu\" : \"menu_open\"}}</mat-icon>\r\n    <a class=\"unselectable\" style=\"cursor: pointer;vertical-align: -2px\" [ngClass]=\"{'disabled': this.tutorialStep != 0 || this.duringAnimation}\" (click)=\"this.goHome()\" matTooltip=\"Go Home\"><span class=\"display-1\" style=\"font-size: 20px;\"><span id=\"alg\">alg</span><span id=\"match\">match</span></span></a>\r\n  </div>\r\n  <div class=\"col-6 text-center navbarPopover\" data-toggle=\"popover\" data-placement=\"bottom\" title=\"Tutorial\" data-content=\"This short tutorial will walk you through the sections of this page. Click the arrow in the top right to move to the next step of the tutorial! Or you can click the x, also in the top right of the screen, to stop the tutorial.\" data-trigger=\"manual\">\r\n    <span style=\"color: white; font-size: 0.98rem; font-weight: 350;\">{{ this.algorithmService.currentAlgorithm.name }} / {{ this.algorithmService.currentAlgorithm.algorithm }} / {{ this.algorithmService.currentAlgorithm.orientation[0] }}-Oriented</span>\r\n  </div>\r\n\r\n  \r\n\r\n  <div class=\"col-3 text-right\">\r\n\r\n    <div class=\"col\" *ngIf=\"this.algorithmService.currentAlgorithm.name == 'Stable Roommates Problem'\">\r\n      \r\n      <span style=\"color: white; font-size: 0.98rem; font-weight: 350;\">{{ this.SRstableText }}</span>\r\n    </div>\r\n\r\n    <mat-icon class=\"navbarIconButton unselectable mr-4\" matTooltip=\"New\" mat-button (click)=\"this.ChangeStableSR()\" [ngClass]=\"{'disabled': this.tutorialStep != 0}\">edit</mat-icon>\r\n\r\n    <mat-icon class=\"navbarIconButton unselectable mr-4\" matTooltip=\"Stop Tutorial\" *ngIf=\"this.tutorialStep != 0\" (click)=\"this.stopTutorial()\">cancel</mat-icon>\r\n    <mat-icon class=\"navbarIconButton unselectable mr-4\" matTooltip=\"Generate New Random Preferences\" (click)=\"this.generateNewPreferences()\" [ngClass]=\"{'disabled': this.tutorialStep != 0}\">refresh</mat-icon>\r\n    <mat-icon class=\"navbarIconButton unselectable mr-4\" matTooltip=\"Edit Preferences\" mat-button (click)=\"this.openEditPreferencesDialog()\" [ngClass]=\"{'disabled': this.tutorialStep != 0}\">edit</mat-icon>\r\n    <mat-icon class=\"navbarIconButton unselectable mr-4\" (click)=\"this.drawService.alwaysShowPreferences = !this.drawService.alwaysShowPreferences; this.drawService.redrawCanvas(); $event.stopImmediatePropagation()\" matTooltip=\"{{this.drawService.alwaysShowPreferences ? 'Show All Preferences' : 'Only Show Relevant Preferences'}}\" [ngClass]=\"{'disabled': this.tutorialStep != 0}\">{{this.drawService.alwaysShowPreferences ? \"visibility_off\" : \"visibility\"}}</mat-icon>\r\n    <mat-icon class=\"navbarIconButton unselectable mr-4\" matTooltip=\"Animation Guide\" (click)=\"this.openAnimationGuideDialog()\" [ngClass]=\"{'disabled': this.tutorialStep != 0}\">info</mat-icon>\r\n    <mat-icon class=\"navbarIconButton unselectable mr-2 navbarPopover\" data-toggle=\"popover\" data-placement=\"bottom\" title=\"Actions\" data-content=\"In order from left to right, you can: stop this tutorial, generate new preferences, edit preferences, toggle all preferences or only relevant preferences, see an animation guide, or advance the tutorial.\" data-trigger=\"manual\" matTooltip=\"{{this.tutorialStep == 0 ? 'Tutorial' : 'Advance Tutorial'}}\" (click)=\"this.nextTutorialStep()\" [ngClass]=\"{'disabled': this.duringAnimation}\">{{this.tutorialStep == 0 ? \"help_outline\" : \"arrow_forward_ios\"}}</mat-icon>\r\n    \r\n  </div>\r\n\r\n  \r\n\r\n</nav>\r\n\r\n\r\n<!-- main content -->\r\n<div class=\"container-fluid main\">\r\n\r\n  <!-- sidebar -->\r\n  <sidebar [(showCode)]=\"showCode\" [(tutorialStep)]=\"tutorialStep\"></sidebar>\r\n\r\n  <!-- <animation-container></animation-container> -->\r\n\r\n\r\n  <div class=\"grid-container-algorithm ml-sm-auto\" id=\"mainContent\" style=\"background-color: white; height: 100%; display: grid; grid-template-rows: 0.39fr 3.4fr 0.8fr; padding-left: 0px; padding-right: 0px\" [ngClass]=\"{'col-md-9': !this.showCode, 'col-md-12': this.showCode, 'moveContentToTop': this.tutorialStep == 3}\">\r\n\r\n    <agent-titles [(showCode)]=\"showCode\"></agent-titles>\r\n\r\n    <div class=\"mainContentPopover\" (resized)=\"this.drawService.redrawCanvas()\" id=\"parent\" style=\"min-height: 400px;\"  data-toggle=\"popover\" data-placement=\"left\" title=\"Algorithm Display\" data-content=\"This is where you can see the animation for the algorithm! Green lines mean there is a matching between 2 circles, and red lines mean there is a proposal currently being considered. If you want more information, click on the info button next to the tutorial button!\" data-trigger=\"manual\">\r\n      <canvas #canvas id=\"myCanvas\" style=\"min-height: 280px; max-width: 100%; height: 100%\"></canvas>\r\n    </div>\r\n\r\n    <playback-controls></playback-controls>\r\n\r\n  </div>\r\n\r\n</div>","\r\nimport { Agent } from \"../interfaces/Agent\";\r\nimport { ExtendedGaleShapley } from \"./ExtendedGaleShapley\";\r\n\r\n// this file is the implementation for SM - EGS\r\n\r\nexport abstract class EgsOneToMany extends ExtendedGaleShapley {\r\n  \r\n\r\n    breakAssignment(currentAgent: Agent, potentialProposee: Agent) {\r\n        // if w is currently assigned to someone {\r\n        this.update(4, {\"%woman%\": potentialProposee.name});\r\n        if (potentialProposee.match.length >= 1) {\r\n            // break the provisional assignment of r to h'\r\n            // let matchPosition: number = potentialProposee.match[0].match.findIndex((agent: { name: string }) => agent.name == potentialProposee.name);\r\n\r\n            let matchPosition: number = this.findPositionInMatches(potentialProposee, potentialProposee.match[0]);\r\n\r\n            if (potentialProposee.match[0].ranking.filter(agent => agent.match[0] != currentAgent).length > 0 && !this.freeAgentsOfGroup1.includes(potentialProposee.match[0].name) && potentialProposee.match[0].ranking.length > 0) {\r\n                this.freeAgentsOfGroup1.push(potentialProposee.match[0].name);\r\n            }\r\n\r\n\r\n            this.removeArrayFromArray(this.currentLines, [this.getLastCharacter(potentialProposee.match[0].name), this.getLastCharacter(potentialProposee.name), \"green\"]);\r\n\r\n            this.changePreferenceStyle(this.group1CurrentPreferences, this.getLastCharacter(potentialProposee.match[0].name), this.originalGroup1CurrentPreferences.get(this.getLastCharacter(potentialProposee.match[0].name)).findIndex(woman => woman == this.getLastCharacter(potentialProposee.name)), \"grey\");\r\n            this.changePreferenceStyle(this.group2CurrentPreferences, this.getLastCharacter(potentialProposee.name), matchPosition, \"grey\");\r\n            \r\n            this.update(5, {\"%woman%\": potentialProposee.name, \"%currentPartner%\": potentialProposee.match[0].name});\r\n\r\n            potentialProposee.ranking.splice(matchPosition, 1);\r\n            potentialProposee.match[0].ranking.splice(this.findPositionInMatches(potentialProposee.match[0], potentialProposee), 1);\r\n        } else {\r\n            // } (r is not currently assigned)\r\n            this.update(6, {\"%woman%\": potentialProposee.name});\r\n        }\r\n    }\r\n\r\n    provisionallyAssign(currentAgent: Agent, potentialProposee: Agent) {\r\n        // provisionally assign r to h;\r\n\r\n        let agentLastChar = this.getLastCharacter(currentAgent.name);\r\n        let proposeeLastChar = this.getLastCharacter(potentialProposee.name);\r\n        this.removeArrayFromArray(this.currentLines, [agentLastChar, proposeeLastChar, \"red\"]);\r\n\r\n        let greenLine = [agentLastChar, proposeeLastChar, \"green\"];\r\n        this.currentLines.push(greenLine);\r\n\r\n        // this.findPositionInMatches(currentAgent, potentialProposee));\r\n\r\n        this.changePreferenceStyle(this.group1CurrentPreferences, agentLastChar, this.originalGroup1CurrentPreferences.get(agentLastChar).findIndex(woman => woman == this.getLastCharacter(potentialProposee.name)), \"green\");\r\n        this.changePreferenceStyle(this.group2CurrentPreferences, proposeeLastChar, this.findPositionInMatches(potentialProposee, currentAgent), \"green\");\r\n\r\n        this.update(7, {\"%man%\": currentAgent.name, \"%woman%\": potentialProposee.name});\r\n        potentialProposee.match[0] = currentAgent;\r\n        currentAgent.match.push(potentialProposee);\r\n    }\r\n\r\n    removeRuledOutPreferences(currentAgent: Agent, potentialProposee: Agent) {\r\n        let currentAgentPosition: number = potentialProposee.ranking.findIndex((agent: { name: string }) => agent.name == currentAgent.name);\r\n        \r\n        let proposeeRankingClearCounter: number = currentAgentPosition + 1;\r\n\r\n        // for each successor h' of h on r's list {\r\n        this.update(8, {\"%man%\": currentAgent.name, \"%woman%\": potentialProposee.name});\r\n        for (let i = currentAgentPosition + 1; i < potentialProposee.ranking.length; i++) {\r\n\r\n            // \"Woman: \" + potentialProposee.name);\r\n\r\n            let proposeePosition: number = this.findPositionInMatches(potentialProposee.ranking[i], potentialProposee);\r\n            this.relevantPreferences.push(this.getLastCharacter(potentialProposee.ranking[i].name));\r\n\r\n            // potentialProposee.ranking[i].name);\r\n            // potentialProposee.ranking[i].ranking[proposeePosition]);\r\n\r\n            // remove h' and r from each other's lists\r\n            this.update(9, {\"%nextWorstMan%\": potentialProposee.ranking[i].name, \"%woman%\": potentialProposee.name});\r\n\r\n            this.changePreferenceStyle(this.group1CurrentPreferences, this.getLastCharacter(potentialProposee.ranking[i].name), this.originalGroup1CurrentPreferences.get(this.getLastCharacter(potentialProposee.ranking[i].name)).findIndex(woman => woman == this.getLastCharacter(potentialProposee.name)), \"grey\");\r\n\r\n            this.changePreferenceStyle(this.group2CurrentPreferences, this.getLastCharacter(potentialProposee.name), proposeeRankingClearCounter, \"grey\");\r\n\r\n            this.update(10, {\"%nextWorstMan%\": potentialProposee.ranking[i].name, \"%woman%\": potentialProposee.name});\r\n\r\n            // potentialProposee.ranking[i].name);\r\n            // potentialProposee.name);\r\n            \r\n            potentialProposee.ranking[i].ranking.splice(proposeePosition, 1);\r\n            potentialProposee.ranking.splice(i, 1);\r\n            i -= 1;\r\n\r\n            proposeeRankingClearCounter++;\r\n\r\n            this.relevantPreferences.pop();\r\n\r\n        }\r\n        this.update(11, {\"%man%\": currentAgent.name, \"%woman%\": potentialProposee.name});\r\n    }\r\n\r\n}","import { Agent } from \"../interfaces/Agent\";\r\nimport { AlgorithmData } from \"../interfaces/AlgorithmData\";\r\nimport { MatchingAlgorithm } from \"./MatchingAlgorithm\";\r\n\r\n\r\nexport abstract class ExtendedGaleShapley extends MatchingAlgorithm {\r\n\r\n    match(): AlgorithmData {\r\n\r\n        // assign each resident to be free;\r\n        this.update(1);\r\n\r\n        while (this.freeAgentsOfGroup1.length > 0) {\r\n\r\n            // this.currentlySelectedAgents = [];\r\n            // this.relevantPreferences = [];\r\n\r\n            // while (some hospital h is undersubscribed) and (h's preference list contains a resident r not provisionally assigned to h) {\r\n            let currentAgent = this.group1Agents.get(this.freeAgentsOfGroup1[0]);\r\n            // this.currentlySelectedAgents.push(this.getLastCharacter(currentAgent.name));\r\n            // this.relevantPreferences.push(this.getLastCharacter(currentAgent.name));\r\n\r\n\r\n            // if all potential proposees are gone, remove \r\n            if (currentAgent.ranking.length <= 0 || !this.getNextPotentialProposee(currentAgent)) {\r\n                this.freeAgentsOfGroup1.shift();\r\n            } else {\r\n\r\n                this.update(2, {\"%currentAgent%\": currentAgent.name});\r\n\r\n                // r := first such resident on h's list;\r\n                let potentialProposee: Agent = this.getNextPotentialProposee(currentAgent);\r\n\r\n\r\n                // let agentLastChar = this.getLastCharacter(currentAgent.name);\r\n                // let proposeeLastChar = this.getLastCharacter(potentialProposee.name);\r\n\r\n                // this.currentlySelectedAgents.push(proposeeLastChar);\r\n                // this.relevantPreferences.push(proposeeLastChar);\r\n\r\n                // this.changePreferenceStyle(this.group1CurrentPreferences, agentLastChar, this.originalGroup1CurrentPreferences.get(agentLastChar).findIndex(woman => woman == this.getLastCharacter(potentialProposee.name)), \"red\");\r\n                // this.changePreferenceStyle(this.group2CurrentPreferences, proposeeLastChar, this.findPositionInMatches(potentialProposee, currentAgent), \"red\");\r\n\r\n                // let redLine = [agentLastChar, proposeeLastChar, \"red\"];\r\n                // this.currentLines.push(redLine);\r\n\r\n                this.update(3, {\"%currentAgent%\": currentAgent.name, \"%potentialProposee%\": potentialProposee.name});\r\n\r\n                // if h is fully subscribed, then break the assignment of the worst resident of that hospital\r\n                this.breakAssignment(currentAgent, potentialProposee);\r\n        \r\n                this.provisionallyAssign(currentAgent, potentialProposee);\r\n        \r\n                this.removeRuledOutPreferences(currentAgent, potentialProposee);\r\n        \r\n                if (this.shouldContinueMatching(currentAgent)) {\r\n                    this.freeAgentsOfGroup1.shift();\r\n                }  \r\n            }\r\n        }\r\n\r\n        this.currentlySelectedAgents = [];\r\n        this.relevantPreferences = [];\r\n        // a stable matching has been found\r\n        this.update(12);\r\n\r\n\r\n        return;\r\n    }\r\n\r\n    abstract getNextPotentialProposee(currentAgent: Agent): Agent;\r\n\r\n    abstract shouldContinueMatching(currentAgent: Agent): boolean;\r\n\r\n    abstract provisionallyAssign(currentAgent: Agent, potentialProposee: Agent): void;\r\n\r\n    abstract removeRuledOutPreferences(currentAgent: Agent, potentialProposee: Agent): void;\r\n\r\n    abstract breakAssignment(currentAgent: Agent, potentialProposee: Agent): void;\r\n\r\n}","import { AlgorithmData } from \"../interfaces/AlgorithmData\";\r\nimport { MatchingAlgorithm } from \"./MatchingAlgorithm\";\r\n\r\nexport abstract class GaleShapley extends MatchingAlgorithm {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    abstract match(): AlgorithmData;\r\n\r\n}","import { Agent } from \"../interfaces/Agent\";\r\nimport { Person } from '../interfaces/Person';\r\nimport { AlgorithmData } from \"../interfaces/AlgorithmData\";\r\nimport { Step } from \"../interfaces/Step\";\r\n\r\nexport abstract class MatchingAlgorithm {\r\n\r\n    abstract group1Name: string;\r\n    abstract group2Name: string;\r\n\r\n    numberOfAgents: number;\r\n    numberOfGroup2Agents: number;\r\n\r\n    freeAgentsOfGroup1: Array<String>;\r\n\r\n    group1Agents: Map<String, Agent> = new Map();\r\n    group2Agents: Map<String, Agent> = new Map();\r\n\r\n    algorithmData: AlgorithmData = {\r\n        commands: new Array(),\r\n        descriptions: new Array()\r\n    };\r\n\r\n    SRstable: boolean = true\r\n\r\n    currentLine: Array<string> = [];\r\n\r\n    originalGroup1CurrentPreferences: Map<String, Array<String>> = new Map();\r\n    originalGroup2CurrentPreferences: Map<String, Array<String>> = new Map();\r\n\r\n    group1CurrentPreferences: Map<String, Array<String>> = new Map();\r\n    group2CurrentPreferences: Map<String, Array<String>> = new Map();\r\n    currentlySelectedAgents: Array<string> = [];\r\n    currentLines: Array<Array<string>> = [];\r\n\r\n    algorithmSpecificData: Object = {};\r\n\r\n    relevantPreferences: Array<string> = [];\r\n\r\n    stable: boolean = false;\r\n\r\n    constructor() { }\r\n\r\n    initialise(numberOfAgents: number, numberOfGroup2Agents: number = numberOfAgents) {\r\n        this.freeAgentsOfGroup1 = [];\r\n\r\n        this.group1Agents = new Map();\r\n        this.group2Agents = new Map();\r\n\r\n        this.algorithmData = {\r\n            commands: new Array(),\r\n            descriptions: new Array()\r\n        };\r\n    \r\n        this.currentLine = [];\r\n    \r\n        this.group1CurrentPreferences = new Map();\r\n        this.group2CurrentPreferences = new Map();\r\n        this.currentlySelectedAgents = [];\r\n        this.currentLines = [];\r\n    \r\n        this.algorithmSpecificData = {};\r\n    \r\n        this.relevantPreferences = [];\r\n\r\n        this.numberOfAgents = numberOfAgents;\r\n        this.numberOfGroup2Agents = numberOfGroup2Agents;\r\n\r\n        this.stable = false;\r\n\r\n        \r\n    }\r\n\r\n    generateAgents() {\r\n        for (let i = 1; i < this.numberOfAgents + 1; i++) {\r\n            let group1AgentName = this.group1Name + i;\r\n\r\n            this.group1Agents.set(group1AgentName, {\r\n                name: group1AgentName,\r\n                match: new Array(),\r\n                ranking: new Array()\r\n            });\r\n\r\n            this.freeAgentsOfGroup1.push(group1AgentName);\r\n\r\n        }\r\n\r\n        let currentLetter = 'A';\r\n\r\n        for (let i = 1; i < this.numberOfGroup2Agents + 1; i++) {\r\n            let group2AgentName = this.group2Name + currentLetter;\r\n\r\n            this.group2Agents.set(group2AgentName, {\r\n                name: group2AgentName,\r\n                match: new Array(),\r\n                ranking: new Array()\r\n            });\r\n\r\n            currentLetter = String.fromCharCode((((currentLetter.charCodeAt(0) + 1) - 65 ) % 26) + 65);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    // generates rankings for all agents\r\n    // changes agent.ranking\r\n    generatePreferences(): void {\r\n        \r\n        for (let agent of Array.from(this.group1Agents.values())) {\r\n            let agent1Rankings = Array.from((new Map(this.group2Agents)).values());\r\n            this.shuffle(agent1Rankings);\r\n            this.group1Agents.get(agent.name).ranking = agent1Rankings;\r\n        }\r\n\r\n        for (let agent of Array.from(this.group2Agents.values())) {\r\n            let agent2Rankings = Array.from((new Map(this.group1Agents)).values());\r\n            this.shuffle(agent2Rankings);\r\n            this.group2Agents.get(agent.name).ranking = agent2Rankings;\r\n        }\r\n\r\n    }\r\n\r\n    populatePreferences(preferences: Map<String, Array<String>>): void {\r\n        // console.log(\"preferences\", preferences);\r\n        let tempCopyList: Agent[];\r\n\r\n        for (let agent of Array.from(this.group1Agents.keys())) {\r\n            tempCopyList = [];\r\n            // this.group1Agents.get(agent).ranking = preferences.get(this.getLastCharacter(String(agent)));\r\n            for (let preferenceAgent of preferences.get(this.getLastCharacter(String(agent)))) {\r\n                tempCopyList.push(this.group2Agents.get(this.group2Name + preferenceAgent));\r\n            }\r\n            this.group1Agents.get(agent).ranking = tempCopyList;\r\n        }\r\n\r\n        for (let agent of Array.from(this.group2Agents.keys())) {\r\n            tempCopyList = [];\r\n            // this.group1Agents.get(agent).ranking = preferences.get(this.getLastCharacter(String(agent)));\r\n            for (let preferenceAgent of preferences.get(this.getLastCharacter(String(agent)))) {\r\n                tempCopyList.push(this.group1Agents.get(this.group1Name + preferenceAgent));\r\n            }\r\n            this.group2Agents.get(agent).ranking = tempCopyList;\r\n        }\r\n    \r\n        console.log(this.group1Agents);\r\n        console.log(this.group2Agents);\r\n\r\n    }\r\n\r\n    // FROM: https://javascript.info/task/shuffle\r\n    shuffle(array: Array<Object>) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n          let j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i\r\n      \r\n          // swap elements array[i] and array[j]\r\n          // we use \"destructuring assignment\" syntax to achieve that\r\n          // you'll find more details about that syntax in later chapters\r\n          // same can be written as:\r\n          // let t = array[i]; array[i] = array[j]; array[j] = t\r\n          [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n\r\n\r\n    getGroupRankings(agents: Map<String, Agent>): Map<String, Array<String>> {\r\n\r\n        let matches: Map<String, Array<String>> = new Map();\r\n\r\n        for (let agent of Array.from(agents.values())) {\r\n            let preferenceList = [];\r\n            for (let match of agent.ranking) {\r\n                preferenceList.push(match.name.slice(match.name.length - 1));\r\n            }\r\n\r\n            let identifier: string = agent.name.slice(agent.name.length - 1);\r\n            // console.log()\r\n\r\n            matches.set(identifier, preferenceList);\r\n\r\n        }\r\n\r\n        return matches;\r\n\r\n    }\r\n\r\n\r\n    clone(mapIn: Map<String, Array<String>>): Map<String, Array<String>> {\r\n        let mapCloned: Map<String, Array<String>> = new Map<String, Array<String>>();\r\n    \r\n        mapIn.forEach((str: Array<String>, key: String, mapObj: Map<String, Array<String>>) => {\r\n          \r\n          //products.slice(0) clone array\r\n          mapCloned.set(key, str.slice(0));\r\n        });\r\n    \r\n        return mapCloned;\r\n    }\r\n\r\n\r\n    update(step: number, stepVariables?: Object): void {\r\n        let currentStep: Step = {\r\n            lineNumber: step,\r\n            freeAgents: Object.assign([], this.freeAgentsOfGroup1),\r\n            matches: new Map(),\r\n            stepVariables: stepVariables,\r\n            group1CurrentPreferences: this.clone(this.group1CurrentPreferences),\r\n            group2CurrentPreferences: this.clone(this.group2CurrentPreferences),\r\n            currentlySelectedAgents: JSON.parse(JSON.stringify(this.currentlySelectedAgents)),\r\n            currentLines: JSON.parse(JSON.stringify(this.currentLines)),\r\n            algorithmSpecificData: JSON.parse(JSON.stringify(this.algorithmSpecificData)),\r\n            relevantPreferences: JSON.parse(JSON.stringify(this.relevantPreferences)),\r\n        }\r\n\r\n        this.algorithmData.commands.push(currentStep);\r\n\r\n    }\r\n\r\n\r\n    getMatches(): Map<String, Array<String>> {\r\n        let matches: Map<String, Array<String>> = new Map();\r\n\r\n        for (let i = 1; i < this.numberOfGroup2Agents + 1; i++) {\r\n            let agentName: string = this.group2Name + String.fromCharCode(i + 64);\r\n            let agent: Agent = this.group2Agents.get(agentName);\r\n\r\n            let matchList: Array<String> = new Array();\r\n\r\n            for (let match of agent.match) {\r\n                matchList.push(match.name);\r\n            }\r\n\r\n            matches.set(agent.name, matchList);\r\n\r\n        }\r\n\r\n        return matches;\r\n\r\n    }\r\n\r\n\r\n    findPositionInMatches(currentAgent: Agent, agentToFind: Agent): number {\r\n        let position: number = currentAgent.ranking.findIndex((agent: { name: string; }) => agent.name == agentToFind.name);\r\n        return position;\r\n    }\r\n\r\n    findPositionInOriginalMatches(currentAgent: Agent, agentToFind: Agent) {\r\n        let originalPreferences = this.originalGroup1CurrentPreferences.get(currentAgent.name[currentAgent.name.length - 1]);\r\n        // console.log(\"Group1\", originalPreferences)\r\n        let position: number = originalPreferences.indexOf(agentToFind.name[agentToFind.name.length - 1]);\r\n        return position;\r\n    }\r\n\r\n    findPositionInOriginalMatchesGroup2(currentAgent: Agent, agentToFind: Agent) {\r\n        let originalPreferences = this.originalGroup2CurrentPreferences.get(currentAgent.name[currentAgent.name.length - 1]);\r\n        // console.log(\"Group2\", originalPreferences)\r\n        let position: number = originalPreferences.indexOf(agentToFind.name[agentToFind.name.length - 1]);\r\n        return position;\r\n    }\r\n\r\n    // findPositionInOriginalMatches(currentAgent: Agent, agentToFind: Agent) {\r\n    //     let originalPreferences = this.originalGroup1CurrentPreferences.get(currentAgent.name[currentAgent.name.length - 1]);\r\n    //     console.log(\"originalPreferences\", originalPreferences)\r\n    //     return 0\r\n    // }\r\n\r\n    getLastCharacter(name: string) {\r\n        return name.slice(name.length - 1);\r\n    }\r\n\r\n    checkArrayEquality(a: Array<string>, b: Array<string>) {\r\n        for (let i = 0; i < a.length; i++) {\r\n          if (a[i] !== b[i]) { return false; }\r\n        }\r\n        return true;\r\n      }\r\n\r\n\r\n    // used to remove elements from currentLines\r\n    removeArrayFromArray(a: Array<Array<string>>, b: Array<string>) {\r\n        let arrayPositionCounter: number = 0;\r\n        for (let subArray of a) {\r\n          if (this.checkArrayEquality(subArray, b)) {\r\n            a.splice(arrayPositionCounter, 1);\r\n          }\r\n          arrayPositionCounter++;\r\n        }\r\n      }\r\n\r\n      // remove all lines in array that start at person\r\n      removePersonFromArray(a: Array<Array<string>>, person: String) {\r\n        let arrayPositionCounter: number = 0;\r\n        for (let subArray of a) {\r\n            if (subArray[0] == person) {\r\n                a.splice(arrayPositionCounter, 1);\r\n            }\r\n            arrayPositionCounter++;\r\n        }\r\n      }\r\n\r\n      // remove all lines leeding to a person from the array\r\n      removeTargetFromArray(a: Array<Array<string>>, person: String) {\r\n        let arrayPositionCounter: number = 0;\r\n        for (let subArray of a) {\r\n            if (subArray[1] == person) {\r\n                a.splice(arrayPositionCounter, 1);\r\n            }\r\n            arrayPositionCounter++;\r\n        }\r\n      }\r\n\r\n\r\n    // #53D26F (green)\r\n    // #C4C4C4 (grey)\r\n    // changePreferenceStyle(preferenceList: Object, person: string, position: number, style: string) {\r\n    changePreferenceStyle(preferenceList: Map<String, Array<String>>, person: string, position: number, style: string) {\r\n\r\n        let currentAgent: string = \"\";\r\n\r\n        // console.log(\"inner\", preferenceList, preferenceList.get(person), preferenceList.get(person)[position], person, position, style)\r\n\r\n        if (preferenceList.get(person)[position].includes(\"#\")) {\r\n        currentAgent = preferenceList.get(person)[position].charAt(preferenceList.get(person)[position].length - 2);\r\n        } else {\r\n        currentAgent = preferenceList.get(person)[position].charAt(preferenceList.get(person)[position].length - 1);\r\n        }\r\n\r\n        if (style == \"green\") {\r\n        style = \"#53D26F\";\r\n        } else if (style == \"red\") {\r\n        style = \"#EB2A2A\";\r\n        } else if (style == \"grey\") {\r\n        style = \"#C4C4C4\";\r\n        } else if (style == \"black\") {\r\n        style = \"#000000\";\r\n        }\r\n\r\n        preferenceList.get(person)[position] = \"{\" + style + currentAgent + \"}\";\r\n\r\n    }\r\n\r\n\r\n    // check if no unmatched pair like each other more than their current partners\r\n    checkStability(allMatches: Map<String, Array<String>>): boolean {\r\n        let stability = true;\r\n\r\n        // for all women\r\n        for (let agent of allMatches.keys()) {\r\n            let agentMatches = allMatches.get(agent);\r\n\r\n            // if agent has matches\r\n            if (agentMatches.length > 0) {\r\n\r\n                // find the position of the last ranked match (for Stable Marriage this will be the only match)\r\n                let lastAgentPosition = this.getLastMatch(agent, agentMatches);\r\n                let agentPreferences: Array<Agent> = this.group2Agents.get(agent).ranking;\r\n\r\n                // for every agent, x, better than match, check:\r\n                //   - if x isn't one of the matches (for HR), then\r\n                //      - check if x likes currentAgent more than their match\r\n                //          - if yes, stability = false\r\n                //          - if no, stability = true\r\n                for (let i = lastAgentPosition - 1; i >= 0; i--) {\r\n                    if (!agentMatches.includes(agentPreferences[i].name)) {\r\n                        let matchPosition = this.findPositionInOriginalMatches(agentPreferences[i], agentPreferences[i].match[0]);\r\n                        let currentAgentPosition = this.findPositionInOriginalMatches(agentPreferences[i], this.group2Agents.get(agent));\r\n                        if (currentAgentPosition < matchPosition) {\r\n                            stability = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return stability;\r\n    }\r\n\r\n    getLastMatch(currentAgent: String, agentMatches: Array<String>): number {\r\n        let furthestIndex: number = 0;\r\n        for (let matchAgent of agentMatches) {\r\n            let matchPosition = this.findPositionInMatches(this.group2Agents.get(currentAgent), this.group1Agents.get(matchAgent));\r\n            if (matchPosition > furthestIndex) {\r\n                furthestIndex = matchPosition;\r\n            }\r\n        }\r\n        return furthestIndex;\r\n    }\r\n\r\n\r\n    abstract match(): AlgorithmData;\r\n\r\n    run(numberOfAgents: number, numberOfGroup2Agents: number = numberOfAgents, preferences: Map<String, Array<String>>, SRstable: boolean = true): AlgorithmData {\r\n        if (numberOfGroup2Agents != numberOfAgents) {\r\n            this.initialise(numberOfAgents, numberOfGroup2Agents);\r\n        } else {\r\n            this.initialise(numberOfAgents);\r\n        }\r\n\r\n        if (numberOfGroup2Agents == 0){\r\n            console.log(\"0 agents in group 2\");\r\n        }\r\n\r\n        console.log(\"run\", SRstable)\r\n        \r\n        if (SRstable) {\r\n            console.log(SRstable, \"true\")\r\n            this.SRstable = true\r\n        } else {\r\n            console.log(SRstable, \"false\")\r\n            this.SRstable = false\r\n        }\r\n\r\n        this.generateAgents();\r\n\r\n        if (preferences) {\r\n            this.populatePreferences(preferences);\r\n        } else {\r\n            this.generatePreferences();\r\n        }\r\n\r\n\r\n       \r\n\r\n        this.group1CurrentPreferences = this.getGroupRankings(this.group1Agents);\r\n        this.originalGroup1CurrentPreferences = this.getGroupRankings(this.group1Agents);\r\n\r\n        this.group2CurrentPreferences = this.getGroupRankings(this.group2Agents);\r\n        this.originalGroup2CurrentPreferences = this.getGroupRankings(this.group2Agents);\r\n\r\n        this.match();\r\n\r\n        this.stable = this.checkStability(this.getMatches());\r\n\r\n        if (!this.stable) {\r\n            console.log(\"Matching is not stable!\");\r\n            return undefined;\r\n        }\r\n\r\n        return this.algorithmData;\r\n\r\n    }\r\n\r\n    \r\n\r\n}","import { AlgorithmData } from \"../interfaces/AlgorithmData\";\r\nimport { MatchingAlgorithm } from \"./MatchingAlgorithm\";\r\nimport { Person } from '../interfaces/Person';\r\nimport { Agent } from \"../interfaces/Agent\";\r\n\r\n\r\nexport abstract class StableRoomMates extends MatchingAlgorithm {\r\n\r\n    constructor() {\r\n        super();\r\n        // console.log(\"StableRoomMates Class\");\r\n    }\r\n\r\n    generatePreferences(): void {\r\n\r\n        console.log(\"Gen Pref\", this.SRstable)\r\n        \r\n\r\n        let data2 = [[\"2\",\"4\",\"6\",\"3\",\"5\"],\r\n                    [\"4\",\"5\",\"6\",\"1\",\"3\"],\r\n                    [\"4\",\"5\",\"6\",\"1\",\"2\"],\r\n                    [\"6\",\"3\",\"1\",\"5\",\"2\"],\r\n                    [\"6\",\"3\",\"4\",\"2\",\"1\"],\r\n                    [\"1\",\"2\",\"4\",\"3\",\"5\"]];\r\n\r\n        \r\n\r\n        let unstable4 = [   [\"2\",\"3\",\"4\",],\r\n                            [\"3\",\"1\",\"4\",],\r\n                            [\"1\",\"2\",\"4\",],\r\n                            [\"1\",\"2\",\"3\",]]\r\n\r\n        let unstable6_1 = [ [\"4\", \"6\", \"5\", \"2\", \"3\"],\r\n                            [\"5\", \"4\", \"3\", \"6\", \"1\"],\r\n                            [\"4\", \"5\", \"2\", \"1\", \"6\"],\r\n                            [\"5\", \"3\", \"1\", \"6\", \"2\"],\r\n                            [\"6\", \"2\", \"1\", \"4\", \"3\"],\r\n                            [\"3\", \"2\", \"4\", \"5\", \"1\"]]\r\n\r\n        let unstable6_2 = [ ['5', '4', '3', '2', '6'],\r\n                            ['3', '5', '6', '1', '4'],\r\n                            ['5', '1', '4', '6', '2'],\r\n                            ['3', '2', '1', '6', '5'],\r\n                            ['2', '3', '6', '4', '1'],\r\n                            ['5', '1', '2', '4', '3']]\r\n\r\n        let unstable6_3 = [ ['5', '2', '6', '4', '3'],\r\n                            ['4', '1', '6', '3', '5'],\r\n                            ['5', '2', '6', '1', '4'],\r\n                            ['5', '2', '6', '1', '3'],\r\n                            ['6', '4', '1', '2', '3'],\r\n                            ['1', '5', '4', '2', '3']]\r\n\r\n      \r\n        let unstable8_1 = [ ['3', '8', '7', '4', '5', '6', '2'],\r\n                            ['5', '3', '4', '1', '6', '7', '8'],\r\n                            ['8', '6', '2', '7', '1', '4', '5'],\r\n                            ['2', '1', '5', '7', '8', '6', '3'],\r\n                            ['4', '1', '7', '2', '6', '8', '3'],\r\n                            ['8', '1', '2', '4', '3', '5', '7'],\r\n                            ['3', '6', '8', '4', '2', '1', '5'],\r\n                            ['7', '1', '5', '4', '6', '3', '2'],]\r\n\r\n        let unstable8_2 = [ ['2', '7', '4', '5', '3', '6', '8'],\r\n                            ['1', '4', '5', '7', '3', '8', '6'],\r\n                            ['1', '7', '8', '5', '2', '6', '4'],\r\n                            ['8', '5', '1', '6', '7', '3', '2'],\r\n                            ['2', '6', '1', '8', '4', '3', '7'],\r\n                            ['5', '3', '2', '7', '1', '4', '8'],\r\n                            ['5', '2', '8', '6', '3', '4', '1'],\r\n                            ['3', '1', '7', '5', '6', '4', '2'],]\r\n\r\n        let unstable8_3 = [ ['7', '6', '5', '3', '4', '2', '8'],\r\n                            ['5', '6', '4', '1', '8', '3', '7'],\r\n                            ['2', '7', '8', '6', '5', '1', '4'],\r\n                            ['8', '3', '6', '2', '5', '7', '1'],\r\n                            ['1', '7', '3', '8', '6', '2', '4'],\r\n                            ['1', '2', '8', '5', '7', '4', '3'],\r\n                            ['1', '2', '8', '6', '5', '3', '4'],\r\n                            ['7', '2', '3', '1', '5', '4', '6'],]\r\n\r\n\r\n        let count = 0;\r\n        let name = \"p\"\r\n\r\n        let nonStableSRInstacens6 = [unstable6_1, unstable6_2, unstable6_3]\r\n        let nonStableSRInstacens8 = [unstable8_1, unstable8_2, unstable8_3]\r\n        let random = 0\r\n        let instance = []\r\n\r\n       \r\n        // generate a random SR instance \r\n        if (this.SRstable) {\r\n            console.log(\"Generating Stable\")\r\n\r\n            for (let agent of Array.from(this.group1Agents.values())) {\r\n            let agent1Rankings = Array.from((new Map(this.group1Agents)).values());\r\n\r\n            let selfIndex = agent1Rankings.indexOf(agent)\r\n\r\n            agent1Rankings.splice(selfIndex, 1)\r\n\r\n            this.shuffle(agent1Rankings);\r\n            this.group1Agents.get(agent.name).ranking = agent1Rankings;\r\n\r\n            } \r\n\r\n        // pick a non-stable instance \r\n        } else {\r\n            console.log(\"Generating UnStable\")\r\n\r\n            if (this.numberOfAgents == 2){\r\n                this.SRstable = true\r\n            } else if (this.numberOfAgents == 4) {\r\n                instance = unstable4\r\n            } else if (this.numberOfAgents == 6) {\r\n                random = Math.floor(Math.random() * nonStableSRInstacens6.length);\r\n                instance = nonStableSRInstacens6[random]\r\n            } else if (this.numberOfAgents == 8) {\r\n                random = Math.floor(Math.random() * nonStableSRInstacens8.length);\r\n                instance = nonStableSRInstacens8[random]\r\n            } else {\r\n                instance = []\r\n            }\r\n\r\n            for (let [key, person] of this.group1Agents.entries()){   \r\n                for (let i = 0 ; i < this.group1Agents.size - 1 ; i++){\r\n\r\n                    person.ranking[i] = this.group1Agents.get(name + String(instance[count][i]));\r\n                }\r\n                count++;\r\n            }\r\n        }\r\n// for (let [key, person] of this.group1Agents.entries()){   \r\n        //     for (let i = 0 ; i < this.group1Agents.size - 1 ; i++){\r\n        //         //console.log(this.group1Agents.get(data2[count][i]), data2[count][i]);\r\n        //         person.ranking[i] = this.group1Agents.get(name + String(data4[count][i]));\r\n        //     }\r\n        //     count++;\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    populatePreferences(preferences: Map<String, Array<String>>): void {\r\n        console.log(\"preferences\", preferences);\r\n        let tempCopyList: Agent[];\r\n\r\n        for (let agent of Array.from(this.group1Agents.keys())) {\r\n            tempCopyList = [];\r\n            // this.group1Agents.get(agent).ranking = preferences.get(this.getLastCharacter(String(agent)));\r\n            for (let preferenceAgent of preferences.get(this.getLastCharacter(String(agent)))) {\r\n                tempCopyList.push(this.group1Agents.get(this.group1Name + preferenceAgent));\r\n            }\r\n            this.group1Agents.get(agent).ranking = tempCopyList;\r\n        }\r\n\r\n        for (let agent of Array.from(this.group2Agents.keys())) {\r\n            tempCopyList = [];\r\n            // this.group1Agents.get(agent).ranking = preferences.get(this.getLastCharacter(String(agent)));\r\n            for (let preferenceAgent of preferences.get(this.getLastCharacter(String(agent)))) {\r\n                tempCopyList.push(this.group1Agents.get(this.group1Name + preferenceAgent));\r\n            }\r\n            this.group2Agents.get(agent).ranking = tempCopyList;\r\n        }\r\n    \r\n        console.log(this.group1Agents);\r\n        console.log(this.group2Agents);\r\n\r\n    }\r\n\r\n   \r\n\r\n    \r\n\r\n    abstract match(): AlgorithmData;\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { CheckboxControlValueAccessor } from '@angular/forms';\r\nimport { ExtendedGaleShapley } from '../../abstract-classes/ExtendedGaleShapley';\r\nimport { GaleShapley } from '../../abstract-classes/GaleShapley';\r\nimport { Agent } from '../../interfaces/Agent';\r\nimport { AlgorithmData } from '../../interfaces/AlgorithmData';\r\nimport { Hospital } from '../../interfaces/Hospital';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HrHospitalEgsService extends GaleShapley{\r\n\r\n  group1Name = \"resident\";\r\n  group2Name = \"hospital\";\r\n\r\n  group2Agents: Map<String, Hospital> = new Map();\r\n\r\n  hospitalCapacity: Map<string, number> = new Map();\r\n\r\n  freeAgentsOfGroup2: Array<String> = new Array();\r\n\r\n\r\n  generateAgents() {\r\n      for (let i = 1; i < this.numberOfAgents + 1; i++) {\r\n          let group1AgentName = this.group1Name + i;\r\n\r\n          this.group1Agents.set(group1AgentName, {\r\n              name: group1AgentName,\r\n              match: new Array(),\r\n              ranking: new Array(),\r\n          });\r\n\r\n          this.freeAgentsOfGroup1.push(group1AgentName);\r\n\r\n      }\r\n\r\n      let currentLetter = 'A';\r\n\r\n      for (let i = 1; i < this.numberOfGroup2Agents + 1; i++) {\r\n          let group2AgentName = this.group2Name + currentLetter;\r\n\r\n          let availableSpaces = this.getRandomInt(1, this.numberOfAgents-2);\r\n\r\n          this.group2Agents.set(group2AgentName, {\r\n              name: group2AgentName,\r\n              match: new Array(),\r\n              ranking: new Array(),\r\n              availableSpaces: availableSpaces\r\n          });\r\n\r\n\t\t//   console.log(group2AgentName)\r\n\t\t//   console.log(this.freeAgentsOfGroup2)\r\n\r\n\t\t  this.freeAgentsOfGroup2.push(group2AgentName);\r\n\r\n          this.hospitalCapacity[currentLetter] = availableSpaces;\r\n\r\n          currentLetter = String.fromCharCode((((currentLetter.charCodeAt(0) + 1) - 65 ) % 26) + 65);\r\n      }\r\n      this.algorithmSpecificData[\"hospitalCapacity\"] = this.hospitalCapacity;\r\n  }\r\n\r\n  getRandomInt(min: number, max: number): number {\r\n\tmin = Math.ceil(min);\r\n\tmax = Math.floor(max);\r\n\treturn Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\n\r\n// returns next possible resident for a hospital - null if none\r\n// one that is not assigned to the hospital and is on the hospitals preferance list\r\ngetNextPotentialProposee(hospital: Hospital){\r\n\r\n\t// for each resident in ranking \r\n\tfor (let i = 0 ; i < hospital.ranking.length ; i++){\r\n\t\tlet proposee = hospital.ranking[i]\r\n\r\n\t\t// if resident is not assigned to hospital - return\r\n\t\tif (proposee.match[0] != hospital) {\r\n\t\t\treturn proposee;\r\n\t\t}\r\n\t}\r\n\t// return null there are no un assigned residents \r\n\treturn null;\r\n}\r\n\r\ngetWorstResident(hospital: Hospital): Agent {\r\n\r\n\tlet positionMap: Map<number, Agent> = new Map();\r\n\r\n\tfor (let resident of hospital.match) {\r\n\t\tpositionMap.set(this.findPositionInMatches(hospital, resident), resident);\r\n\t}\r\n\r\n\t// use destructuring assingment to extract data from array into distinct variables\r\n\t// return the worst resident from the hospital's matches\r\n\treturn positionMap.get(Math.max(...Array.from(positionMap.keys())));\r\n}\r\n\r\nbreakAssignment(resident: Agent, hospital: Agent): void {\r\n\r\n\t// console.log(\"break Assignment\")\r\n\t// console.log(resident.name, resident.match[0].name, hospital.name)\r\n\r\n\t\r\n\r\n\t// get pos in each rankings lists to remove later \r\n\tlet matchPosition_resident = this.findPositionInMatches(hospital, resident);\r\n\tlet matchPosition_hospital = this.findPositionInMatches(resident, hospital);\r\n\r\n\tlet matchPosition_resident_original = this.findPositionInOriginalMatchesGroup2(hospital, resident);\r\n\r\n\t// console.log(matchPosition_resident, matchPosition_hospital)\r\n\t// console.log(hospital.ranking)\r\n\t\r\n\tthis.removeArrayFromArray(this.currentLines, [this.getLastCharacter(resident.name), this.getLastCharacter(hospital.name), \"green\"]);\r\n\r\n\tthis.changePreferenceStyle(this.group1CurrentPreferences, this.getLastCharacter(resident.name), this.originalGroup1CurrentPreferences.get(this.getLastCharacter(resident.name)).findIndex(h => h == this.getLastCharacter(hospital.name)), \"grey\");\r\n\tthis.changePreferenceStyle(this.group2CurrentPreferences, this.getLastCharacter(hospital.name), matchPosition_resident_original, \"red\");\r\n\r\n\t// unassign r and h'\r\n\tthis.update(5, {\"%oldHospital%\": resident.match[0].name, \"%resident%\": resident.name});\r\n\r\n\tthis.changePreferenceStyle(this.group2CurrentPreferences, this.getLastCharacter(hospital.name), matchPosition_resident_original, \"grey\");\r\n\r\n\r\n\tthis.update(1)\r\n\r\n\r\n\t// remove hospital from resident match \r\n\tresident.match.splice(0, 1);\r\n\t// remove resident from hospital match \r\n\thospital.match.splice(hospital.match.findIndex((agent: { name: string; }) => agent.name == resident.name), 1);\r\n\r\n\t// REMOVE EACH OTHER FROM RANKING LIST \r\n\thospital.ranking.splice(matchPosition_resident, 1); \t// HOSPITAL \r\n\tresident.ranking.splice(matchPosition_hospital, 1) \t\t//RESIDENT \r\n\r\n\tlet hospitalLastChar = this.getLastCharacter(hospital.name);\r\n\tlet currentHospitalCapacity: string = this.algorithmSpecificData[\"hospitalCapacity\"][hospitalLastChar];\r\n\r\n\tthis.algorithmSpecificData[\"hospitalCapacity\"][hospitalLastChar] = String(currentHospitalCapacity).charAt(currentHospitalCapacity.length);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t// console.log(\"rankings after - h / r\")\r\n\t// console.log(hospital.ranking, resident.ranking)\r\n\r\n\r\n\r\n\r\n\t\r\n\r\n  }\r\n\r\n  provisionallyAssign(resident: Agent, hospital: Hospital) {\r\n\t// provisionally assign r to h;\r\n\r\n\tlet agentLastChar = this.getLastCharacter(resident.name);\r\n\tlet proposeeLastChar = this.getLastCharacter(hospital.name);\r\n\r\n\tthis.removeArrayFromArray(this.currentLines, [agentLastChar, proposeeLastChar, \"red\"]);\r\n\r\n\tlet greenLine = [agentLastChar, proposeeLastChar, \"green\"];\r\n\tthis.currentLines.push(greenLine);\r\n\r\n\tthis.changePreferenceStyle(this.group1CurrentPreferences, agentLastChar, this.originalGroup1CurrentPreferences.get(agentLastChar).findIndex(h => h == this.getLastCharacter(hospital.name)), \"green\");\r\n\tthis.changePreferenceStyle(this.group2CurrentPreferences, proposeeLastChar, this.findPositionInMatches(hospital, resident), \"green\");\r\n\r\n\tif (hospital.match.length >= hospital.availableSpaces - 1) {\r\n\t  this.algorithmSpecificData[\"hospitalCapacity\"][proposeeLastChar] = \"{#53D26F\" + this.algorithmSpecificData[\"hospitalCapacity\"][proposeeLastChar] + \"}\";\r\n\t}\r\n\r\n\r\n\tresident.match[0] = hospital;\r\n\thospital.match.push(resident);\r\n}\r\n\r\nremoveRuledOutPreferences(resident: Agent, hospital: Hospital): void {\r\n\r\n    \r\n \r\n      if (hospital.match.length >= hospital.availableSpaces) {\r\n          let worstResident: Agent = this.getWorstResident(hospital);\r\n          let worstResidentPosition: number = this.findPositionInMatches(hospital, worstResident);\r\n\r\n\r\n          let hospitalRankingClearCounter: number = worstResidentPosition + 1;\r\n\r\n     \t // for each successor h' of h on r's list \r\n\t\tthis.update(7, {\"%resident%\" : resident.name, \"%hospital%\" : hospital.name});\r\n\t\t\r\n          for (let i = worstResidentPosition + 1; i < hospital.ranking.length; i++) {\r\n\r\n              let hospitalPosition: number = this.findPositionInMatches(hospital.ranking[i], hospital);\r\n              this.relevantPreferences.push(this.getLastCharacter(hospital.ranking[i].name));\r\n\r\n              this.changePreferenceStyle(this.group1CurrentPreferences, this.getLastCharacter(hospital.ranking[i].name), this.originalGroup1CurrentPreferences.get(this.getLastCharacter(hospital.ranking[i].name)).findIndex(h => h == this.getLastCharacter(hospital.name)), \"grey\");\r\n              this.changePreferenceStyle(this.group2CurrentPreferences, this.getLastCharacter(hospital.name), hospitalRankingClearCounter, \"grey\");\r\n              \r\n\t\t\t  // remove r' and h from each others preferance list\r\n              this.update(8, {\"%hospital%\": hospital.name, \"%resident%\": hospital.ranking[i].name});\r\n\r\n\t\t\t  hospital.ranking[i].ranking.splice(hospitalPosition, 1);\r\n  \r\n\r\n              hospital.ranking.splice(i, 1);\r\n              i -= 1;\r\n              \r\n              hospitalRankingClearCounter++;\r\n\r\n              this.relevantPreferences.pop();\r\n\r\n          }\r\n\r\n      }\r\n\r\n  }\r\n\r\n  print_matches(){\r\n\r\n\tfor (let [key, resident] of this.group1Agents.entries()){\r\n\t\t// console.log(key, resident.match)\r\n\t}\r\n\r\n\tfor (let [key, hospital] of this.group2Agents.entries()){\r\n\t\t// console.log(key, hospital.match)\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  shouldContinueMatching(hospital: Hospital): boolean {\r\n\treturn true;\r\n}\r\n\r\n// returns true if there is a resident on the list that is not matched with that hospital \r\ncheckHospitalPreferanceList(hospital: Hospital) {\r\n\r\n\tfor (let resident of hospital.ranking){\r\n\t\t// if they are not matched to the hospital \r\n\t\tif (resident.match[0] != hospital){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}\r\n\r\n// returns all the hospitals that should be looked at \r\n// they are undersubbed and there is someone not assigned to them that the hospital wants \r\ncheckFreeHospitals(){\r\n\r\n\tlet freeHospitals = []\r\n\tfor (let [key, hospital] of this.group2Agents.entries()){\r\n\r\n\t\tlet hospitalCap = this.algorithmSpecificData[\"hospitalCapacity\"][this.getLastCharacter(hospital.name)]\r\n\r\n\t\t// if hospital in undersubbed and there is someone on the list that is not assigned to them \r\n\t\tif (hospital.match.length < hospitalCap && this.checkHospitalPreferanceList(hospital)){\r\n\t\t\tfreeHospitals.push(hospital.name)\r\n\t\t}\r\n\t}\r\n\r\n\treturn freeHospitals\r\n}\r\n\r\n\r\n\r\n  match(): AlgorithmData {\r\n\t  \r\n\r\n\t// this.group1Agents - residents \r\n\t// this.group2Agents - hospitals\r\n\r\n\t// console.log(\"groups\")\r\n\t// console.log(this.group1Agents, this.group1Agents)\r\n\r\n\t// \"Set each hospital and resident to be completely free\",\r\n\tthis.update(1)\r\n\r\n\r\n\t// while a HOSPITAL h is under-subscribed and \r\n\t// h's list contains a a RESIDENT r not assigned to h\r\n\r\n\tlet counter_break = 0\r\n\r\n\twhile (this.freeAgentsOfGroup2.length > 0){\r\n\t\t\r\n\r\n\t\t// get first hospital on list \r\n\t\tlet currentHospital = this.group2Agents.get(this.freeAgentsOfGroup2[0]);\r\n\t\t\r\n\t\t// \"While some hospital h is - undersubscibed, \r\n\t\t// and has a resident r on h's preferance list that is no assigned to h\",\r\n\t\tthis.update(2, {\"%hospital%\" : currentHospital.name});\r\n\r\n\t\t// console.log(currentHospital)\r\n\r\n\t\tif (currentHospital.ranking.length <= 0 || !this.getNextPotentialProposee(currentHospital)){\r\n\t\t\tthis.freeAgentsOfGroup2.shift();\r\n\t\t} else {\r\n\r\n\t\t\tlet potentialProposee: Agent = this.getNextPotentialProposee(currentHospital);\r\n\r\n\t\t\t// a RESIDENT r that is not assigned to h, but is on its pref list \r\n\t\t\t// \"r := first resident on h's prefernace list not assigned to h\",\r\n\t\t\tthis.update(3, {\"%resident%\" : potentialProposee.name})\r\n\t\t\t\r\n\t\t\t// console.log(\"potentialProposee\", potentialProposee)\r\n\t\t\t\r\n\t\t\t// if proposee is assigned to a different hospital then un assign\r\n\t\t\t\r\n\t\t\t// if r is assigned to another hospital h\r\n\t\t\tthis.update(4, {\"%resident%\" : potentialProposee.name})\r\n\t\t\t\r\n\t\t\tif (potentialProposee.match[0] != null){\r\n\t\t\t\tthis.breakAssignment(potentialProposee, potentialProposee.match[0]);\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t\t// MATHCING MIGHT NOT STABLE \r\n\t\t\t// VIZ HAS BEEN WORKED ON WITH COMMENTS NEEDS TESTING \r\n\t\t\t// UPDATES MAY BE IN WRONG PLACE TO ACCOMADATE THE CHNAGING VIZ LINES - NEEDS TESTING \r\n\r\n\t\t\t// provisionally assign r to h\r\n\t\t\tthis.provisionallyAssign(potentialProposee, currentHospital);\r\n\t\t\tthis.update(6, {\"%resident%\" : potentialProposee.name, \"%hospital%\" : currentHospital.name})\r\n\r\n\r\n\t\t\tthis.removeRuledOutPreferences(potentialProposee, currentHospital);\r\n\r\n\t\t\tthis.freeAgentsOfGroup2 = this.checkFreeHospitals()\r\n\r\n\t\t\t// continous loop as guessed + not clear way to define/get free hospitals\r\n\t\t\t// rankings should be deleted until convergence?\r\n\r\n\t\t\tthis.freeAgentsOfGroup2 = this.checkFreeHospitals()\r\n\t\t\t// console.log(\"free Agents on iteration\", counter_break, this.freeAgentsOfGroup2)\r\n\r\n\t\t\tif (this.shouldContinueMatching(currentHospital)) {\r\n\t\t\t\tthis.freeAgentsOfGroup1.shift();\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t}\r\n\r\n\r\n\t// breaking to stop infinite loop \r\n\t// break;\r\n\r\n\tcounter_break = counter_break + 1;\r\n\t// console.log(counter_break > 20)\r\n\r\n\t\r\n\t \r\n\tif (counter_break > 200){\r\n\t\t// console.log(\"Done ---- Done ----\")\r\n\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t// stable matching found \r\n\tthis.update(9)\r\n\tthis.print_matches();\r\n\treturn;\r\n  }\r\n\r\n}\r\n\r\n// MAY PRODUCE UNSTABLE MATCHINGS DUE TO BLOCKING PAIRS - CHECKED BY WEBAPP\r\n// OTHER ISSUES - SOME HOSPITALS/RESIDENTS ARE NOT MACTHED DUE To TAKEN BY OTHER HOSPITALS\r\n// AND THEIR PREFERANCE LIST BEING EMPTYED BY PREVOUIS STEPS \r\n\r\n// NEEDS RESEARCJ TO FIX - I THINK I PRODUCES ","import { Injectable } from '@angular/core';\r\nimport { ExtendedGaleShapley } from '../../abstract-classes/ExtendedGaleShapley';\r\nimport { Agent } from '../../interfaces/Agent';\r\nimport { Hospital } from '../../interfaces/Hospital';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HrResidentEgsService extends ExtendedGaleShapley {\r\n\r\n  group1Name = \"resident\";\r\n  group2Name = \"hospital\";\r\n\r\n  group2Agents: Map<String, Hospital> = new Map();\r\n\r\n  hospitalCapacity: Map<string, number> = new Map();\r\n\r\n\r\n  generateAgents() {\r\n      for (let i = 1; i < this.numberOfAgents + 1; i++) {\r\n          let group1AgentName = this.group1Name + i;\r\n\r\n          this.group1Agents.set(group1AgentName, {\r\n              name: group1AgentName,\r\n              match: new Array(),\r\n              ranking: new Array(),\r\n          });\r\n\r\n          this.freeAgentsOfGroup1.push(group1AgentName);\r\n\r\n      }\r\n\r\n      let currentLetter = 'A';\r\n\r\n      for (let i = 1; i < this.numberOfGroup2Agents + 1; i++) {\r\n          let group2AgentName = this.group2Name + currentLetter;\r\n\r\n          let availableSpaces = this.getRandomInt(1, this.numberOfAgents-2);\r\n\r\n          this.group2Agents.set(group2AgentName, {\r\n              name: group2AgentName,\r\n              match: new Array(),\r\n              ranking: new Array(),\r\n              availableSpaces: availableSpaces\r\n          });\r\n\r\n          this.hospitalCapacity[currentLetter] = availableSpaces;\r\n\r\n          currentLetter = String.fromCharCode((((currentLetter.charCodeAt(0) + 1) - 65 ) % 26) + 65);\r\n      }\r\n      this.algorithmSpecificData[\"hospitalCapacity\"] = this.hospitalCapacity;\r\n  }\r\n\r\n  print_matches(){\r\n\r\n\tfor (let [key, resident] of this.group1Agents.entries()){\r\n\t\tconsole.log(key, resident.match)\r\n\t}\r\n\r\n\tfor (let [key, hospital] of this.group2Agents.entries()){\r\n\t\tconsole.log(key, hospital.match)\r\n\r\n\t}\r\n}\r\n\r\n\r\n  getRandomInt(min: number, max: number): number {\r\n      min = Math.ceil(min);\r\n      max = Math.floor(max);\r\n      return Math.floor(Math.random() * (max - min + 1) + min)\r\n  }\r\n\r\n\r\n  getWorstResident(hospital: Hospital): Agent {\r\n\r\n      let positionMap: Map<number, Agent> = new Map();\r\n\r\n      for (let resident of hospital.match) {\r\n          positionMap.set(this.findPositionInMatches(hospital, resident), resident);\r\n      }\r\n\r\n      // use destructuring assingment to extract data from array into distinct variables\r\n      // return the worst resident from the hospital's matches\r\n      return positionMap.get(Math.max(...Array.from(positionMap.keys())));\r\n  }\r\n\r\n\r\n  getNextPotentialProposee(hospital: Hospital): Agent {\r\n      // return first hospital on r's list\r\n      return hospital.ranking[0];\r\n  }\r\n\r\n  breakAssignment(resident: Agent, hospital: Hospital): void {\r\n\r\n    this.update(4, {\"%hospital%\": hospital.name, \"%capacity%\": hospital.availableSpaces, \"%resident%\": resident.name});\r\n    if (hospital.match.length >= hospital.availableSpaces) {\r\n        let worstResident = this.getWorstResident(hospital);\r\n        this.update(5, {\"%hospital%\": hospital.name, \"%worstResident%\": worstResident.name});\r\n\r\n\r\n        let matchPosition = this.findPositionInMatches(hospital, worstResident);\r\n\r\n        this.removeArrayFromArray(this.currentLines, [this.getLastCharacter(worstResident.name), this.getLastCharacter(hospital.name), \"green\"]);\r\n\r\n        this.changePreferenceStyle(this.group1CurrentPreferences, this.getLastCharacter(worstResident.name), this.originalGroup1CurrentPreferences.get(this.getLastCharacter(worstResident.name)).findIndex(h => h == this.getLastCharacter(hospital.name)), \"grey\");\r\n        this.changePreferenceStyle(this.group2CurrentPreferences, this.getLastCharacter(hospital.name), matchPosition, \"grey\");\r\n\r\n        this.freeAgentsOfGroup1.push(worstResident.name);\r\n\r\n        hospital.match.splice(hospital.match.findIndex((agent: { name: string; }) => agent.name == worstResident.name), 1);\r\n        hospital.ranking.splice(matchPosition, 1);\r\n\r\n        worstResident.match.splice(0, 1);\r\n        worstResident.ranking.splice(this.findPositionInMatches(worstResident, hospital), 1);\r\n\r\n        let hospitalLastChar = this.getLastCharacter(hospital.name);\r\n        let currentHospitalCapacity: string = this.algorithmSpecificData[\"hospitalCapacity\"][hospitalLastChar];\r\n\r\n        this.algorithmSpecificData[\"hospitalCapacity\"][hospitalLastChar] = String(currentHospitalCapacity).charAt(currentHospitalCapacity.length - 2);\r\n\r\n        this.update(6, {\"%hospital%\": hospital.name, \"%worstResident%\": worstResident.name});\r\n\r\n    }\r\n  }\r\n\r\n  provisionallyAssign(resident: Agent, hospital: Hospital) {\r\n      // provisionally assign r to h;\r\n\r\n      let agentLastChar = this.getLastCharacter(resident.name);\r\n      let proposeeLastChar = this.getLastCharacter(hospital.name);\r\n\r\n      this.removeArrayFromArray(this.currentLines, [agentLastChar, proposeeLastChar, \"red\"]);\r\n\r\n      let greenLine = [agentLastChar, proposeeLastChar, \"green\"];\r\n      this.currentLines.push(greenLine);\r\n\r\n      this.changePreferenceStyle(this.group1CurrentPreferences, agentLastChar, this.originalGroup1CurrentPreferences.get(agentLastChar).findIndex(h => h == this.getLastCharacter(hospital.name)), \"green\");\r\n      this.changePreferenceStyle(this.group2CurrentPreferences, proposeeLastChar, this.findPositionInMatches(hospital, resident), \"green\");\r\n\r\n      if (hospital.match.length >= hospital.availableSpaces - 1) {\r\n        this.algorithmSpecificData[\"hospitalCapacity\"][proposeeLastChar] = \"{#53D26F\" + this.algorithmSpecificData[\"hospitalCapacity\"][proposeeLastChar] + \"}\";\r\n      }\r\n\r\n      this.update(7, {\"%resident%\": resident.name, \"%hospital%\": hospital.name});\r\n      resident.match[0] = hospital;\r\n      hospital.match.push(resident);\r\n  }\r\n\r\n  removeRuledOutPreferences(resident: Agent, hospital: Hospital): void {\r\n\r\n    this.update(8, {\"%resident%\": resident.name, \"%hospital%\": hospital.name});\r\n\r\n      if (hospital.match.length >= hospital.availableSpaces) {\r\n          let worstResident: Agent = this.getWorstResident(hospital);\r\n          let worstResidentPosition: number = this.findPositionInMatches(hospital, worstResident);\r\n\r\n          this.update(9, {\"%hospital%\": hospital.name, \"%worstResident%\": worstResident.name});\r\n\r\n          let hospitalRankingClearCounter: number = worstResidentPosition + 1;\r\n\r\n      // for each successor h' of h on r's list {\r\n          for (let i = worstResidentPosition + 1; i < hospital.ranking.length; i++) {\r\n\r\n              let hospitalPosition: number = this.findPositionInMatches(hospital.ranking[i], hospital);\r\n              this.relevantPreferences.push(this.getLastCharacter(hospital.ranking[i].name));\r\n\r\n              this.update(10, {\"%hospital%\": hospital.name, \"%nextResident%\": hospital.ranking[i].name});\r\n\r\n              this.changePreferenceStyle(this.group1CurrentPreferences, this.getLastCharacter(hospital.ranking[i].name), this.originalGroup1CurrentPreferences.get(this.getLastCharacter(hospital.ranking[i].name)).findIndex(h => h == this.getLastCharacter(hospital.name)), \"grey\");\r\n\r\n              this.changePreferenceStyle(this.group2CurrentPreferences, this.getLastCharacter(hospital.name), hospitalRankingClearCounter, \"grey\");\r\n              hospital.ranking[i].ranking.splice(hospitalPosition, 1);\r\n  \r\n              // remove h' and r from each other's lists\r\n              this.update(11, {\"%hospital%\": hospital.name, \"%nextResident%\": hospital.ranking[i].name});\r\n\r\n              hospital.ranking.splice(i, 1);\r\n              i -= 1;\r\n              \r\n              hospitalRankingClearCounter++;\r\n\r\n              this.relevantPreferences.pop();\r\n\r\n          }\r\n\r\n      }\r\n\r\n  }\r\n\r\n\r\n  shouldContinueMatching(hospital: Hospital): boolean {\r\n      return true;\r\n  }\r\n\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { EgsOneToMany } from '../../abstract-classes/EgsOneToMany';\r\nimport { Agent } from '../../interfaces/Agent';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EgsStableMarriageService extends EgsOneToMany {\r\n\r\n  group1Name = \"man\";\r\n  group2Name = \"woman\";\r\n\r\n  shouldContinueMatching(currentAgent: Agent): boolean {\r\n      return true;\r\n  }\r\n\r\n  getNextPotentialProposee(currentAgent: Agent): Agent {\r\n      return currentAgent.ranking[0];\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { GaleShapley } from '../../abstract-classes/GaleShapley';\r\nimport { Agent } from '../../interfaces/Agent';\r\nimport { AlgorithmData } from '../../interfaces/AlgorithmData';\r\nimport { Man } from '../../interfaces/Man';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GsStableMarriageService extends GaleShapley {\r\n\r\n  group1Name = \"man\";\r\n  group2Name = \"woman\";\r\n\r\n  group1Agents: Map<String, Man> = new Map();\r\n\r\n\r\n  generateAgents() {\r\n      for (let i = 1; i < this.numberOfAgents + 1; i++) {\r\n          let group1AgentName = this.group1Name + i;\r\n\r\n          this.group1Agents.set(group1AgentName, {\r\n              name: group1AgentName,\r\n              match: new Array(),\r\n              ranking: new Array(),\r\n              lastProposed: 0\r\n          });\r\n\r\n          this.freeAgentsOfGroup1.push(group1AgentName);\r\n\r\n      }\r\n\r\n      let currentLetter = 'A';\r\n\r\n      for (let i = 1; i < this.numberOfGroup2Agents + 1; i++) {\r\n          let group2AgentName = this.group2Name + currentLetter;\r\n\r\n          this.group2Agents.set(group2AgentName, {\r\n              name: group2AgentName,\r\n              match: new Array(),\r\n              ranking: new Array(),\r\n          });\r\n\r\n          currentLetter = String.fromCharCode((((currentLetter.charCodeAt(0) + 1) - 65 ) % 26) + 65);\r\n      }\r\n\r\n  }\r\n\r\n\r\n  match(): AlgorithmData {\r\n      this.update(1);\r\n  \r\n      // console.log(\"\\n\\nAlgorithm Steps:\");\r\n\r\n    //   console.log(\"Here\", this.group1Agents)\r\n    //   console.log(this.getGroupRankings(this.group1Agents))\r\n  \r\n      // 2: while some man m is free do\r\n      while (this.freeAgentsOfGroup1.length > 0) {\r\n\r\n          this.currentlySelectedAgents = [];\r\n          this.relevantPreferences = [];\r\n        \r\n          let man: Man = this.group1Agents.get(this.freeAgentsOfGroup1[0]);\r\n          this.relevantPreferences.push(man[\"name\"].substring(3));\r\n          this.currentlySelectedAgents.push(man[\"name\"].substring(3));\r\n\r\n        //   console.log(\"in loop\", man.name)\r\n\r\n          this.update(2, {\"%man%\": man.name});\r\n          // console.log(\"-------\");\r\n\r\n          // 3: w = most preferred woman on m’s list to which he has not yet proposed;\r\n          let woman: Agent = man.ranking[man.lastProposed];\r\n\r\n          this.currentlySelectedAgents.push(woman[\"name\"].substring(5));\r\n          this.relevantPreferences.push(woman[\"name\"].substring(5));\r\n\r\n          let redLine = [man[\"name\"].substring(3), woman[\"name\"].substring(5), \"red\"];\r\n          this.currentLines.push(redLine);\r\n    \r\n          let greenLine = [];\r\n    \r\n        //   console.log(\"change...\", woman[\"name\"].substring(5), this.findPositionInMatches(woman, man), \"red\")\r\n\r\n          this.changePreferenceStyle(this.group2CurrentPreferences, woman[\"name\"].substring(5), this.findPositionInMatches(woman, man), \"red\");\r\n          this.changePreferenceStyle(this.group1CurrentPreferences, man[\"name\"].substring(3), this.findPositionInMatches(man, woman), \"red\");\r\n\r\n          this.update(3, {\"%woman%\": woman.name, \"%man%\": man.name});\r\n\r\n          // console.log(\"Man: \" + man[\"name\"]);\r\n          // console.log(\"Woman: \" + woman[\"name\"]);\r\n\r\n          man.lastProposed += 1;\r\n          // man[\"ranking\"].shift();\r\n          this.update(4, {\"%woman%\": woman.name});\r\n\r\n          if (woman.match.length <= 0) {\r\n              // console.log(woman[\"name\"] + \" was free, so matching her with \" + man[\"name\"]);\r\n              woman.match.splice(0, 1);\r\n              woman.match.push(man);\r\n              man.match[0] = woman;\r\n              this.freeAgentsOfGroup1.shift();\r\n\r\n              // colour preferences (for when a partner is instantly selected)\r\n              this.changePreferenceStyle(this.group2CurrentPreferences, woman[\"name\"].substring(5), this.findPositionInMatches(woman, man), \"green\");\r\n              this.changePreferenceStyle(this.group1CurrentPreferences, man[\"name\"].substring(3), this.findPositionInMatches(man, woman), \"green\");\r\n\r\n              this.removeArrayFromArray(this.currentLines, redLine);\r\n              // this.currentLines = this.currentLines.filter(arr => arr[0] != redLine[0] && arr[1] != redLine[1] && arr[2] != redLine[2]);\r\n              greenLine = [man[\"name\"].substring(3), woman[\"name\"].substring(5), \"green\"];\r\n              this.currentLines.push(greenLine);\r\n\r\n              this.update(5, {\"%woman%\": woman.name, \"%man%\": man.name});\r\n          } else {\r\n              this.relevantPreferences.push(woman.match[0].name.substring(3));\r\n              this.update(6, {\"%woman%\": woman.name, \"%man%\": man.name, \"%match%\": woman.match[0].name})\r\n              let manName = man.name;\r\n              this.changePreferenceStyle(this.group2CurrentPreferences, woman[\"name\"].substring(5), this.findPositionInMatches(woman, man), \"red\");\r\n              // console.log(\"Index of current match (\" + woman[\"match\"][\"name\"] + \"): \" + woman[\"ranking\"].findIndex(((man: { name: string; }) => man.name == woman[\"match\"][\"name\"])));\r\n              // console.log(\"Index of man (\" + man[\"name\"] + \"): \" + woman[\"ranking\"].findIndex(((man: { name: string; }) => man.name == manName)) );\r\n              this.update(7, {\"%woman%\": woman.name, \"%man%\": man.name, \"%match%\": woman.match[0].name})\r\n\r\n              \r\n\r\n              if (woman.ranking.findIndex(((man: { name: string; }) => man.name == woman.match[0].name)) > woman.ranking.findIndex(((man: { name: string; }) => man.name == manName))) {\r\n\r\n                  this.changePreferenceStyle(this.group2CurrentPreferences, woman[\"name\"].substring(5), this.findPositionInMatches(woman, woman[\"match\"][0]), \"grey\");\r\n                  this.changePreferenceStyle(this.group1CurrentPreferences, woman.match[0].name.substring(3), this.findPositionInMatches(woman.match[0], woman), \"grey\");\r\n                  this.changePreferenceStyle(this.group2CurrentPreferences, woman[\"name\"].substring(5), this.findPositionInMatches(woman, man), \"green\");\r\n      \r\n                  this.removeArrayFromArray(this.currentLines, redLine);\r\n                  this.removeArrayFromArray(this.currentLines, [woman.match[0].name.substring(3), woman[\"name\"].substring(5), \"green\"]);\r\n\r\n                  // console.log(woman[\"name\"] + \" prefers \" + man[\"name\"] + \" (current match) to \" + woman[\"match\"][\"name\"] + \" (\" + woman[\"match\"][\"name\"] + \" is free, \" + man[\"name\"] + \" engaged to \" + woman[\"name\"] + \")\");\r\n                  let match: string = woman.match[0].name;\r\n\r\n                  this.freeAgentsOfGroup1.push(match);\r\n                  woman.match[0] = man;\r\n\r\n                  greenLine = [man[\"name\"].substring(3), woman[\"name\"].substring(5), \"green\"];\r\n                  this.currentLines.push(greenLine);\r\n        \r\n                  this.changePreferenceStyle(this.group1CurrentPreferences, man[\"name\"].substring(3), this.findPositionInMatches(man, woman), \"green\");        \r\n\r\n                  this.freeAgentsOfGroup1.shift();\r\n                  this.update(8, {\"%woman%\": woman.name, \"%man%\": man.name, \"%match%\": match})\r\n              } else {\r\n                  this.changePreferenceStyle(this.group1CurrentPreferences, man[\"name\"].substring(3), this.findPositionInMatches(man, woman), \"grey\");\r\n                  this.changePreferenceStyle(this.group2CurrentPreferences, woman[\"name\"].substring(5),this.findPositionInMatches(woman, man), \"grey\");\r\n                  // this.currentLines = this.currentLines.filter(arr => arr[0] != redLine[0] && arr[1] != redLine[1] && arr[2] != redLine[2]);\r\n                  this.removeArrayFromArray(this.currentLines, redLine);\r\n                  this.update(9, {\"%woman%\": woman.name, \"%man%\": man.name, \"%match%\": woman.match[0].name})\r\n\r\n                  // console.log(woman[\"name\"] + \" prefers \" + woman[\"match\"][\"name\"] + \" to \" + man[\"name\"] + \" (no change)\");\r\n                  this.update(10);\r\n\r\n              }\r\n          }\r\n      }\r\n  \r\n      // let matches = this.generateMatches();\r\n  \r\n      this.currentlySelectedAgents = [];\r\n      this.relevantPreferences = [];\r\n\r\n      this.update(11);\r\n\r\n      for (let woman of Array.from(this.group2Agents.values())) {\r\n          woman.match[0].match[0] = woman;\r\n      }\r\n  \r\n      return;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { StableRoomMates } from '../../abstract-classes/StableRoomMates';\r\nimport { Agent } from '../../interfaces/Agent';\r\nimport { AlgorithmData } from '../../interfaces/AlgorithmData';\r\nimport { Man } from '../../interfaces/Man';\r\nimport { Person } from '../../interfaces/Person';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StableRoomIrvService extends StableRoomMates {\r\n\r\n  group1Name = \"p\";\r\n  group2Name = \"Other\";\r\n\r\n  group1Agents: Map<String, Person> = new Map();\r\n\r\n  personkey = {}\r\n\r\n  generateAgents() {\r\n\r\n    // make each person \r\n    for (let i = 1; i < this.numberOfAgents + 1; i++) {\r\n      let group1AgentName = this.group1Name + i;\r\n\r\n      this.group1Agents.set(group1AgentName, {\r\n          name: group1AgentName,\r\n          match: new Array(),\r\n          ranking: new Array(),\r\n          lastProposed: null\r\n      });\r\n\r\n      this.freeAgentsOfGroup1.push(group1AgentName);\r\n\r\n  }\r\n\r\n  // fill data structures for group2 - Other - might not be used\r\n  let currentLetter = 'A';\r\n\r\n  for (let i = 1; i < this.numberOfGroup2Agents + 1; i++) {\r\n    let group2AgentName = this.group2Name + currentLetter;\r\n\r\n    this.group2Agents.set(group2AgentName, {\r\n        name: group2AgentName,\r\n        match: new Array(),\r\n        ranking: new Array(),\r\n    });\r\n\r\n    this.personkey[String(i)] = String(i);\r\n\r\n    currentLetter = String.fromCharCode((((currentLetter.charCodeAt(0) + 1) - 65 ) % 26) + 65);\r\n    }\r\n\r\n    this.algorithmSpecificData[\"SR\"] = true;\r\n\r\n  }\r\n\r\n  ///////////////////////////////////////////////////\r\n\r\n\r\n  constructor() { \r\n    \r\n    super();\r\n    // console.log(\"Super call\");\r\n\r\n\r\n  }\r\n  ///////////////////////////////////////////////////\r\n\r\n\r\n  // checks is anyone is assigned to a person, returns assigned person if true, null otherwise \r\n  assign_check(assinged: String) {\r\n\r\n    // console.log(\"---Assing Check---\")\r\n\r\n    for (let [key, person] of this.group1Agents.entries()){\r\n\r\n      // if assigned then \r\n      if (person.lastProposed != null){\r\n        if (person.lastProposed.name == assinged){\r\n          // console.log(\"assigned\", person.lastProposed.name, key)\r\n          return key\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // makes sure noone is assigned to person \"free\"\r\n  // loop through all people - if they are - assign them to null\r\n  free(person_free: String){\r\n\r\n    // console.log(\"---Free Person---\")\r\n\r\n    for (let [key, person] of this.group1Agents.entries()){\r\n\r\n      // if assigned then set to null\r\n      if (person.lastProposed != null){\r\n        if (person.lastProposed.name == person_free){\r\n\r\n          //free a \r\n          this.update(8, {\"%old_person%\" : person.name, \"%selected%\" : person_free})\r\n\r\n          this.removePersonFromArray(this.currentLines, this.getLastCharacter(person.name))\r\n          // add new free person to list \r\n          this.freeAgentsOfGroup1.push(this.getLastCharacter(person.name))\r\n          person.lastProposed = null;\r\n          // console.log(this.group1Agents);\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // del agent1 from agent2 ranking \r\n  // del agent2 from agent1 ranking \r\n  delete_pair(agent1, agent2){\r\n\r\n    // console.log(\"---Delete---\");\r\n\r\n    let agent1index = agent2.ranking.indexOf(agent1);\r\n    if (agent1index != -1){\r\n      // console.log(\"Delete --- \", agent1.name, \" From \", agent2.name);\r\n      agent2.ranking.splice(agent1index, 1);\r\n    \r\n    }\r\n  \r\n    let agent2index = agent1.ranking.indexOf(agent2);\r\n    if (agent2index != -1){\r\n      // console.log(\"Delete --- \", agent2.name, \" From \", agent1.name);\r\n      agent1.ranking.splice(agent2index, 1);\r\n    }\r\n\r\n    // grey out elms from visual lists\r\n    this.changePreferenceStyle(\r\n      this.group1CurrentPreferences,\r\n      this.getLastCharacter(agent1.name), \r\n      this.originalGroup1CurrentPreferences.get(this.getLastCharacter(agent1.name)).indexOf(this.getLastCharacter(agent2.name)), \r\n      \"grey\")\r\n\r\n      this.changePreferenceStyle(\r\n      this.group1CurrentPreferences,\r\n      this.getLastCharacter(agent2.name), \r\n      this.originalGroup1CurrentPreferences.get(this.getLastCharacter(agent2.name)).indexOf(this.getLastCharacter(agent1.name)), \r\n      \"grey\")\r\n\r\n\r\n  }\r\n\r\n  print_rankings(agent){\r\n\r\n    for (let i = 0 ; i < agent.ranking.length ; i++){\r\n      console.log(\"Element\", i, agent.ranking[i])\r\n    }\r\n  }\r\n\r\n  \r\n  // returns a map of agents that are free - not assigned to anyone \r\n  check_free_agents(){\r\n\r\n    let free_agents: Map<String, Person> = new Map();\r\n\r\n    for (let [key, person] of this.group1Agents.entries()){\r\n\r\n      // if assigned then \r\n      if (person.lastProposed == null){\r\n        free_agents.set(key, person);\r\n      }\r\n    }\r\n    return free_agents;\r\n  }\r\n\r\n  // returns a list of the agent keys that have more than one preferance \r\n  check_pref_count(){\r\n\r\n    let agents_multiple_prefs: Map<String, Person> = new Map();\r\n\r\n    for (let [key, person] of this.group1Agents.entries()){\r\n\r\n      // if person has more than one person in their ranking \r\n      if (person.ranking.length > 1){\r\n        agents_multiple_prefs.set(key, person);\r\n        // console.log(\"Agent with multiple prefs\", key, person.ranking.length)\r\n      }\r\n    }\r\n    return agents_multiple_prefs;\r\n  }\r\n\r\n  // checks if any preferance lists are empty\r\n  check_pref_list_empty(){\r\n\r\n    let free_agents: Map<String, Person> = new Map();\r\n    \r\n\r\n    for (let [key, person] of this.group1Agents.entries()){\r\n\r\n      if (person.ranking.length < 1){\r\n        return true\r\n      }\r\n    }\r\n    return false;\r\n\r\n  }\r\n\r\n  // returns a persons ranking as a string \r\n  objs_toString(ranking){\r\n    let s = \"\";\r\n\r\n    // go through each ranking and add to string \r\n    for (let person of ranking){\r\n      s = s + person.name;\r\n      s = s + \", \";\r\n    }\r\n\r\n    // remove extra comma added before \r\n    s = s.slice(0 , -2)\r\n    return s \r\n  }\r\n\r\n  match(): AlgorithmData {\r\n\r\n\r\n    // console.log(\"Start\")\r\n    // console.log(this.group1Agents)\r\n    \r\n    \r\n\r\n    let free_agents: Map<String, Person> = new Map();\r\n    free_agents = this.check_free_agents();\r\n\r\n    // Set each person to be free\r\n    this.update(1);\r\n\r\n    console.log(\"--- new info ---\")\r\n    console.log(\"Matches\")\r\n    for (let [key, person] of free_agents.entries()){\r\n      let x = [];\r\n      for (let p of person.ranking){\r\n        x.push(p.name)\r\n      }\r\n      console.log(x)\r\n    }\r\n\r\n    \r\n\r\n\r\n    let last_person = null\r\n    let last_pref = null\r\n\r\n    let count = 0\r\n    \r\n    while (free_agents.size > 0) {\r\n\r\n      this.currentlySelectedAgents = [];\r\n      this.relevantPreferences = [];\r\n\r\n      // console.log(\"match.irv\");\r\n      // console.log(this.group1Agents);\r\n      // console.log(this.group2Agents);\r\n\r\n      let redLine = [\"1\", \"B\", \"red\"]\r\n\r\n      //loop through each agent in the list \r\n      for (let [key, person] of free_agents.entries()){\r\n\r\n        //While some person p is free (not assigned to someone)\r\n        this.update(2, {\"%person%\" : person.name})\r\n            \r\n        //let person: Person = this.group1Agents.get(this.freeAgentsOfGroup1[0]);\r\n        // console.log(\"------------------\")\r\n        // console.log(person);\r\n        // console.log(person.name);\r\n        // console.log(person.ranking);\r\n        // console.log(person.match);\r\n        // console.log(person.lastProposed);\r\n\r\n        \r\n        //if person p has a empty preferance list\r\n        this.update(3, {\"%person%\" : person.name})\r\n\r\n        // if there is no more preferances for a agent - no stable matchong exists\r\n        if (person.ranking.length < 1){\r\n          console.log(\"NO STABLE MATHCING - empty preferance list\")\r\n\r\n          //end - no stable mathcing\r\n                    this.update(4)\r\n\r\n          // if stable == true then regenerate \r\n          if (this.SRstable){\r\n            console.log(\"ReRun\")\r\n            this.run(this.numberOfAgents, this.numberOfGroup2Agents, null, this.SRstable)\r\n          }\r\n\r\n         \r\n          return;\r\n        }\r\n\r\n       \r\n        // change prevouis highlights back to black \r\n        if (last_person != null){\r\n          this.changePreferenceStyle(\r\n                    this.group1CurrentPreferences,\r\n                    this.getLastCharacter(last_person.name), \r\n                    last_pref,\r\n                    \"black\")\r\n        }\r\n\r\n        \r\n        // store prevouis person\r\n        last_person = person\r\n        last_pref = this.originalGroup1CurrentPreferences.get(this.getLastCharacter(person.name)).indexOf(this.getLastCharacter(person.ranking[0].name)), \r\n\r\n\r\n        //highlight pref in persons list \r\n        this.changePreferenceStyle(\r\n          this.group1CurrentPreferences,\r\n          this.getLastCharacter(person.name), \r\n          this.originalGroup1CurrentPreferences.get(this.getLastCharacter(person.name)).indexOf(this.getLastCharacter(person.ranking[0].name)), \r\n          \"red\")\r\n\r\n        //person b := first preferance on p's list\r\n        this.update(5, {\"%person%\" : person.name, \"%selected%\" : person.ranking[0].name})\r\n\r\n        let pref = person.ranking[0];\r\n        // console.log(\"Pref check --- \", person.name, pref.name, person.ranking)\r\n\r\n        redLine = [this.getLastCharacter(person.name), this.personkey[this.getLastCharacter(pref.name)], \"red\"]\r\n        this.currentLines.push(redLine)\r\n\r\n        // update free agents - remove first elm\r\n        this.freeAgentsOfGroup1.shift()\r\n\r\n        //assign p to b\r\n        this.update(6, {\"%person%\" : person.name, \"%selected%\" : pref.name})\r\n\r\n        //if someone is assigned to their most prefered person, then unassign them and assign current agent to them \r\n        let check = this.assign_check(pref.name);\r\n\r\n        // if any person a is assigned to person b\r\n        this.update(7, {\"%person%\" : person.name, \"%selected%\" : pref.name})\r\n        \r\n\r\n        if (check != null){\r\n          this.free(pref.name);\r\n\r\n          //free a \r\n          //this.update(8) -- done in function \r\n        \r\n        }\r\n\r\n        person.lastProposed = pref;\r\n        \r\n\r\n        this.update(9, {\"%person%\" : person.name, \"%selected%\" : pref.name, \"%list%\" : this.objs_toString(pref.ranking)})\r\n        // loop through ranking \r\n        while (true){\r\n\r\n          //get last elm of ranking\r\n          let remove = pref.ranking.slice(-1)[0]\r\n\r\n          // if elm is the current person then stop\r\n          if (remove.name == person.name){\r\n            break;\r\n          }\r\n\r\n          //delele elm from pref ranking list\r\n          // delete perd from elm ranking list \r\n          // console.log(\"del\", remove.name, pref.name)\r\n          this.delete_pair(pref, remove)\r\n\r\n\r\n          \r\n\r\n           // for each person c less preferded than p on b's, preferance list\r\n          this.update(10, {\"%person%\" : person.name, \"%removee%\" : remove.name})\r\n\r\n\r\n        }\r\n\r\n\r\n        //person.ranking = person.ranking.slice(0, 3);\r\n        // console.log(\"Before\", free_agents);\r\n        free_agents = this.check_free_agents();\r\n        // console.log(\"After\", free_agents);\r\n\r\n      }\r\n      \r\n      // console.log(\"ENDER\")\r\n      // for (let data of this.group1Agents.values()){\r\n      //   console.log(data.name, \" ---> \", data.lastProposed, data.ranking)\r\n      // }\r\n\r\n\r\n      // Place holder \r\n      // need to re-generate smaples to give stable mathcing \r\n      // OR leave in, in some form to show not everything has a stable matching \r\n      count++;\r\n      if (count > 100){\r\n        console.log(\"No Stable Mathcing\")\r\n        return;\r\n      }\r\n\r\n\r\n  }\r\n\r\n\r\n  // fix last highlights number \r\n  this.changePreferenceStyle(\r\n    this.group1CurrentPreferences,\r\n    this.getLastCharacter(last_person.name), \r\n    last_pref,\r\n    \"black\")\r\n\r\n  let agents_multiple_prefs = this.check_pref_count()\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n  ////// PAHSE 2\r\n  \r\n  // while there are agents that have more than 1 person in their prefrance list \r\n\r\n\r\n  let finished_people = []\r\n\r\n  while (agents_multiple_prefs.size > 0) {\r\n    // console.log(\"There is agents with multiple prefs\")\r\n    // console.log(agents_multiple_prefs)\r\n    \r\n\r\n    //loop through those^ agents\r\n    for (let [key, person] of agents_multiple_prefs.entries()){\r\n\r\n      // While some person p has more than 1 preferance left\r\n      this.update(11, {\"%person%\" : person.name, \"%list%\" : this.objs_toString(person.ranking)}) \r\n\r\n      // look for rotations in perosn p's preferance list \r\n      this.update(12, {\"%person%\" : person.name})\r\n\r\n      let rotation_pairs = []\r\n\r\n      console.log(\"Checking poeple left\", agents_multiple_prefs)        \r\n\r\n      console.log(person.name)\r\n      console.log(person.ranking)\r\n\r\n      let starting_agent = person                               // starting person\r\n      let second_pref = person.ranking[1]                       //the starting persons second prefered person\r\n      let last_pref = second_pref.ranking.slice(-1)[0]          //the second preferned persons last preferd person\r\n\r\n\r\n      // list of pairs to call delete on\r\n      rotation_pairs.push([last_pref, second_pref])\r\n\r\n\r\n      // Loop until there is a loop through people until back to the starting person\r\n\r\n      let counter = 0\r\n      while (starting_agent != last_pref){\r\n        // console.log(\"adding pairs \")  \r\n        counter++\r\n\r\n        // stops infinite loops - break if there is no cycle through all the people \r\n        if (counter > agents_multiple_prefs.size){\r\n          break;\r\n        }\r\n\r\n        // console.log(\"HERE\")\r\n        // console.log(second_pref)\r\n        // console.log(last_pref)\r\n\r\n        // console.log(\"last_pref\", last_pref)\r\n\r\n        second_pref = agents_multiple_prefs.get(last_pref.name).ranking[1]    // update to be second pref of last_pref\r\n        last_pref = second_pref.ranking.slice(-1)[0]                          // update like above with new second_pref\r\n\r\n        // add to list \r\n        rotation_pairs.push([last_pref, second_pref])         \r\n\r\n      }\r\n\r\n      // if rotation r is found\r\n      this.update(13, {\"%rotation%\" : this.objs_toString(rotation_pairs)}) // temp remove %rotation%\r\n\r\n      // console.log(\"Found rotation\", rotation_pairs)\r\n\r\n      let deleted_pairs = []\r\n      for (let pair = 0  ; pair < rotation_pairs.length ; pair++ ){\r\n        // console.log(\"looping dels\")\r\n\r\n        // if pair not already deleted \r\n        if (!deleted_pairs.includes(rotation_pairs[pair])){\r\n          // console.log(\"deleting\", rotation_pairs[pair])\r\n          \r\n          this.delete_pair(rotation_pairs[pair][0], rotation_pairs[pair][1])\r\n          deleted_pairs.push(rotation_pairs[pair])\r\n\r\n          // delete pairs in rotation r\r\n          this.update(14, {\"%person%\" : rotation_pairs[pair][1].name, \"%removee%\" : rotation_pairs[pair][0].name})\r\n\r\n          // update lines \r\n\r\n          for (let [key_inner, person_inner] of this.group1Agents.entries()){\r\n\r\n            if (person_inner.ranking.length == 1 && !finished_people.includes(person_inner.name)){\r\n\r\n              // remove lines starting from person_inner\r\n              this.removePersonFromArray(this.currentLines, this.getLastCharacter(person_inner.name))\r\n\r\n              // this.free(person_inner.lastProposed.name)\r\n\r\n              // HERE ^^^ WORKIGN ON UPDATEING FREE LIST IN PHASE 2 - ISSUE: DONT KNOW WHO GETS UNASSIGNED WHEN SOMEONE IS SET TO FREE, COULD LOOP AND CHECK ALL, \r\n\r\n              // add the \r\n              // this.freeAgentsOfGroup1.push(person_inner.lastProposed.name)\r\n\r\n              // let person_inner propose to their last remaining person\r\n              person_inner.lastProposed = person_inner.ranking.slice(0)[0]\r\n              \r\n              // remove lines going to their new proposal\r\n              this.removeTargetFromArray(this.currentLines, this.personkey[this.getLastCharacter(person_inner.lastProposed.name)])\r\n              // with lines are green early, without overlapping reds \r\n              this.removePersonFromArray(this.currentLines, this.personkey[this.getLastCharacter(person_inner.lastProposed.name)])\r\n\r\n              // update value in list \r\n              this.changePreferenceStyle(\r\n                this.group1CurrentPreferences,\r\n                this.getLastCharacter(person_inner.name), \r\n                this.originalGroup1CurrentPreferences.get(this.getLastCharacter(person_inner.name)).indexOf(this.getLastCharacter(person_inner.ranking[0].name)), \r\n                \"green\")\r\n\r\n              // draw line to new proposal from, to, colour\r\n              let line = [this.getLastCharacter(person_inner.name), this.personkey[this.getLastCharacter(person_inner.lastProposed.name)], \"green\"]\r\n              this.currentLines.push(line)\r\n\r\n              // add person to finished person list \r\n              finished_people.push(person)\r\n\r\n\r\n            }\r\n    \r\n          }\r\n\r\n        } else {\r\n          // everything deleted \r\n          // update \r\n         \r\n          break;\r\n        }\r\n\r\n      }\r\n\r\n\r\n      // conditions to end if stable matching is found \r\n      agents_multiple_prefs = this.check_pref_count()\r\n      // console.log(\"checking number of agents with multiple preferances\")\r\n      // console.log(agents_multiple_prefs)\r\n\r\n      if (agents_multiple_prefs.size < 1) {\r\n        break;\r\n      }\r\n\r\n      // if a person b has 1 perferance left\r\n      this.update(15)\r\n\r\n      // update preferancees \r\n      for (let [key_inner, person_inner] of this.group1Agents.entries()){\r\n\r\n        if (person_inner.ranking.length == 1){\r\n\r\n         \r\n\r\n          person_inner.lastProposed = person_inner.ranking.slice(0)[0]\r\n          let line = [this.getLastCharacter(person_inner.name), this.personkey[this.getLastCharacter(person_inner.lastProposed.name)], \"green\"]\r\n          // let line = [\"1\", \"B\", \"green\"]\r\n          // this.currentLines.push(line)\r\n\r\n          // person b := last preferance\r\n          this.update(16, {\"%person%\" : person_inner.name, \"%preferance%\" : person_inner.lastProposed.name})\r\n\r\n        }\r\n\r\n      }\r\n\r\n      // if any people have empty preferance lists - no mathcong\r\n      this.update(17, {\"%person%\" : person.name})\r\n\r\n      if (this.check_pref_list_empty() == true) {\r\n\r\n        // end - no stable matching\r\n        this.update(18)\r\n\r\n        console.log(\"No Stable matching\")\r\n        \r\n        // if stable == true then regenerate \r\n        if (this.SRstable){\r\n          console.log(\"ReRun\")\r\n          this.run(this.numberOfAgents, this.numberOfGroup2Agents, null, this.SRstable)\r\n        }\r\n\r\n       \r\n        return;\r\n      }\r\n\r\n      // needed to rest the for loop for the new values within the many_pref_list\r\n      // this list is updated to remove people that no longer have many preferances \r\n      // ^ \r\n      break;\r\n\r\n    }\r\n  }\r\n\r\n  // if PHASE 2 is not done - update viz\r\n  if (agents_multiple_prefs.size == 0) {\r\n    for (let [key_inner, person_inner] of this.group1Agents.entries()){\r\n      if (person_inner.ranking.length == 1){\r\n\r\n       // update value in list \r\n       this.changePreferenceStyle(\r\n        this.group1CurrentPreferences,\r\n        this.getLastCharacter(person_inner.name), \r\n        this.originalGroup1CurrentPreferences.get(this.getLastCharacter(person_inner.name)).indexOf(this.getLastCharacter(person_inner.ranking[0].name)), \r\n        \"green\")\r\n        \r\n        this.removePersonFromArray(this.currentLines, this.getLastCharacter(person_inner.name))\r\n\r\n        this.removeTargetFromArray(this.currentLines, this.personkey[this.getLastCharacter(person_inner.lastProposed.name)])\r\n\r\n\r\n        person_inner.lastProposed = person_inner.ranking.slice(0)[0]\r\n        let line = [this.getLastCharacter(person_inner.name), this.personkey[this.getLastCharacter(person_inner.lastProposed.name)], \"green\"]\r\n        // let line = [\"1\", \"B\", \"green\"]\r\n        this.currentLines.push(line)\r\n      }\r\n    }\r\n  }\r\n\r\n  this.update(19)\r\n  // console.log(\"group1agents at end\", this.group1Agents, agents_multiple_prefs)\r\n  \r\n  // if stable == false then regenerate - until a unstable instance is found  \r\n  // if (!this.SRstable){\r\n  //   this.run(this.numberOfAgents, this.numberOfGroup2Agents, null, this.SRstable)\r\n  // }\r\n\r\n  return;\r\n\r\n  }\r\n}\r\n\r\n//end text + viz not quite right, text not mathcing with viz but still is with what is happening \r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { AlgorithmRetrievalService } from 'src/app/algorithm-retrieval.service';\r\nimport { PlaybackService } from '../../services/playback/playback.service';\r\n\r\n@Component({\r\n  selector: 'agent-titles',\r\n  templateUrl: './agent-titles.component.html',\r\n  styleUrls: ['./agent-titles.component.scss']\r\n})\r\nexport class AgentTitlesComponent implements OnInit {\r\n\r\n  @Input() showCode: boolean;\r\n\r\n  constructor(public algorithmService: AlgorithmRetrievalService, public playback: PlaybackService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex justify-content-around flex-wrap flex-md-nowrap align-items-center\" style=\"height:120px; border-bottom: 1px solid rgba(184, 184, 184, 0.658);\">\r\n    <h1 id=\"lhsName\" class=\"h2 mt-3\">{{ this.algorithmService.pluralMap.get(this.algorithmService.currentAlgorithm.orientation[0]) }}</h1>\r\n\r\n    <div class=\"row text-center border-bottom mr-3\" style=\"position: fixed; height:114px; width: 350px;\" *ngIf=\"this.showCode\">\r\n      <h3 class=\"col h2 sidebarPopover my-auto text-center\" style=\"font-weight: 400; font-size: 1vw; line-height: 1.5vw;\">{{ this.playback.description }}</h3>\r\n    </div>\r\n\r\n    <h1 id=\"rhsName\" class=\"h2 mt-3\">{{ this.algorithmService.pluralMap.get(this.algorithmService.currentAlgorithm.orientation[1]) }}</h1>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-animation-container',\r\n  templateUrl: './animation-container.component.html',\r\n  styleUrls: ['./animation-container.component.scss']\r\n})\r\nexport class AnimationContainerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-canvas-display',\r\n  templateUrl: './canvas-display.component.html',\r\n  styleUrls: ['./canvas-display.component.scss']\r\n})\r\nexport class CanvasDisplayComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-animation-guide-dialog',\r\n  templateUrl: './animation-guide-dialog.component.html',\r\n  styleUrls: ['./animation-guide-dialog.component.scss']\r\n})\r\nexport class AnimationGuideDialogComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Animation Guide</h1>\r\n<div mat-dialog-content class=\"mb-2\">\r\n    <div class=\"row mb-4\">\r\n        <div class=\"col-md-2\">\r\n            <img src=\"assets/images/greenCircle.svg\">\r\n        </div>\r\n        <div class=\"col-md-10 my-auto\">\r\n            <h3><b>Green border around circle</b>: This agent is currently selected.</h3>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row mb-4\">\r\n        <div class=\"col-md-5\">\r\n            <img src=\"assets/images/redLine.svg\">\r\n        </div>\r\n        <div class=\"col-md-7 my-auto\">\r\n            <h3><b>Red line between two circles</b>: 1 is currently considering proposing to A.</h3>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5\">\r\n            <img src=\"assets/images/greenLine.svg\">\r\n        </div>\r\n        <div class=\"col-md-7 my-auto\">\r\n            <h3><b>Green line between two circles</b>: 1 is provisionally assigned/engaged to A.</h3>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div mat-dialog-action class=\"mb-2\" align=\"end\">\r\n  <button mat-button mat-dialog-close>Close</button>\r\n</div>","import { Injectable } from '@angular/core';\r\ndeclare var anime: any;  // declaring the animejs animation library for use in this file\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlgorithmAnimationService {\r\n\r\n  constructor() { }\r\n\r\n  loadPage(): void {\r\n    // animation for sliding the navbar down from Y-150 its position\r\n    anime({\r\n      targets: '.navbar',\r\n      easing: 'easeOutQuint',\r\n      translateY: [-150, 0],\r\n      delay: 200,\r\n      duration: 900\r\n    })\r\n\r\n    // animation for sliding the sidebar right from X-500 its position\r\n    anime({\r\n      targets: '.sidebar',\r\n      easing: 'easeInOutQuint',\r\n      translateX: [-500, 0],\r\n      delay: 270,\r\n      duration: 1000\r\n    })\r\n\r\n    // animation for fading the sidebar content in as the sidebar slides in\r\n    anime({\r\n      targets: '#sidebarContent',\r\n      easing: 'easeInOutQuint',\r\n      opacity: [0, 1],\r\n      delay: 270,\r\n      duration: 1500\r\n    })\r\n\r\n    // animation for fading the main content in as the sidebar finishes sliding in\r\n    anime({\r\n      targets: '#mainContent',\r\n      easing: 'easeInOutQuint',\r\n      opacity: [0, 1],\r\n      delay: 670,\r\n      duration: 900\r\n    })\r\n  }\r\n\r\n\r\n  goHome(): void {\r\n    anime({\r\n      targets: '.navbar',\r\n      easing: 'easeOutQuint',\r\n      translateY: [0, -150],\r\n      // opacity: [0, 1],\r\n      delay: 400,\r\n      duration: 900\r\n    })\r\n\r\n    anime({\r\n      targets: '.sidebar',\r\n      easing: 'easeInOutQuint',\r\n      translateX: [0, -500],\r\n      // opacity: [0, 1],\r\n      duration: 600\r\n    })\r\n\r\n    anime({\r\n      targets: '#sidebarContent',\r\n      easing: 'easeInOutQuint',\r\n      // translateX: [-1500, 0],\r\n      opacity: [1, 0],\r\n      duration: 600\r\n    })\r\n\r\n    anime({\r\n      targets: '#mainContent',\r\n      easing: 'easeInOutQuint',\r\n      // translateX: [-1500, 0],\r\n      opacity: [1, 0],\r\n      duration: 600\r\n    })\r\n  }\r\n\r\n\r\n  fadeCanvasOut(): void {\r\n    anime({\r\n      targets: '#myCanvas',\r\n      easing: 'easeInOutQuint',\r\n      // translateX: [-1500, 0],\r\n      opacity: [1, 0],\r\n      duration: 300\r\n    })\r\n  }\r\n\r\n  fadeCanvasIn(): void {\r\n    anime({\r\n      targets: '#myCanvas',\r\n      easing: 'easeInOutQuint',\r\n      // translateX: [-1500, 0],\r\n      opacity: [0, 1],\r\n      duration: 300\r\n    })\r\n  }\r\n\r\n\r\n  hideSidebar(): void {\r\n    anime({\r\n      targets: '.sidebar',\r\n      easing: 'easeInOutQuint',\r\n      translateX: [0, -800],\r\n      delay: 200,\r\n      duration: 700\r\n    })\r\n  }\r\n\r\n  showSidebar(): void {\r\n    anime({\r\n      targets: '.sidebar',\r\n      easing: 'easeInOutQuint',\r\n      translateX: [-500, 0],\r\n      // opacity: [0, 1],\r\n      duration: 600\r\n    })\r\n\r\n    anime({\r\n      targets: '#sidebarContent',\r\n      easing: 'easeInOutQuint',\r\n      // translateX: [-1500, 0],\r\n      opacity: [0, 1],\r\n      duration: 600\r\n    })\r\n  }\r\n\r\n\r\n  hideMainContent(): void {\r\n    anime({\r\n      targets: '#mainContent',\r\n      easing: 'easeInOutQuint',\r\n      opacity: [1, 0],\r\n      duration: 500\r\n    })\r\n  }\r\n\r\n  showMainContent(): void {\r\n    anime({\r\n      targets: '#mainContent',\r\n      easing: 'easeInOutQuint',\r\n      opacity: [0, 1],\r\n      duration: 500\r\n    })\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { AlgorithmRetrievalService } from 'src/app/algorithm-retrieval.service';\r\nimport { PlaybackService } from '../services/playback/playback.service';\r\n\r\ndeclare var anime: any;\r\n\r\n@Component({\r\n  selector: 'code-display',\r\n  templateUrl: './code-display.component.html',\r\n  styleUrls: ['./code-display.component.scss', '../sidebar/sidebar.component.scss']\r\n})\r\nexport class CodeDisplayComponent implements OnInit {\r\n\r\n  algorithm: string;\r\n  animate: boolean = true;\r\n\r\n  constructor(public playback: PlaybackService, public algService: AlgorithmRetrievalService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.algorithm = this.algService.currentAlgorithm.id;\r\n  }\r\n\r\n}\r\n","<!-- CODE TERMINAL -->\r\n<!-- <div class=\"terminal-header row justify-content-center text-center mb-0\" (click)=\"toggleExpansion()\" *ngIf=\"!(this.algorithm == '')\">\r\n    <mat-animated-icon id=\"toggleCodeButton\" class=\"playbackButton\" start=\"keyboard_arrow_down\" end=\"keyboard_arrow_up\" colorStart=\"none\" colorEnd=\"none\" [animate]=\"!this.playback.pause\"></mat-animated-icon>\r\n    <mat-animated-icon id=\"playButton\" class=\"playbackButton unselectable\" start=\"expand_less\" end=\"keyboard_arrow_up\" colorStart=\"none\" colorEnd=\"none\" [animate]=\"this.animate\"></mat-animated-icon>\r\n</div> -->\r\n<!-- <div class=\"terminal row justify-content-center align-items-center mt-0\" *ngIf=\"!(this.algorithm == '')\">\r\n    <simple-code *ngIf=\"this.algorithm == 'simple'\"></simple-code>\r\n    <gs-code *ngIf=\"this.algorithm == 'smp-man-gs'\"></gs-code>\r\n    <smp-man-egs-code  *ngIf=\"this.algorithm == 'smp-man-egs'\"></smp-man-egs-code>\r\n    <egs-resident-hs-code *ngIf=\"this.algorithm == 'hr-resident-egs'\"></egs-resident-hs-code>\r\n</div> -->\r\n\r\n<div class=\"border-bottom sidebarPopover mr-2\" style=\"background-color: #1b1f23; max-width: 100%;\" data-toggle=\"popover\" data-placement=\"left\" title=\"Code Display\" data-content=\"This highlights the current line that's being executed in the algorithm as you play or drag the playback slider.\" data-trigger=\"manual\"\r\ndata-template='<div class=\"popover fade show bs-popover-right popoverPositioning blackText\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-header\"></h3><div class=\"popover-body\"></div></div>'>\r\n    <h1 class=\"pt-4 pl-3\" style=\"color:rgb(231, 231, 231); font-weight: 300; margin-bottom: 0; padding-bottom: 0; font-size: 1.4vw;\">\r\n        Pseudocode\r\n    </h1>\r\n\r\n    <div style=\"white-space: pre; height: 100%; vertical-align: middle; font-size: 0.8vw; line-height: 1.2vw; margin: 0; color:rgb(231, 231, 231); width: 100%\">\r\n        <ol class=\"pt-3 pb-4\" style=\"width: 100%; display: table; margin: 0; vertical-align: middle; background-color: #1b1f23; padding-left: 30px;\">\r\n            <div style=\"display: table-row; width: 100%; vertical-align: middle; margin: 0; \" *ngFor=\"let line of this.algService.currentAlgorithm.code; let i = index\" id=\"line{{i+1}}\">\r\n                <li class=\"pl-2\" style=\"vertical-align: middle; width: 100%; tab-size: 0.8vw; word-wrap: break-word; white-space: pre-wrap\">\r\n                    {{ line }}\r\n                </li>\r\n            </div>\r\n        </ol>\r\n    </div>   \r\n</div>\r\n\r\n<!-- <div style=\"position: absolute; opacity: 0;\"><gs-code *ngIf=\"this.algorithm == 'gale-shapley'\"></gs-code></div> -->","import { Component, HostListener, Inject, Input, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { element } from 'protractor';\r\nimport { AlgorithmRetrievalService } from 'src/app/algorithm-retrieval.service';\r\nimport { CanvasService } from '../../services/canvas/canvas.service';\r\nimport { PlaybackService } from '../../services/playback/playback.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-preferences-dialog',\r\n  templateUrl: './edit-preferences-dialog.component.html',\r\n  styleUrls: ['./edit-preferences-dialog.component.scss']\r\n})\r\nexport class EditPreferencesDialogComponent implements OnInit {\r\n\r\n  group1Preferences: Map<string, Array<string>> = new Map();\r\n  group2Preferences: Map<string, Array<string>> = new Map();\r\n\r\n  preferences: string = \"\";\r\n\r\n  equalGroups: boolean = false;\r\n\r\n  constructor(public algorithmService: AlgorithmRetrievalService, public playbackService: PlaybackService, public canvasService: CanvasService, public dialogRef: MatDialogRef<EditPreferencesDialogComponent>, private _snackBar: MatSnackBar) { }\r\n\r\n  @Input() algorithm: Algorithm;\r\n\r\n\r\n  numberOfGroup1Agents = new FormControl(this.algorithmService.numberOfGroup1Agents, [\r\n    Validators.required,\r\n    Validators.min(1),\r\n    Validators.max(9)\r\n  ]);\r\n\r\n  numberOfGroup2Agents = new FormControl(this.algorithmService.numberOfGroup2Agents, [\r\n    Validators.required,\r\n    Validators.min(1),\r\n    Validators.max(9)\r\n  ]);\r\n\r\n  preferencesForm: FormControl;\r\n  formString: string;\r\n  missingPreferences: Array<Array<string>>;\r\n\r\n  valid: boolean = true;\r\n\r\n  @HostListener('document:keydown.enter') \r\n  onEnter() {\r\n    if (!(this.numberOfGroup1Agents.errors && this.numberOfGroup2Agents.errors)) {\r\n      this.generateAlgorithmPreferences();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.group1Preferences = this.playbackService.commandList[0][\"group1CurrentPreferences\"];\r\n    this.group2Preferences = this.playbackService.commandList[0][\"group2CurrentPreferences\"];\r\n\r\n    this.preferencesForm = new FormControl(this.preferences);\r\n\r\n    if (this.algorithmService.currentAlgorithm.equalGroups) {\r\n      this.equalGroups = true;\r\n    }\r\n\r\n    this.generatePreferenceString();\r\n    // console.log(this.formString)\r\n\r\n  }\r\n\r\n  generatePreferenceString(): void {\r\n\r\n    let preferenceString: string = this.algorithmService.pluralMap.get(this.algorithmService.currentAlgorithm.orientation[0]) + \"\\n\";\r\n    let currentLine: string = \"\";\r\n\r\n    let counter: number = 0;\r\n\r\n    this.missingPreferences = [];\r\n\r\n    if (this.equalGroups) {\r\n      this.numberOfGroup2Agents.setValue(this.numberOfGroup1Agents.value);\r\n    }\r\n\r\n    if (this.algorithmService.numberOfGroup1Agents < this.numberOfGroup1Agents.value || this.algorithmService.numberOfGroup2Agents < this.numberOfGroup2Agents.value) {\r\n\r\n      let numbersToAdd: Array<string> = [];\r\n      let lettersToAdd: Array<string> = [];\r\n\r\n      for (let i = this.algorithmService.numberOfGroup2Agents + 1; i <= this.numberOfGroup2Agents.value; i++) {\r\n        lettersToAdd.push(String.fromCharCode(i + 64));\r\n      }\r\n\r\n      for (let i = this.algorithmService.numberOfGroup1Agents + 1; i <= this.numberOfGroup1Agents.value; i++) {\r\n        numbersToAdd.push(String(i));\r\n      }\r\n\r\n      for (let agent of this.group1Preferences) {\r\n        if (Number(agent[0]) <= this.numberOfGroup1Agents.value) {\r\n          currentLine = \"\";\r\n          this.shuffle(lettersToAdd);\r\n  \r\n          let id: string = agent[0];\r\n          let newPreferences: string[] = agent[1].filter(pref => pref.charCodeAt(0) - 64 <= this.numberOfGroup2Agents.value).concat(lettersToAdd);\r\n  \r\n          currentLine = id + \": \" + newPreferences.join(\", \");\r\n    \r\n          currentLine += \"\\n\";\r\n          preferenceString += currentLine;\r\n        }\r\n      }\r\n\r\n      for (let i = this.algorithmService.numberOfGroup1Agents + 1; i <= this.numberOfGroup1Agents.value; i++) {\r\n        let newPreferences = Array.from(this.group1Preferences.values())[0].concat(lettersToAdd).filter(pref => pref.charCodeAt(0) - 64 <= this.numberOfGroup2Agents.value);\r\n        this.shuffle(newPreferences);\r\n        currentLine = i + \": \" + newPreferences.join(\", \");\r\n        currentLine += \"\\n\";\r\n        preferenceString += currentLine;\r\n      }\r\n\r\n      preferenceString += \"\\n\" + this.algorithmService.pluralMap.get(this.algorithmService.currentAlgorithm.orientation[1]) + \"\\n\";\r\n\r\n\r\n      for (let agent of this.group2Preferences) {\r\n        if (Number(agent[0].charCodeAt(0) - 64) <= this.numberOfGroup2Agents.value) {\r\n          currentLine = \"\";\r\n          this.shuffle(numbersToAdd);\r\n\r\n          let id: string = agent[0];\r\n          let newPreferences: string[] = agent[1].filter(pref => pref <= this.numberOfGroup1Agents.value).concat(numbersToAdd);\r\n\r\n          currentLine = id + \": \" + newPreferences.join(\", \");\r\n    \r\n          currentLine += \"\\n\";\r\n          preferenceString += currentLine;\r\n        }\r\n      }\r\n\r\n      // console.log(this.numberOfGroup2Agents.value);\r\n      for (let i = this.algorithmService.numberOfGroup2Agents + 1; i <= this.numberOfGroup2Agents.value; i++) {\r\n        let newPreferences = (Array.from(this.group2Preferences.values())[0].concat(numbersToAdd)).filter(pref => pref <= this.numberOfGroup1Agents.value);\r\n        this.shuffle(newPreferences);\r\n        currentLine = String.fromCharCode(i + 64) + \": \" + newPreferences.join(\", \");\r\n        currentLine += \"\\n\";\r\n        preferenceString += currentLine;\r\n      }\r\n\r\n    } else {\r\n      for (let agent of this.group1Preferences) {\r\n        currentLine = \"\";\r\n  \r\n        if (counter < this.numberOfGroup1Agents.value) {\r\n          let id: string = agent[0];\r\n          let currentPreferences: string[] = agent[1];\r\n  \r\n          let newPreferences: string[] = [];\r\n  \r\n          for (let preference of currentPreferences) {\r\n            if (preference.charCodeAt(0) - 65 < this.numberOfGroup2Agents.value) {\r\n              newPreferences.push(preference);\r\n            }\r\n          }\r\n    \r\n          currentLine = id + \": \" + newPreferences.join(\", \");\r\n  \r\n          currentLine += \"\\n\";\r\n          preferenceString += currentLine;\r\n        }\r\n  \r\n        counter++;\r\n  \r\n      }\r\n  \r\n      // console.log(this.algorithmService, \"name here\")\r\n\r\n      if (this.algorithmService.currentAlgorithm.name != \"Stable Roommates Problem\" || true) {\r\n\r\n    \r\n        preferenceString += \"\\n\" + this.algorithmService.pluralMap.get(this.algorithmService.currentAlgorithm.orientation[1]) + \"\\n\";\r\n    \r\n        counter = 0;\r\n    \r\n\r\n    \r\n        for (let agent of this.group2Preferences) {\r\n          currentLine = \"\";\r\n    \r\n          if (counter < this.numberOfGroup2Agents.value) {\r\n            let id: string = agent[0];\r\n            let currentPreferences: string[] = agent[1];\r\n    \r\n            let newPreferences: string[] = [];\r\n    \r\n            for (let preference of currentPreferences) {\r\n              if (Number(preference) <= this.numberOfGroup1Agents.value) {\r\n                newPreferences.push(preference);\r\n              }\r\n            }\r\n    \r\n            currentLine = id + \": \" + newPreferences.join(\", \");\r\n    \r\n    \r\n            currentLine += \"\\n\";\r\n            preferenceString += currentLine;\r\n          }\r\n    \r\n          counter++;\r\n    \r\n        }\r\n      }\r\n    }\r\n    \r\n    this.formString = preferenceString.slice(0, -1);\r\n\r\n  }\r\n\r\n  generateAlgorithmPreferences(): void {\r\n    let preferenceString: string = this.formString;\r\n\r\n    console.log(\"---\");\r\n    console.log(preferenceString);\r\n\r\n    let newPreferences: Map<String, Array<String>> = new Map();\r\n\r\n    console.log(preferenceString.split(\"\\n\"));\r\n\r\n    for (let line of preferenceString.split(\"\\n\")) {\r\n      if (this.checkIfPreference(line)) {\r\n        if (this.checkValidity) {\r\n          line = line.replace(/:\\s+,/g, ':');\r\n          line = line.replace(/,\\s+,/g, ',');\r\n          line = line.replace(/, $/g, '');\r\n          line = line.replace(/,$/g, '');\r\n          line = line.replace(/\\s+/g, '');    // remove whitespace from line from https://stackoverflow.com/questions/24580912/trim-all-white-space-from-string-javascript\r\n          let agentId: string = line.slice(0, line.indexOf(\":\"));\r\n          let agentPreferences = line.slice(line.indexOf(\":\") + 1).split(\",\");\r\n          \r\n          if (agentPreferences.slice().length == 1){\r\n            agentPreferences = Array<string>(this.numberOfGroup1Agents.value - 1).fill(\"1\")\r\n          }\r\n\r\n          newPreferences.set(agentId, agentPreferences.slice());\r\n\r\n          console.log(agentPreferences.slice())\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n\r\n    var command = this.playbackService.commandList[this.playbackService.previousStepCounter];\r\n    let a = document.getElementById(\"line\" + command[\"lineNumber\"]);\r\n    a.style.backgroundColor = \"\";\r\n    a.style.color = \"\";\r\n\r\n    this.algorithmService.numberOfGroup1Agents = Number(this.numberOfGroup1Agents.value);\r\n    this.algorithmService.numberOfGroup2Agents = Number(this.numberOfGroup2Agents.value);\r\n\r\n    this.canvasService.initialise();\r\n    this.playbackService.setAlgorithm(this.algorithmService.currentAlgorithm.id, this.algorithmService.numberOfGroup1Agents, this.algorithmService.numberOfGroup2Agents, newPreferences);\r\n\r\n    this.dialogRef.close();\r\n\r\n    this._snackBar.open(\"Preferences changed\", \"Dismiss\", {\r\n      duration: 2000,\r\n    });\r\n\r\n  }\r\n  \r\n  checkIfPreference(str: string): boolean {\r\n    let re = /^.:/;\r\n    return re.test(str);\r\n  }\r\n\r\n  checkValidity(str: string): boolean {\r\n    return true;\r\n  }\r\n\r\n\r\n  generateMissingPreferences(preferenceString) {\r\n\r\n    let newPreferences: Map<string, Array<string>> = new Map();\r\n    this.missingPreferences = [];\r\n\r\n\r\n    // dont check for SR\r\n    if (this.algorithmService.currentAlgorithm.name == \"Stable Roommates Problem\"){\r\n      return;\r\n    }\r\n\r\n    for (let line of preferenceString.split(\"\\n\")) {\r\n      if (this.checkIfPreference(line)) {\r\n        if (this.checkValidity) {\r\n          line = line.replace(/:\\s+,/g, ':');\r\n          line = line.replace(/,\\s+,/g, ',');\r\n          line = line.replace(/, $/g, '');\r\n          line = line.replace(/,$/g, '');\r\n          line = line.replace(/\\s+/g, '');    // remove whitespace from line from https://stackoverflow.com/questions/24580912/trim-all-white-space-from-string-javascript\r\n          let agentId: string = line.slice(0, line.indexOf(\":\"));\r\n          let agentPreferences = line.slice(line.indexOf(\":\") + 1).split(\",\");\r\n          \r\n          newPreferences.set(agentId, agentPreferences.slice());\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    // console.log(newPreferences);\r\n    // console.log(\"\\n\\n\");\r\n\r\n    this.valid = true;\r\n\r\n    // let missingPreferences: Array<Array<string>> = [];\r\n\r\n    for (let agent of newPreferences) {\r\n      // let currentPreferences: Array<string> = agent[1];\r\n      let agentId: string = agent[0];\r\n      let currentPreferences: string[] = agent[1];\r\n      let isGroup1: boolean = isNaN(Number(agentId));\r\n\r\n      // console.log(agentId);\r\n      // console.log(currentPreferences);\r\n      // console.log(isGroup1);\r\n\r\n      // console.log(\"\\n\");\r\n\r\n      for (let i = 1; i <= (isGroup1 ? this.numberOfGroup1Agents.value : this.numberOfGroup2Agents.value); i++ ) {\r\n        // console.log(isGroup1 ? i : String.fromCharCode(i + 64));\r\n        let currentNumInPreference = false;\r\n        for (let preference of currentPreferences) {\r\n          // console.log(isGroup1 ? String(i) : String.fromCharCode(i + 64));\r\n          // console.log(preference);\r\n          if (((isGroup1 ? String(i) : String.fromCharCode(i + 64)) == preference)) {\r\n            // console.log(\"here\");\r\n            // boolean array?\r\n            currentNumInPreference = true;\r\n          }\r\n        }\r\n        if (!currentNumInPreference) {\r\n          // console.log(\"(\" + agentId + \", \" + (isGroup1 ? String(i) : String.fromCharCode(i + 64)) + \")\");\r\n          // console.log([agentId, (isGroup1 ? String(i) : String.fromCharCode(i + 64))])\r\n          // console.log([(isGroup1 ? String(i) : String.fromCharCode(i + 64)), agentId]);\r\n          // console.log([agentId, (isGroup1 ? String(i) : String.fromCharCode(i + 64))] == [\"1\", \"D\"]);\r\n\r\n          // console.log(this.checkArrayEquality([agentId, (isGroup1 ? String(i) : String.fromCharCode(i + 64))], [\"1\", \"D\"]));\r\n\r\n          let added: boolean = false;\r\n\r\n          for (let preference of this.missingPreferences) {\r\n            if (this.checkArrayEquality(preference, [(isGroup1 ? String(i) : String.fromCharCode(i + 64)), agentId])) {\r\n              added = true;\r\n              console.log(\"???\");\r\n              console.log(this.missingPreferences.indexOf(preference));\r\n              this.missingPreferences.splice(this.missingPreferences.indexOf(preference), 1);\r\n            }\r\n          }\r\n\r\n          if (!added) {\r\n            this.missingPreferences.push([agentId, (isGroup1 ? String(i) : String.fromCharCode(i + 64))]);\r\n          }\r\n\r\n          // if (missingPreferences.includes([(isGroup1 ? String(i) : String.fromCharCode(i + 64)), agentId])) {\r\n          //   missingPreferences.splice(missingPreferences.indexOf([(isGroup1 ? String(i) : String.fromCharCode(i + 64)), agentId]), 1);\r\n          // } else {\r\n          //   missingPreferences.push([agentId, (isGroup1 ? String(i) : String.fromCharCode(i + 64))]);\r\n          // }\r\n          // console.log(\"make valid = false here!\");\r\n        }\r\n      }\r\n\r\n\r\n      // console.log(\"-----------\");\r\n\r\n\r\n\r\n    }\r\n    // console.log(this.group1Preferences);\r\n    this.valid = this.missingPreferences.length == 0;\r\n    console.log(this.missingPreferences);\r\n    console.log(this.valid);\r\n\r\n  }\r\n\r\n  // [1, 2, 3, 4]\r\n  // [4, 3, 2, 1]\r\n\r\n  // [1, 4], [1, 3], [1, 2], [1, 1]\r\n  // false, false, false, true\r\n\r\n    // FROM: https://javascript.info/task/shuffle\r\n  shuffle(array: Array<Object>) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      let j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i\r\n  \r\n      // swap elements array[i] and array[j]\r\n      // we use \"destructuring assignment\" syntax to achieve that\r\n      // you'll find more details about that syntax in later chapters\r\n      // same can be written as:\r\n      // let t = array[i]; array[i] = array[j]; array[j] = t\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n  }\r\n\r\n\r\n  checkArrayEquality(a: Array<string>, b: Array<string>) {\r\n    for (let i = 0; i < a.length; i++) {\r\n      if (a[i] !== b[i]) { return false; }\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","<div style=\"min-width: 300px\">\r\n    <h1>Edit Preferences</h1>\r\n\r\n    <p>\r\n      Click on the number below and use arrow keys to change the number of {{ this.algorithmService.pluralMap.get(this.algorithmService.currentAlgorithm.orientation[0]).toLowerCase() }} and {{ this.algorithmService.pluralMap.get(this.algorithmService.currentAlgorithm.orientation[1]).toLowerCase() }}\r\n      <br><br>\r\n      Any preferences should be in the form:\r\n      <br>\r\n      <{{this.algorithmService.currentAlgorithm.orientation[0].toLowerCase()}}/{{this.algorithmService.currentAlgorithm.orientation[1].toLowerCase()}} number>: &lt;preferences separated by commas>\r\n    </p>\r\n\r\n    <form class=\"example-form pl-3\">\r\n      <div class=\"row justify-content-start\" *ngIf=\"this.algorithmService.currentAlgorithm.name == 'Stable Marriage Problem'\">\r\n        <mat-form-field style=\"width: 200px;\">\r\n          <mat-label>Number of Men and Women</mat-label>\r\n          <input [formControl]=\"numberOfGroup1Agents\" type=\"number\" matInput placeholder=\"5\" value=\"5\" (ngModelChange)=\"this.generatePreferenceString()\" min=\"1\" max=\"9\" oninput=\"this.value = this.value > 0 && this.value < 10 ? (!!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null) : Number(String(this.value).charAt(1))\" onDrag=\"return false\" onDrop=\"return false\" onPaste=\"return false\">\r\n          <mat-error *ngIf=\"numberOfGroup1Agents.hasError('required')\">\r\n            This field is <strong>required</strong>\r\n          </mat-error>\r\n          <mat-error *ngIf=\"numberOfGroup1Agents.hasError('min') || numberOfGroup1Agents.hasError('max')\">\r\n            Please input a number between 1 and 9\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n  \r\n      <div class=\"row justify-content-center\" *ngIf=\"this.algorithmService.currentAlgorithm.name == 'Hospitals/Residents Problem'\">\r\n        <mat-form-field style=\"width: 200px;\" class=\"mr-1\">\r\n          <mat-label>Number of Residents</mat-label>\r\n          <input [formControl]=\"numberOfGroup1Agents\" type=\"number\" matInput placeholder=\"5\" value=\"5\" (ngModelChange)=\"this.generatePreferenceString()\" min=\"2\" max=\"9\" oninput=\"this.value = this.value > 1 && this.value < 10 ? (!!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null) : Number(String(this.value).charAt(1))\" onDrag=\"return false\" onDrop=\"return false\" onPaste=\"return false\">\r\n          <mat-error *ngIf=\"numberOfGroup1Agents.hasError('required')\">\r\n            This field is <strong>required</strong>\r\n          </mat-error>\r\n          <mat-error *ngIf=\"numberOfGroup1Agents.hasError('min') || numberOfGroup1Agents.hasError('max')\">\r\n            Please input a number between 1 and 9\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field style=\"width: 200px;\" class=\"ml-1\">\r\n          <mat-label>Number of Hospitals</mat-label>\r\n          <input [formControl]=\"numberOfGroup2Agents\" type=\"number\" matInput placeholder=\"5\" value=\"5\" (ngModelChange)=\"this.generatePreferenceString()\" min=\"2\" max=\"9\" oninput=\"this.value = this.value > 1 && this.value < 10 ? (!!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null) : Number(String(this.value).charAt(1))\" onDrag=\"return false\" onDrop=\"return false\" onPaste=\"return false\">\r\n          <mat-error *ngIf=\"numberOfGroup2Agents.hasError('required')\">\r\n            This field is <strong>required</strong>\r\n          </mat-error>\r\n          <mat-error *ngIf=\"numberOfGroup2Agents.hasError('min') || numberOfGroup2Agents.hasError('max')\">\r\n            Please input a number between 1 and 9\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row justify-content-start\" *ngIf=\"this.algorithmService.currentAlgorithm.name == 'Stable Roommates Problem'\">\r\n        <mat-form-field style=\"width: 200px;\">\r\n          <mat-label>Number of Men and Women</mat-label>\r\n          <input [formControl]=\"numberOfGroup1Agents\" type=\"number\" matInput placeholder=\"5\" value=\"5\" (ngModelChange)=\"this.generatePreferenceString()\" min=\"1\" max=\"10\" oninput=\"this.value = this.value > 0 && this.value < 11 ? (!!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null) : Number(String(this.value))\" onDrag=\"return false\" onDrop=\"return false\" onPaste=\"return false\">\r\n          <mat-error *ngIf=\"numberOfGroup1Agents.hasError('required')\">\r\n            This field is <strong>required</strong>\r\n          </mat-error>\r\n          <mat-error *ngIf=\"numberOfGroup1Agents.hasError('min') || numberOfGroup1Agents.hasError('max')\">\r\n            Please input an even number between 1 and 10\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n  \r\n    </form>\r\n\r\n    <h2 class=\"mt-2\">Input New Preferences</h2>\r\n\r\n    <mat-form-field class=\"example-full-width\" style=\"width: 100%; height:fit-content\">\r\n        <mat-label>Enter your custom preferences here (separated by commas)!</mat-label>\r\n        <textarea matInput placeholder=\"1: A, B, C, D, E\" [(ngModel)]=\"this.formString\" cdkTextareaAutosize #autosize=\"cdkTextareaAutosize\" style=\"overflow: hidden;\" value=\"{{ this.formString }}\" (ngModelChange)=\"this.generateMissingPreferences($event)\"></textarea>\r\n    </mat-form-field>\r\n\r\n    <h2 *ngIf=\"this.missingPreferences.length != 0\">Preferences Missing</h2>\r\n    <span *ngFor=\"let item of this.missingPreferences; let lastItem = last;\">\r\n      <span>({{ item }})</span><span *ngIf=\"!lastItem\">, </span>\r\n    </span>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12 text-right\">\r\n            <button mat-stroked-button (click)=\"generateAlgorithmPreferences()\" [disabled]=\"this.missingPreferences.length != 0 || (this.numberOfGroup1Agents.errors && this.numberOfGroup2Agents.errors)\">Generate!</button>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mat-animated-icon',\r\n  templateUrl: './mat-animated-icon.component.html',\r\n  styleUrls: ['./mat-animated-icon.component.scss']\r\n})\r\nexport class MatAnimatedIconComponent implements OnInit {\r\n\r\n  @Input() start: String;\r\n  @Input() end: String;\r\n  @Input() colorStart: String;\r\n  @Input() colorEnd: String;\r\n  @Input() animate: boolean;\r\n  @Input() animateFromParent?: boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    // console.log(this.colorStart);\r\n    // console.log(this.colorEnd);\r\n  }\r\n\r\n  toggle() {\r\n    if(!this.animateFromParent) this.animate = !this.animate;\r\n  }\r\n\r\n}\r\n","<mat-icon [ngClass]=\"{'animate' : animate}\" color=\"{{animate ? colorEnd : colorStart}}\" (click)=\"toggle()\">{{animate ? end : start}}</mat-icon>","import { Component, HostListener, Input, OnInit } from '@angular/core';\r\nimport { AlgorithmRetrievalService } from 'src/app/algorithm-retrieval.service';\r\nimport { PlaybackService } from '../services/playback/playback.service';\r\n\r\ndeclare var anime: any;\r\n\r\n@Component({\r\n  selector: 'playback-controls',\r\n  templateUrl: './playback-controls.component.html',\r\n  styleUrls: ['./playback-controls.component.scss']\r\n})\r\nexport class PlaybackControlsComponent implements OnInit {\r\n\r\n  @Input() algorithm: string;\r\n\r\n  constructor(public playback: PlaybackService, public algService: AlgorithmRetrievalService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  formatLabel(value: number) {\r\n\r\n    // pause\r\n    value = 3050 - value;\r\n    // play? (maybe not cause so many changes to this.timeInBetween value)\r\n\r\n    if (value >= 1000) {\r\n      return Math.round(value / 1000) + 's';\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  updateSpeed(val: number): void {\r\n    this.playback.speed = 3050 - val;\r\n  }\r\n\r\n  delay(ms: number) {\r\n    return new Promise( resolve => setTimeout(resolve, ms) );\r\n  }\r\n\r\n}\r\n","\r\n\r\n\r\n\r\n\r\n<div class=\"container-fluid py-3\" style=\"background-color: rgb(241, 241, 241); border-top: 0.6px solid rgb(124, 124, 124); \">\r\n    <div class=\"row\" style=\"height: 100%\">\r\n      <div class=\"col-12 mainContentPopover my-auto\" data-toggle=\"popover\" data-placement=\"top\" title=\"Playback Controls\" data-content=\"Use the controls below to interact with the algorithm! Play or step through at a pace you choose with the speed slider, or use the position slider at the bottom to drag through the algorithm!\" data-trigger=\"manual\">\r\n        <div class=\"playback-block\">\r\n            <!-- PLAYBACK CONTROLS -->\r\n            <div>\r\n                <!-- SPEED CONTROL SLIDER -->\r\n                <div>\r\n                    <div class=\"row justify-content-center\">\r\n                    <span style=\"padding-top: 4px\" class=\"mt-2 mr-2\">Slow</span>\r\n                        <mat-slider\r\n                        #timeSlider\r\n                        thumbLabel\r\n                        [displayWith]=\"formatLabel\"\r\n                        tickInterval=\"1000\"\r\n                        min=\"50\"\r\n                        max=\"3000\"\r\n                        value=\"2500\"\r\n                        (input)=\"this.updateSpeed(timeSlider.value)\"></mat-slider>\r\n                        <span style=\"padding-top: 4px\" class=\"mt-2 ml-2\">Fast</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- PLAYBACK ICONS -->\r\n                <div>\r\n                    <div class=\"row justify-content-center\">\r\n                    <!-- GO TO START -->\r\n                    <mat-icon id=\"restartButton\" style=\"cursor: pointer;\" class=\"playbackButton unselectable disabled mr-2\" aria-hidden=\"false\" aria-label=\"Example home icon\" (click)=\"this.playback.restart()\" [ngClass]=\"{'disabled': this.playback.stepCounter == 0}\">skip_previous</mat-icon>\r\n\r\n                    <!-- BACK ONE STEP -->\r\n                    <mat-icon id=\"backButton\" style=\"cursor: pointer;\" class=\"playbackButton unselectable mr-2\" aria-hidden=\"false\" aria-label=\"Example home icon\" (click)=\"this.playback.backStep()\" [ngClass]=\"{'disabled': !this.playback.pause || this.playback.stepCounter == 0}\">fast_rewind</mat-icon>\r\n                    \r\n                    <!-- PLAY -->\r\n                    <mat-animated-icon id=\"playButton\" class=\"playbackButton unselectable\" start=\"play_arrow\" end=\"pause\" colorStart=\"none\" colorEnd=\"none\" [animate]=\"!this.playback.pause\" (click)=\"this.playback.toggle()\" [ngClass]=\"{'disabled': this.playback.stepCounter >= this.playback.numCommands}\"></mat-animated-icon>\r\n\r\n                    <!-- FORWARD ONE STEP -->\r\n                    <mat-icon id=\"forwardButton\" style=\"cursor: pointer;\" class=\"playbackButton unselectable ml-2\" aria-hidden=\"false\" aria-label=\"Example home icon\" (click)=\"this.playback.forwardStep()\" [ngClass]=\"{'disabled': !this.playback.pause || this.playback.stepCounter >= this.playback.numCommands}\">fast_forward</mat-icon>\r\n\r\n                    <!-- GO TO END -->\r\n                    <mat-icon id=\"endButton\" style=\"cursor: pointer;\" class=\"playbackButton unselectable ml-2\" aria-hidden=\"false\" aria-label=\"Example home icon\" (click)=\"this.playback.goToEnd()\" [ngClass]=\"{'disabled': this.playback.stepCounter >= this.playback.numCommands}\">skip_next</mat-icon>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- STEP SLIDER -->\r\n                <div>\r\n                    <div class=\"row justify-content-center\">\r\n                        <div id=\"stepCounter\" style=\"padding-top: 4px; width: 5px\" class=\"mt-2 mr-3\">{{ this.playback.stepCounter }}</div>\r\n                        <mat-slider style=\"width:80%; max-width: 600px;\"\r\n                        #slider\r\n                        thumbLabel\r\n                        [(ngModel)]=\"this.playback.stepCounter\"\r\n                        (input)=\"this.playback.onSliderChange(slider.value)\"\r\n                        tickInterval=\"1\"\r\n                        min=\"0\"\r\n                        max={{this.playback.numCommands}}></mat-slider>\r\n                        <div style=\"padding-top: 4px\" class=\"mt-2 ml-2\">{{ this.playback.numCommands }}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>","import { ElementRef, ViewChild } from '@angular/core';\r\nimport { Injectable } from '@angular/core';\r\nimport { AlgorithmRetrievalService } from '../../../algorithm-retrieval.service';\r\nimport { SidebarComponent } from '../../sidebar/sidebar.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CanvasService {\r\n\r\n  originalGroup1Preferences: Array<Array<string>>;\r\n  originalGroup2Preferences: Array<Array<string>>;\r\n\r\n  // HTML drawing properties\r\n  sizes = [];\r\n  baseSize = undefined;\r\n  font = undefined;\r\n  controlChars = \"{}\\n\\t\";\r\n  spaceSize = 0;\r\n  tabSize = 8; // in spaceSize units\r\n  tabs = (function(){var t = [];for(var i=0; i < 100; i += 8){t.push(i);}; return t;})();\r\n\r\n\r\n  // circle properties\r\n  radiusOfCircles: number = 30;\r\n  yMargin: number = 0.15;\r\n  xMargin: number = 0.3;\r\n\r\n\r\n  // font properties\r\n  fontSize: number = 20;\r\n\r\n\r\n  alwaysShowPreferences: boolean = false;\r\n\r\n  canvas: ElementRef<HTMLCanvasElement>;\r\n\r\n  positions;\r\n\r\n  public currentCommand: Object;\r\n\r\n  public ctx: CanvasRenderingContext2D;\r\n\r\n  lineSizes: Map<string, number> = new Map();\r\n\r\n  firstRun: boolean = true;\r\n\r\n  constructor(public algService: AlgorithmRetrievalService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  setCommand(command) {\r\n    this.currentCommand = command;\r\n    this.redrawCanvas();\r\n  }\r\n\r\n  initialise() {\r\n    // this.lineSizes = new Map();\r\n    this.firstRun = true;\r\n  }\r\n\r\n  // Idea:\r\n  // Start from middle of canvas and \r\n  calculateEqualDistance() {\r\n\r\n    let canvas: HTMLCanvasElement = <HTMLCanvasElement>document.getElementById(\"myCanvas\");\r\n\r\n    let LHSHeightOffset = 0;\r\n    let RHSHeightOffset = 0;\r\n\r\n    if (this.algService.numberOfGroup1Agents == 8) {\r\n      LHSHeightOffset = 8;\r\n      this.radiusOfCircles = 27;\r\n    } else if (this.algService.numberOfGroup1Agents == 9) {\r\n      LHSHeightOffset = 6;\r\n      this.radiusOfCircles = 21;\r\n    } else {\r\n      LHSHeightOffset = 0;\r\n      this.radiusOfCircles = 30;\r\n    }\r\n\r\n    if (this.algService.numberOfGroup2Agents == 8) {\r\n      RHSHeightOffset = 8;\r\n      this.radiusOfCircles = 27;\r\n    } else if (this.algService.numberOfGroup2Agents == 9) {\r\n      RHSHeightOffset = 6;\r\n      this.radiusOfCircles = 21;\r\n    } else {\r\n      RHSHeightOffset = 0;\r\n      this.radiusOfCircles = 30;\r\n    }\r\n\r\n    let effectiveHeight: number = canvas.height - (canvas.height * this.yMargin);\r\n    let effectiveWidth: number = canvas.width - (canvas.width * this.xMargin) \r\n    let spaceBetweenCircles: number = (effectiveHeight / this.algService.numberOfGroup1Agents) + LHSHeightOffset;\r\n    \r\n    let canvasMiddle: number = (effectiveHeight / 2) + 40;\r\n    \r\n    // center points of the canvas for SR circles \r\n    let centerX = (effectiveWidth / 2) + (canvas.width * 0.15)\r\n    let centerY = (effectiveHeight / 2)\r\n    \r\n    // console.log(canvasMiddle);\r\n\r\n    this.positions = {}\r\n\r\n    // canvas Middle \r\n    this.positions[\"middleX\"] = centerX\r\n    this.positions[\"middleY\"] = centerY\r\n\r\n\r\n\r\n    // LHS Positions\r\n\r\n\r\n    if (this.algService.numberOfGroup1Agents % 2 == 1) {\r\n\r\n      // plot middle circle\r\n      this.positions[\"circle\" + Math.floor((this.algService.numberOfGroup1Agents / 2) + 1)] = {\r\n        positionX: (this.currentCommand[\"algorithmSpecificData\"][\"hospitalCapacity\"] ? canvas.width * this.xMargin - 35 : canvas.width * this.xMargin),\r\n        positionY: canvasMiddle\r\n      }\r\n\r\n      // plot circles above middle\r\n      // console.log(\"above middle\");\r\n      for (let i = Math.floor((this.algService.numberOfGroup1Agents / 2)); i > 0; i--) {\r\n        // console.log(i);\r\n        this.positions[\"circle\" + i] = {\r\n          positionX: (this.currentCommand[\"algorithmSpecificData\"][\"hospitalCapacity\"] ? canvas.width * this.xMargin - 35 : canvas.width * this.xMargin),\r\n          positionY: canvasMiddle - ((Math.ceil((this.algService.numberOfGroup1Agents / 2)) - i) * spaceBetweenCircles)\r\n        }\r\n      }\r\n\r\n      // plot circles below middle\r\n      // console.log(\"below middle\");\r\n      for (let i = Math.ceil((this.algService.numberOfGroup1Agents / 2)) + 1; i < this.algService.numberOfGroup1Agents + 1; i++) {\r\n        // console.log(i);\r\n        this.positions[\"circle\" + i] = {\r\n          positionX: (this.currentCommand[\"algorithmSpecificData\"][\"hospitalCapacity\"] ? canvas.width * this.xMargin - 35 : canvas.width * this.xMargin),\r\n          positionY: canvasMiddle + ((i - Math.ceil((this.algService.numberOfGroup1Agents / 2))) * spaceBetweenCircles)\r\n        }\r\n      }\r\n\r\n      // console.log(this.positions);\r\n\r\n    } else {\r\n\r\n      // plot middle circle\r\n      // console.log(Math.floor(this.algService.numberOfGroup1Agents / 2));\r\n      // console.log((Math.ceil(this.algService.numberOfGroup1Agents / 2)) + 1);\r\n      this.positions[\"circle\" + Math.floor(this.algService.numberOfGroup1Agents / 2)] = {\r\n        positionX: (this.currentCommand[\"algorithmSpecificData\"][\"hospitalCapacity\"] ? canvas.width * this.xMargin - 35 : canvas.width * this.xMargin),\r\n        positionY: canvasMiddle - spaceBetweenCircles / 2\r\n      }\r\n\r\n      // plot middle circle\r\n      this.positions[\"circle\" + (Math.ceil(this.algService.numberOfGroup1Agents / 2) + 1)] = {\r\n        positionX: (this.currentCommand[\"algorithmSpecificData\"][\"hospitalCapacity\"] ? canvas.width * this.xMargin - 35 : canvas.width * this.xMargin),\r\n        positionY: canvasMiddle + spaceBetweenCircles / 2\r\n      }\r\n\r\n      // plot circles above middle\r\n      // console.log(\"above middle\");\r\n      for (let i = Math.floor((this.algService.numberOfGroup1Agents / 2)) - 1; i > 0; i--) {\r\n        // console.log(i);\r\n        this.positions[\"circle\" + i] = {\r\n          positionX: (this.currentCommand[\"algorithmSpecificData\"][\"hospitalCapacity\"] ? canvas.width * this.xMargin - 35 : canvas.width * this.xMargin),\r\n          positionY: canvasMiddle - (spaceBetweenCircles / 2) - ((Math.ceil((this.algService.numberOfGroup1Agents / 2)) - i) * spaceBetweenCircles)\r\n        }\r\n      }\r\n\r\n      // // plot circles below middle\r\n      // console.log(\"below middle\");\r\n      for (let i = Math.ceil((this.algService.numberOfGroup1Agents / 2)) + 2; i < this.algService.numberOfGroup1Agents + 1; i++) {\r\n        // console.log(i);\r\n        this.positions[\"circle\" + i] = {\r\n          positionX: (this.currentCommand[\"algorithmSpecificData\"][\"hospitalCapacity\"] ? canvas.width * this.xMargin - 35 : canvas.width * this.xMargin),\r\n          positionY: canvasMiddle + (spaceBetweenCircles / 2) + ((i - Math.ceil((this.algService.numberOfGroup1Agents / 2) + 1)) * spaceBetweenCircles)\r\n        }\r\n      }\r\n\r\n      // console.log(this.positions);\r\n    }\r\n\r\n\r\n    spaceBetweenCircles = (effectiveHeight / this.algService.numberOfGroup2Agents) + RHSHeightOffset;\r\n\r\n    // console.log(this.algService.numberOfGroup2Agents);\r\n    // RHS Circles \r\n\r\n    if (this.algService.numberOfGroup2Agents % 2 == 1) {\r\n\r\n      // plot middle circle\r\n      this.positions[\"circle\" + String.fromCharCode(Math.floor((this.algService.numberOfGroup2Agents / 2) + 1 + 64))] = {\r\n        positionX: canvas.width - (canvas.width * this.xMargin),\r\n        positionY: canvasMiddle\r\n      }\r\n\r\n      // plot circles above middle\r\n      // console.log(\"above middle\");\r\n      for (let i = Math.floor((this.algService.numberOfGroup2Agents / 2)); i > 0; i--) {\r\n        // console.log(i);\r\n        this.positions[\"circle\" + String.fromCharCode(i + 64)] = {\r\n          positionX: canvas.width - (canvas.width * this.xMargin),\r\n          positionY: canvasMiddle - ((Math.ceil((this.algService.numberOfGroup2Agents / 2)) - i) * spaceBetweenCircles)\r\n        }\r\n      }\r\n\r\n      // plot circles below middle\r\n      // console.log(\"below middle\");\r\n      for (let i = Math.ceil((this.algService.numberOfGroup2Agents / 2)) + 1; i < this.algService.numberOfGroup2Agents + 1; i++) {\r\n        // console.log(i);\r\n        this.positions[\"circle\" + String.fromCharCode(i + 64)] = {\r\n          positionX: canvas.width - (canvas.width * this.xMargin),\r\n          positionY: canvasMiddle + ((i - Math.ceil((this.algService.numberOfGroup2Agents / 2))) * spaceBetweenCircles)\r\n        }\r\n      }\r\n\r\n      // console.log(this.positions);\r\n\r\n    } else {\r\n\r\n      // plot middle circle\r\n      // console.log(Math.floor(this.algService.numberOfGroup1Agents / 2));\r\n      // console.log((Math.ceil(this.algService.numberOfGroup1Agents / 2)) + 1);\r\n      // console.log(String.fromCharCode(Math.floor(this.algService.numberOfGroup2Agents / 2) + 64));\r\n      this.positions[\"circle\" + String.fromCharCode(Math.floor(this.algService.numberOfGroup2Agents / 2) + 64)] = {\r\n        positionX: canvas.width - (canvas.width * this.xMargin),\r\n        positionY: canvasMiddle - spaceBetweenCircles / 2\r\n      }\r\n\r\n      // plot middle circle\r\n      this.positions[\"circle\" + String.fromCharCode(Math.ceil(this.algService.numberOfGroup2Agents / 2) + 1 + 64)] = {\r\n        positionX: canvas.width - (canvas.width * this.xMargin),\r\n        positionY: canvasMiddle + spaceBetweenCircles / 2\r\n      }\r\n\r\n      // plot circles above middle\r\n      // console.log(\"above middle\");\r\n      for (let i = Math.floor((this.algService.numberOfGroup2Agents / 2)) - 1; i > 0; i--) {\r\n        // console.log(i);\r\n        this.positions[\"circle\" + String.fromCharCode(i + 64)] = {\r\n          positionX: canvas.width - (canvas.width * this.xMargin),\r\n          positionY: canvasMiddle - (spaceBetweenCircles / 2) - ((Math.ceil((this.algService.numberOfGroup2Agents / 2)) - i) * spaceBetweenCircles)\r\n        }\r\n      }\r\n\r\n      // // plot circles below middle\r\n      // console.log(\"below middle\");\r\n      for (let i = Math.ceil((this.algService.numberOfGroup2Agents / 2)) + 2; i < this.algService.numberOfGroup2Agents + 1; i++) {\r\n        // console.log(i);\r\n        this.positions[\"circle\" + String.fromCharCode(i + 64)] = {\r\n          positionX: canvas.width - (canvas.width * this.xMargin),\r\n          positionY: canvasMiddle + (spaceBetweenCircles / 2) + ((i - Math.ceil((this.algService.numberOfGroup2Agents / 2) + 1)) * spaceBetweenCircles)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  calculateEqualDistance1Group() {\r\n    let canvas: HTMLCanvasElement = <HTMLCanvasElement>document.getElementById(\"myCanvas\");\r\n\r\n    let LHSHeightOffset = 0;\r\n    let RHSHeightOffset = 0;\r\n\r\n    if (this.algService.numberOfGroup1Agents == 8) {\r\n      LHSHeightOffset = 8;\r\n      this.radiusOfCircles = 27;\r\n    } else if (this.algService.numberOfGroup1Agents == 9) {\r\n      LHSHeightOffset = 6;\r\n      this.radiusOfCircles = 21;\r\n    } else {\r\n      LHSHeightOffset = 0;\r\n      this.radiusOfCircles = 30;\r\n    }\r\n\r\n    if (this.algService.numberOfGroup2Agents == 8) {\r\n      RHSHeightOffset = 8;\r\n      this.radiusOfCircles = 27;\r\n    } else if (this.algService.numberOfGroup2Agents == 9) {\r\n      RHSHeightOffset = 6;\r\n      this.radiusOfCircles = 21;\r\n    } else {\r\n      RHSHeightOffset = 0;\r\n      this.radiusOfCircles = 30;\r\n    }\r\n\r\n    let effectiveHeight: number = canvas.height - (canvas.height * this.yMargin);\r\n    let effectiveWidth: number = canvas.width - (canvas.width * this.xMargin) \r\n\r\n    let spaceBetweenCircles: number = (effectiveHeight / this.algService.numberOfGroup1Agents) + LHSHeightOffset;\r\n\r\n    \r\n    // center points of the canvas for SR circles \r\n    let centerX = (effectiveWidth / 2) + (canvas.width * 0.15)\r\n    let centerY = (effectiveHeight / 2)\r\n    \r\n    // console.log(canvasMiddle);\r\n\r\n    this.positions = {}\r\n\r\n    // canvas Middle \r\n    this.positions[\"middleX\"] = centerX\r\n    this.positions[\"middleY\"] = centerY\r\n\r\n    // positions \r\n\r\n    let number = this.algService.numberOfGroup1Agents;\r\n\r\n    let angle = ((Math.PI * 2) / number) ;\r\n    let r = 200;\r\n\r\n    // number to rotated the circle, so that numbering looks more natural \r\n    let offset = 3; \r\n\r\n\r\n    // Draw LHS circles in orange\r\n    for (let i = 2; i < this.algService.numberOfGroup1Agents + 2; i++) {\r\n      \r\n      this.positions[\"circle\" + (i - 1) ] = {\r\n        positionX: r * Math.cos(angle * i) + centerX,\r\n        positionY: r * Math.sin(angle * i) + centerY\r\n      }\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  drawLHSCircles() {\r\n\r\n    console.log(\"LHS draw positions\", this.positions)\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.fillStyle = \"#FF6332\";\r\n\r\n\r\n    // Draw LHS circles in orange\r\n    for (let i = 1; i < this.algService.numberOfGroup1Agents + 1; i++) {\r\n      let posX: number = this.positions[\"circle\" + i].positionX;\r\n      let posY: number = this.positions[\"circle\" + i].positionY;\r\n\r\n      this.ctx.moveTo(posX + this.radiusOfCircles, posY);\r\n      this.ctx.arc(posX, posY, this.radiusOfCircles, 0, Math.PI * 2, true)\r\n    }\r\n\r\n    this.ctx.fill();\r\n    this.ctx.stroke();\r\n\r\n\r\n    // Draw text (numbers)\r\n    for (let i = 1; i < this.algService.numberOfGroup1Agents + 1; i++) {\r\n      let posX: number = this.positions[\"circle\" + i].positionX;\r\n      let posY: number = this.positions[\"circle\" + i].positionY;\r\n\r\n      this.ctx.fillStyle = \"black\";\r\n      this.ctx.font = this.radiusOfCircles + 'px Arial';\r\n\r\n      this.ctx.fillText(String(i), posX - 8, posY + 10, 20);\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  drawRHSCircles() {\r\n    this.ctx.beginPath();\r\n    this.ctx.fillStyle = \"#CA32FF\";\r\n    let currentLetter = 'A';\r\n\r\n    // Draw RHS circles in orange\r\n    for (let i = 0; i < this.algService.numberOfGroup2Agents; i++) {\r\n      let posX: number = this.positions[\"circle\" + currentLetter].positionX;\r\n      let posY: number = this.positions[\"circle\" + currentLetter].positionY;\r\n\r\n      this.ctx.moveTo(posX + this.radiusOfCircles, posY);\r\n      this.ctx.arc(posX, posY, this.radiusOfCircles, 0, Math.PI * 2, true)\r\n      currentLetter = String.fromCharCode((((currentLetter.charCodeAt(0) + 1) - 65 ) % 26) + 65);\r\n    }\r\n\r\n    this.ctx.fill();\r\n    this.ctx.stroke();\r\n\r\n\r\n    currentLetter = 'A';\r\n\r\n    // Draw text (numbers)\r\n    for (let i = 1; i < this.algService.numberOfGroup2Agents + 1; i++) {\r\n      let posX: number = this.positions[\"circle\" + currentLetter].positionX;\r\n      let posY: number = this.positions[\"circle\" + currentLetter].positionY;\r\n\r\n      this.ctx.fillStyle = \"black\";\r\n      this.ctx.font = this.radiusOfCircles + 'px Arial';\r\n\r\n      this.ctx.fillText(currentLetter, posX - 9, posY + 11, 20);\r\n      currentLetter = String.fromCharCode((((currentLetter.charCodeAt(0) + 1) - 65 ) % 26) + 65);\r\n    }\r\n  }\r\n\r\n  drawCircles1Group() {\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.fillStyle = \"#FF6332\";\r\n\r\n\r\n    // number to rotated the circle, so that numbering looks more natural \r\n    let offset = 1;\r\n    // Draw LHS circles in orange\r\n    for (let i = 1; i < this.algService.numberOfGroup1Agents + 1; i++) {\r\n\r\n      let posX: number = this.positions[\"circle\" + i].positionX;\r\n      let posY: number = this.positions[\"circle\" + i].positionY;\r\n\r\n      this.ctx.moveTo(posX + this.radiusOfCircles, posY);\r\n      this.ctx.arc(posX, posY, this.radiusOfCircles, 0, Math.PI * 2, true)\r\n\r\n    }\r\n\r\n\r\n    // colours circles \r\n    this.ctx.fill();\r\n    this.ctx.stroke();\r\n\r\n\r\n    for (let i = offset; i < this.algService.numberOfGroup1Agents + offset; i++) {\r\n      let posX: number = this.positions[\"circle\" + i].positionX;\r\n      let posY: number = this.positions[\"circle\" + i].positionY;\r\n\r\n      this.ctx.fillStyle = \"black\";\r\n      this.ctx.font = this.radiusOfCircles + 'px Arial';\r\n\r\n      this.ctx.fillText(String(i - offset + 1), posX - 8, posY + 10, 20);\r\n\r\n    }\r\n \r\n  }\r\n\r\n\r\n  drawLine1Group(line: Array<string>): void {\r\n\r\n    let color: string = line[2];\r\n\r\n    if (color == \"red\") {\r\n      this.ctx.strokeStyle = \"#EB2A2A\";\r\n    } else if (color == \"green\") {\r\n      this.ctx.strokeStyle = \"#53D26F\";\r\n    }\r\n\r\n    this.ctx.lineWidth = 3;\r\n\r\n    \r\n    let xLen = (this.positions[\"circle\" + line[1]].positionX) - (this.positions[\"circle\" + line[0]].positionX)\r\n    let yLen = (this.positions[\"circle\" + line[1]].positionY) - (this.positions[\"circle\" + line[0]].positionY)\r\n\r\n\r\n    // halfX = this.positions[\"circle\" + line[0]].positionX + (xLen * (1 - Math.abs(this.radiusOfCircles / yLen)))\r\n    // halfY = this.positions[\"circle\" + line[0]].positionY + (yLen * (1 - Math.abs(this.radiusOfCircles / yLen))) \r\n\r\n    let halfX = this.positions[\"circle\" + line[0]].positionX + (xLen * 0.8)\r\n    let halfY = this.positions[\"circle\" + line[0]].positionY + (yLen * 0.8) \r\n\r\n\r\n\r\n    let angle = Math.atan(yLen / xLen)\r\n\r\n  \r\n    let newX = 0\r\n    let newY = 0\r\n\r\n    let right = false;\r\n\r\n    // if starting < ending - pointing right- canvas in bottum right quadrent\r\n    if (this.positions[\"circle\" + line[0]].positionX < this.positions[\"circle\" + line[1]].positionX) {\r\n      right = true\r\n    } else {\r\n      right = false\r\n    }\r\n\r\n    // draw arrow \r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.positions[\"circle\" + line[0]].positionX, this.positions[\"circle\" + line[0]].positionY);\r\n    \r\n\r\n    if (color != \"green\") {\r\n\r\n      this.ctx.lineTo(halfX, halfY);\r\n    \r\n      if (right) {\r\n\r\n        newX = halfX + 20 * Math.cos(angle + (3 * Math.PI / 4))\r\n        newY = halfY + 20 * Math.sin(angle + (3 * Math.PI / 4))\r\n\r\n      } else {\r\n\r\n        newX = halfX + 20 * Math.cos(angle + (Math.PI / 4))\r\n        newY = halfY + 20 * Math.sin(angle + (Math.PI / 4))\r\n      }\r\n\r\n      this.ctx.lineTo(newX, newY)\r\n      this.ctx.lineTo(halfX, halfY);\r\n\r\n\r\n      if (right) {\r\n\r\n        newX = halfX + 20 * Math.cos(angle - (3 * Math.PI / 4))\r\n        newY = halfY + 20 * Math.sin(angle - (3 * Math.PI / 4))\r\n\r\n      } else {\r\n\r\n        newX = halfX + 20 * Math.cos(angle - (Math.PI / 4))\r\n        newY = halfY + 20 * Math.sin(angle - (Math.PI / 4))\r\n      }\r\n\r\n      this.ctx.lineTo(newX, newY)\r\n\r\n    } else {\r\n      this.ctx.lineTo(this.positions[\"circle\" + line[1]].positionX, this.positions[\"circle\" + line[1]].positionY);\r\n    }\r\n    \r\n    this.ctx.stroke();\r\n\r\n    this.ctx.strokeStyle = \"#000000\";\r\n    this.ctx.lineWidth = 1;\r\n\r\n  }\r\n\r\n  drawLine(line: Array<string>): void {\r\n\r\n    let color: string = line[2];\r\n\r\n    if (color == \"red\") {\r\n      this.ctx.strokeStyle = \"#EB2A2A\";\r\n    } else if (color == \"green\") {\r\n      this.ctx.strokeStyle = \"#53D26F\";\r\n    }\r\n\r\n    this.ctx.lineWidth = 3;\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.positions[\"circle\" + line[0]].positionX, this.positions[\"circle\" + line[0]].positionY);\r\n    this.ctx.lineTo(this.positions[\"circle\" + line[1]].positionX, this.positions[\"circle\" + line[1]].positionY);\r\n    this.ctx.stroke();\r\n\r\n    this.ctx.strokeStyle = \"#000000\";\r\n    this.ctx.lineWidth = 1;\r\n\r\n  }\r\n\r\n\r\n  drawAllPreferences() {\r\n\r\n    this.ctx.font = this.fontSize + 'px Arial';\r\n\r\n    let group1PreferenceList: Array<Array<string>> = Object.values(this.currentCommand[\"group1CurrentPreferences\"]);\r\n\r\n    if (group1PreferenceList.length <= 0) {\r\n      group1PreferenceList = Array.from(this.currentCommand[\"group1CurrentPreferences\"].values());\r\n    }\r\n\r\n\r\n    for (let i = 1; i < this.algService.numberOfGroup1Agents + 1; i++) {\r\n      this.drawText(this.ctx, group1PreferenceList[i-1].join(\", \"), this.positions[\"circle\" + i].positionX - this.lineSizes.get(String(i)) * 2 - 65, this.positions[\"circle\" + i].positionY + 7, this.fontSize);\r\n    }\r\n\r\n    // only draw group2 if it is not SR\r\n    \r\n    let group2PreferenceList: Array<Array<string>> = Object.values(this.currentCommand[\"group2CurrentPreferences\"]);\r\n    let currentLetter = 'A';\r\n\r\n    if (group2PreferenceList.length <= 0) {\r\n      group2PreferenceList = Array.from(this.currentCommand[\"group2CurrentPreferences\"].values());\r\n    }\r\n\r\n    for (let i = 1; i < this.algService.numberOfGroup2Agents + 1; i++) {\r\n      this.drawText(this.ctx, group2PreferenceList[i-1].join(\", \"), this.positions[\"circle\" + currentLetter].positionX + (this.currentCommand[\"algorithmSpecificData\"][\"hospitalCapacity\"] ? 115 : 65), this.positions[\"circle\" + currentLetter].positionY + 7, this.fontSize);\r\n      currentLetter = String.fromCharCode((((currentLetter.charCodeAt(0) + 1) - 65 ) % 26) + 65);\r\n    }\r\n    \r\n  }\r\n\r\n  drawAllPreferences1Group() {\r\n\r\n    this.ctx.font = this.fontSize + 'px Arial';\r\n\r\n    let group1PreferenceList: Array<Array<string>> = Object.values(this.currentCommand[\"group1CurrentPreferences\"]);\r\n\r\n    if (group1PreferenceList.length <= 0) {\r\n      group1PreferenceList = Array.from(this.currentCommand[\"group1CurrentPreferences\"].values());\r\n    }\r\n\r\n    let num = this.algService.numberOfGroup1Agents\r\n\r\n    for (let i = 1; i < num / 2 + 1; i++) {\r\n      this.drawText(this.ctx, \r\n      group1PreferenceList[i-1].join(\", \"),\r\n      this.positions[\"circle\" + i].positionX - (this.lineSizes.get(String(i)) * 2) - 65,\r\n      this.positions[\"circle\" + i].positionY + 7, this.fontSize);\r\n    }\r\n\r\n    for (let i = (num / 2) + 1; i < num + 1; i++) {\r\n      this.drawText(this.ctx, \r\n      group1PreferenceList[i-1].join(\", \"),\r\n      this.positions[\"circle\" + i].positionX + 65,\r\n      this.positions[\"circle\" + i].positionY + 7, this.fontSize);\r\n    }\r\n\r\n  }\r\n\r\n  drawRelevantPreferences() {\r\n\r\n    let group1PreferenceList: Array<Array<string>> = Object.values(this.currentCommand[\"group1CurrentPreferences\"]);\r\n\r\n    if (group1PreferenceList.length <= 0) {\r\n      group1PreferenceList = Array.from(this.currentCommand[\"group1CurrentPreferences\"].values());\r\n    }\r\n\r\n    let group2PreferenceList: Array<Array<string>> = Object.values(this.currentCommand[\"group2CurrentPreferences\"]);\r\n\r\n    if (group2PreferenceList.length <= 0) {\r\n      group2PreferenceList = Array.from(this.currentCommand[\"group2CurrentPreferences\"].values());\r\n    }\r\n\r\n    for (let agent of this.currentCommand[\"relevantPreferences\"]) {\r\n      if (agent.match(/[A-Z]/i)) {\r\n        this.drawText(this.ctx, group2PreferenceList[(((agent.charCodeAt(0)) - 65 ))].join(\", \"), this.positions[\"circle\" + agent].positionX + (this.currentCommand[\"algorithmSpecificData\"][\"hospitalCapacity\"] ? 115 : 65), this.positions[\"circle\" + agent].positionY + 7, this.fontSize);\r\n      } else {\r\n        this.drawText(this.ctx, group1PreferenceList[agent - 1].join(\", \"), this.positions[\"circle\" + agent].positionX - this.lineSizes.get(agent) * 2 - 65, this.positions[\"circle\" + agent].positionY + 7, this.fontSize);\r\n      }\r\n    }\r\n  }\r\n\r\n  drawHospitalCapacity() {\r\n    let hospitalCapacityMap = this.currentCommand[\"algorithmSpecificData\"][\"hospitalCapacity\"];\r\n\r\n    this.ctx.font = this.fontSize + 'px Arial';\r\n\r\n    let currentLetter = 'A';\r\n\r\n    for (let i = 1; i < this.algService.numberOfGroup2Agents + 1; i++) {\r\n\r\n      let currentCapacity: number = hospitalCapacityMap[currentLetter];\r\n\r\n      this.drawText(this.ctx, \"(\" + String(currentCapacity) + \")\", this.positions[\"circle\" + currentLetter].positionX + 60, this.positions[\"circle\" + currentLetter].positionY + 7, this.fontSize);\r\n      // this.ctx.fillText(group2PreferenceList[i-1].join(\", \"), this.positions[\"circle\" + currentLetter].positionX + 65, this.positions[\"circle\" + currentLetter].positionY + 7);\r\n      currentLetter = String.fromCharCode((((currentLetter.charCodeAt(0) + 1) - 65 ) % 26) + 65);\r\n    }\r\n\r\n  }\r\n\r\n  selectCircles(circles: Array<string>) {\r\n\r\n    let originalLineWidth: number = this.ctx.lineWidth;\r\n    let originalStrokeStyle: string | CanvasGradient | CanvasPattern = this.ctx.strokeStyle;\r\n\r\n    this.ctx.lineWidth = 4;\r\n    this.ctx.strokeStyle = \"#53D26F\";\r\n\r\n    for (let agent of circles) {\r\n\r\n      this.ctx.beginPath();\r\n\r\n      let posX: number = this.positions[\"circle\" + agent].positionX;\r\n      let posY: number = this.positions[\"circle\" + agent].positionY;\r\n\r\n      this.ctx.moveTo(posX + this.radiusOfCircles, posY);\r\n\r\n      this.ctx.arc(posX, posY, this.radiusOfCircles, 0, Math.PI * 2, true)\r\n\r\n      this.ctx.stroke();\r\n\r\n    }\r\n\r\n    this.ctx.lineWidth = originalLineWidth;\r\n    this.ctx.strokeStyle = originalStrokeStyle;\r\n\r\n  }\r\n\r\n\r\n  getNextTab(x) {\r\n    let i = 0;\r\n    while(i < this.tabs.length){\r\n        if(x < this.tabs[i] * this.tabSize * this.spaceSize){\r\n            return this.tabs[i] * this.tabSize * this.spaceSize;\r\n        }\r\n        i++;\r\n    }\r\n    return this.tabs[i-1] * this.tabSize * this.spaceSize;\r\n  }\r\n\r\n  getFontSize(font) {\r\n    var numFind = /[0-9]+/;\r\n    var number: number = Number(numFind.exec(font)[0]);\r\n    if(isNaN(number)){\r\n        throw Error(\"SimpleTextStyler Cant find font size\");\r\n    }\r\n    return Number(number);\r\n    \r\n  }\r\n\r\n  setFont(font = this.ctx.font) {\r\n    this.font = this.ctx.font = font;\r\n    this.baseSize = this.getFontSize(font);\r\n    for(var i = 32; i < 256; i ++){\r\n        this.sizes[i-32] = this.ctx.measureText(String.fromCharCode(i)).width/this.baseSize;\r\n    }\r\n    this.spaceSize = this.sizes[0];\r\n\r\n}\r\n\r\n\r\n// FROM: https://stackoverflow.com/questions/43904201/how-can-i-colour-different-words-in-the-same-line-with-html5-canvas\r\n// adapted for use in this project\r\n  drawText(context,text,x,y,size){\r\n    var i,len,subText;\r\n    var w,scale;\r\n    var xx,yy,ctx;\r\n    var state = [];\r\n    if(text === undefined){ return }\r\n    xx = x;\r\n    yy = y;\r\n    if(!context.setTransform){ // simple test if this is a 2D context\r\n        if(context.ctx){ ctx = context.ctx } // may be a image with attached ctx?\r\n        else{ return }\r\n    }else { ctx = context }\r\n\r\n    function renderText(text){\r\n    \r\n        ctx.save();\r\n        ctx.fillStyle = colour;\r\n        ctx.translate(x,y)\r\n        ctx.scale(scale,scale)\r\n        ctx.fillText(text,0,0);\r\n        ctx.restore();\r\n    }\r\n    var colour = ctx.fillStyle;\r\n    ctx.font = this.font;\r\n    len = text.length;\r\n    subText = \"\";\r\n    w = 0;\r\n    i = 0;\r\n    scale = size / this.baseSize;\r\n    while(i < len){\r\n        var c = text[i];\r\n        var cc = text.charCodeAt(i);\r\n        if(cc < 256){ // only ascii\r\n            if(this.controlChars.indexOf(c) > -1){\r\n                if(subText !== \"\"){\r\n                    scale = size / this.baseSize;\r\n                    renderText(subText);\r\n                    x += w;\r\n                    w = 0;\r\n                    subText = \"\";                        \r\n                }\r\n                if(c === \"\\n\"){  // return move to new line\r\n                    x = xx;\r\n                    y += size;\r\n                }else\r\n                if(c === \"\\t\"){ // tab move to next tab\r\n                    x = this.getNextTab(x-xx)+xx;\r\n                }else\r\n                if(c === \"{\"){   // Text format delimiter                       \r\n                    state.push({\r\n                        size : size,\r\n                        colour : colour,\r\n                        x:x,\r\n                        y:y,\r\n                    })\r\n                    i += 1;\r\n                    var t = text[i];\r\n                    if(t === \"#\"){\r\n                      colour = text.substr(i,7);\r\n                      i+= 6;\r\n                    }\r\n                }else if(c  === \"}\"){\r\n                    var s = state.pop();\r\n                    y = s.y;\r\n                    size = s.size;\r\n                    colour = s.colour;\r\n                    scale = size / this.baseSize;\r\n                }\r\n            }else{\r\n                subText += c;\r\n                w += this.sizes[cc-32] * (size ) ;\r\n            }\r\n        }\r\n        i += 1;\r\n    }\r\n    if(subText !== \"\"){\r\n        renderText(subText);\r\n    }\r\n  \r\n  }\r\n\r\n\r\n\r\n  redrawCanvas(command?: Object): void {\r\n\r\n    if (command) {\r\n      this.currentCommand = command;\r\n    }\r\n\r\n    let canvas: HTMLCanvasElement = <HTMLCanvasElement>document.getElementById(\"myCanvas\");\r\n    var parent = document.getElementById(\"parent\");\r\n    canvas.width = parent.offsetWidth - 20;\r\n    canvas.height = parent.offsetHeight - 20;\r\n\r\n    if (this.firstRun) {\r\n      this.originalGroup1Preferences = Array.from(this.currentCommand[\"group1CurrentPreferences\"].values());\r\n      this.originalGroup2Preferences = Array.from(this.currentCommand[\"group2CurrentPreferences\"].values());\r\n      this.firstRun = false;\r\n    }\r\n\r\n    this.lineSizes = new Map();\r\n    for (let i=1; i < this.algService.numberOfGroup1Agents + 1; i++) {\r\n      let lineSize = this.ctx.measureText(this.originalGroup1Preferences[i-1].join(\", \")).width;\r\n      this.lineSizes.set(String(i), lineSize);\r\n    }\r\n\r\n    this.setFont();\r\n\r\n    \r\n    \r\n\r\n   \r\n    // this.drawLineBetween(\"circle1\", \"circleE\", \"red\")\r\n    // this.drawLineBetween(\"circle1\", \"circleB\");\r\n\r\n    // draw circles\r\n\r\n    // if SR Algorithm\r\n    if (this.currentCommand[\"algorithmSpecificData\"][\"SR\"]) {\r\n\r\n      // draw lines between circles (matches and relations)\r\n      for (let line of this.currentCommand[\"currentLines\"]) {\r\n        this.drawLine1Group(line);\r\n      }\r\n\r\n      // update positions of all canvas elements\r\n      this.calculateEqualDistance1Group();\r\n      this.drawCircles1Group();\r\n\r\n    } else {\r\n\r\n      // draw lines between circles (matches and relations)\r\n      for (let line of this.currentCommand[\"currentLines\"]) {\r\n        this.drawLine(line);\r\n      }\r\n\r\n      // update positions of all canvas elements\r\n      this.calculateEqualDistance();\r\n\r\n      this.drawLHSCircles();\r\n      this.drawRHSCircles();\r\n    }\r\n    \r\n    \r\n\r\n    if (this.currentCommand) {\r\n      if (this.currentCommand[\"algorithmSpecificData\"][\"hospitalCapacity\"]) {\r\n        this.drawHospitalCapacity();\r\n      }\r\n\r\n      if (this.currentCommand[\"relevantPreferences\"].length >= 1 && this.alwaysShowPreferences) {\r\n        this.drawRelevantPreferences();\r\n      } else {\r\n\r\n        // preferances drawn differently for SR\r\n        if (this.currentCommand[\"algorithmSpecificData\"][\"SR\"]){\r\n          this.drawAllPreferences1Group();\r\n        } else {\r\n          this.drawAllPreferences();\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n\r\n\r\n    this.selectCircles(this.currentCommand[\"currentlySelectedAgents\"]);\r\n\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CombineLatestSubscriber } from 'rxjs/internal/observable/combineLatest';\r\nimport { AlgorithmRetrievalService } from 'src/app/algorithm-retrieval.service';\r\nimport { MatchingAlgorithm } from '../../algorithms/abstract-classes/MatchingAlgorithm';\r\nimport { AlgorithmData } from '../../algorithms/interfaces/AlgorithmData';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExecutionService {\r\n\r\n  commandMap = {}\r\n  commandList = {};\r\n\r\n  // add the services for any new algorithms here\r\n  constructor(\r\n    public algorithmRetrieval: AlgorithmRetrievalService\r\n  ) { }\r\n\r\n  initialise(): void {\r\n    this.commandMap = {};\r\n    this.commandList = {};\r\n  }\r\n\r\n  getExecutionFlow(algorithm: string, numberOfAgents: number, numberOfGroup2Agents: number = numberOfAgents, preferences: Map<String, Array<String>>, SRstable: boolean = true): Object {\r\n    this.initialise();\r\n    let algorithmService: MatchingAlgorithm = this.algorithmRetrieval.mapOfAvailableAlgorithms.get(algorithm).service;\r\n    this.commandMap = this.algorithmRetrieval.mapOfAvailableAlgorithms.get(algorithm).helpTextMap;\r\n    // console.log(this.commandMap);\r\n\r\n    console.log(\"get execution flow\", SRstable)\r\n    let commandList: AlgorithmData = algorithmService.run(numberOfAgents, numberOfGroup2Agents, preferences, SRstable);\r\n\r\n    commandList.descriptions = this.generateDescriptions(commandList);\r\n\r\n    console.log(commandList);\r\n\r\n    // this.drawService.redrawCanvas(commandList[\"commands\"][0]);\r\n\r\n    return commandList;\r\n  }\r\n\r\n\r\n\r\n  // --------------------------------------------------------- FUNCTIONS TO GENERATE LINE DESCRIPTIONS\r\n\r\n  generateDescriptions(commandList: AlgorithmData): String[] {\r\n    let descriptions = [];\r\n\r\n    for (let step of commandList[\"commands\"]) {\r\n\r\n      let lineNumber = step[\"lineNumber\"];\r\n      let stepVariables = step[\"stepVariables\"];\r\n\r\n      if (stepVariables) {\r\n        descriptions.push(this.generateMessage(lineNumber, stepVariables));\r\n      } else {\r\n        descriptions.push(this.commandMap[lineNumber]);\r\n      }\r\n    }\r\n\r\n    return descriptions;\r\n  }\r\n\r\n\r\n  generateMessage(commandNum: number, replacements: Object): string {\r\n\r\n    var str = this.commandMap[commandNum];\r\n\r\n    // FROM: https://stackoverflow.com/questions/7975005/format-a-javascript-string-using-placeholders-and-an-object-of-substitutions\r\n    str = str.replace(/%\\w+%/g, function(all: string | number) {\r\n      return replacements[all] || all;\r\n    });\r\n\r\n    return str;\r\n  }\r\n  \r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { ExecutionService } from '../execution/execution.service';\r\nimport { CanvasService } from '../canvas/canvas.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlaybackService {\r\n\r\n  // algorithm data variables\r\n  public algorithmData: Object;\r\n  commandList: Array<Object>;\r\n  currentCommand: Object;\r\n\r\n  // playback variables\r\n  firstRun: boolean = true;\r\n  stepCounter: number;\r\n  previousStepCounter: number;\r\n  currentLine: number;\r\n  numCommands: number;\r\n  pause: boolean = true;\r\n  speed: number = 500;\r\n\r\n  description: string = \"Click play to run the program below!\";\r\n\r\n  constructor(public exeService: ExecutionService, public drawService: CanvasService) { }\r\n\r\n  initialise(): void {\r\n    this.algorithmData = {};\r\n    this.commandList = [];\r\n    this.currentCommand = {};\r\n  }\r\n\r\n  resetPlaybackData(): void {\r\n    this.firstRun = true;\r\n    this.stepCounter = 0;\r\n    this.previousStepCounter = 0;\r\n    this.currentLine = 0;\r\n    this.pause = true;\r\n\r\n    this.description = \"Click play to run the program below!\";\r\n  }\r\n\r\n  setAlgorithm(algorithm: string, numberOfAgents: number, numberOfGroup2Agents: number = numberOfAgents, preferences: Map<String, Array<String>> = null, SRstable: boolean = true): void {\r\n\r\n    this.initialise();\r\n    console.log(\"Set algorithm\", SRstable)\r\n    this.algorithmData = this.exeService.getExecutionFlow(algorithm, numberOfAgents, numberOfGroup2Agents, preferences, SRstable);\r\n    this.commandList = this.algorithmData[\"commands\"];\r\n    this.resetPlaybackData();\r\n    this.numCommands = this.commandList.length-1;\r\n\r\n    // console.log(this.algorithmData);\r\n    this.updateCurrentCommand();\r\n\r\n  }\r\n\r\n  setSpeed(milliseconds: number) {\r\n    this.speed = milliseconds;\r\n  }\r\n\r\n  updateCurrentCommand(): void {\r\n    if (this.previousStepCounter != this.stepCounter) {\r\n      this.previousStepCounter = this.stepCounter;\r\n    }\r\n\r\n    this.currentCommand = this.algorithmData[\"commands\"][this.stepCounter];\r\n    this.description = this.algorithmData[\"descriptions\"][this.stepCounter];\r\n    this.currentLine = this.currentCommand[\"lineNumber\"];\r\n    this.drawService.redrawCanvas(this.currentCommand);\r\n  }\r\n\r\n\r\n  restart(): void {\r\n    this.pause = true;\r\n    this.uncolourCurrentLine();\r\n    this.stepCounter = 0;\r\n    this.updateCurrentCommand();\r\n    this.colourCurrentLine();\r\n  }\r\n\r\n  goToEnd(): void {\r\n    this.pause = true;\r\n    this.uncolourCurrentLine();\r\n    this.stepCounter = this.numCommands;\r\n    this.updateCurrentCommand();\r\n    this.colourCurrentLine();\r\n  }\r\n\r\n  backStep(): void {\r\n    this.uncolourCurrentLine();\r\n    if (this.stepCounter > 0) { this.stepCounter--; }\r\n    this.updateCurrentCommand();\r\n    this.colourCurrentLine(); \r\n  }\r\n\r\n  forwardStep(): void {\r\n    this.uncolourCurrentLine();\r\n    if (this.stepCounter < this.numCommands) { this.stepCounter++; }\r\n    this.updateCurrentCommand();\r\n    this.colourCurrentLine();\r\n  }\r\n\r\n  async toggle() {\r\n    if (this.firstRun) {\r\n      this.firstRun = false;\r\n      this.pause = false;\r\n      this.play();\r\n    } else {\r\n      if (this.pause) {\r\n        this.pause = false;\r\n        this.play();\r\n      } else {\r\n        this.pause = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  async play(): Promise<void> {\r\n    while (this.stepCounter < this.numCommands) {\r\n\r\n      if (this.pause) {\r\n        console.log(\"Paused at step \" + (this.stepCounter) + \"!\");\r\n        console.log(\"Current Line: \" + this.currentLine);\r\n        break;\r\n      }\r\n\r\n      this.colourCurrentLine();\r\n\r\n      await this.sleep(this.speed);\r\n\r\n      if (!this.pause) {\r\n        // console.log(this.stepCounter + \" | \" + this.numCommands);\r\n        this.uncolourCurrentLine();\r\n        this.stepCounter++;\r\n        this.updateCurrentCommand();\r\n        if (this.stepCounter >= this.numCommands) {\r\n          this.pause = true;\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  async sleep(msec: number) {\r\n    return new Promise(resolve => setTimeout(resolve, msec));\r\n  }\r\n\r\n\r\n  uncolourCurrentLine(): void {\r\n    let codeLineHTML = document.getElementById(\"line\" + this.currentLine);\r\n    codeLineHTML.style.backgroundColor = \"\";\r\n    codeLineHTML.style.color = \"\";\r\n  }\r\n\r\n  colourCurrentLine(): void {\r\n    let codeLineHTML = document.getElementById(\"line\" + this.currentLine);\r\n    codeLineHTML.style.backgroundColor = \"black\";\r\n    codeLineHTML.style.color = \"#37FF00\";\r\n  }\r\n\r\n\r\n  onSliderChange(val: number) {\r\n\r\n    if (this.firstRun) {\r\n      this.firstRun = false;\r\n    }\r\n\r\n    if (this.previousStepCounter != this.stepCounter) {\r\n      this.previousStepCounter = this.stepCounter;\r\n    }\r\n\r\n    this.pause = true;\r\n\r\n    this.stepCounter = val;\r\n\r\n    var command = this.commandList[this.previousStepCounter];\r\n    let a = document.getElementById(\"line\" + command[\"lineNumber\"]);\r\n    a.style.backgroundColor = \"\";\r\n    a.style.color = \"\";\r\n\r\n    this.updateCurrentCommand();\r\n    \r\n    this.colourCurrentLine();\r\n  }\r\n\r\n\r\n  // unboldenVariables(): void {\r\n\r\n  //   var command = this.commandList[this.stepCounter-1];\r\n  //   let changeTrace = command[\"changeTrace\"][\"embolden\"];\r\n\r\n  //   console.log(changeTrace);\r\n\r\n  //   for (let className of changeTrace) {\r\n  //     let a = document.getElementsByClassName(className);\r\n  //     for (let i = 0; i < a.length; i++) {\r\n  //       a[i].setAttribute(\"style\", \"font-weight: normal;\");\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  // unboldenPreviousVariables(): void {\r\n\r\n  //   var command = this.commandList[this.previousStepCounter];\r\n  //   let changeTrace = command[\"changeTrace\"][\"embolden\"];\r\n\r\n  //   console.log(changeTrace);\r\n\r\n  //   for (let className of changeTrace) {\r\n  //     let a = document.getElementsByClassName(className);\r\n  //     for (let i = 0; i < a.length; i++) {\r\n  //       a[i].setAttribute(\"style\", \"font-weight: normal;\");\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  // unboldenCurrentVariables(): void {\r\n\r\n  //   var command = this.commandList[this.stepCounter];\r\n  //   let changeTrace = command[\"changeTrace\"][\"embolden\"];\r\n\r\n  //   console.log(changeTrace);\r\n\r\n  //   for (let className of changeTrace) {\r\n  //     let a = document.getElementsByClassName(className);\r\n  //     for (let i = 0; i < a.length; i++) {\r\n  //       a[i].setAttribute(\"style\", \"font-weight: normal;\");\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n\r\n  // emboldenVariables(): void {\r\n\r\n  //   var command = this.commandList[this.stepCounter];\r\n  //   let changeTrace = command[\"changeTrace\"][\"embolden\"];\r\n\r\n  //   for (let className of changeTrace) {\r\n  //     let a = document.getElementsByClassName(className);\r\n  //     for (let i = 0; i < a.length; i++) {\r\n  //       a[i].setAttribute(\"style\", \"font-weight: bold;\");\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PlaybackService } from '../../services/playback/playback.service';\r\n\r\n@Component({\r\n  selector: 'alg-description',\r\n  templateUrl: './alg-description.component.html',\r\n  styleUrls: ['./alg-description.component.scss', '../sidebar.component.scss']\r\n})\r\nexport class AlgDescriptionComponent implements OnInit {\r\n\r\n  constructor(public playback: PlaybackService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row text-center border-bottom px-5\" id=\"descriptionDiv\">\r\n    <h3 class=\"col-12 h2 sidebarPopover my-auto text-center pr-4\" id=\"algorithmDescription\" data-toggle=\"popover\" data-placement=\"left\" title=\"Current Line Description\"\r\n    data-content=\"This gives you a description of what's happening in the algorithm at this step with reference to the variables involved.\" data-trigger=\"manual\"\r\n    data-template='<div class=\"popover fade show bs-popover-right popoverPositioning blackText\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-header\"></h3><div class=\"popover-body\"></div></div>'>\r\n        {{ this.playback.description }}\r\n    </h3>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { PlaybackService } from '../../services/playback/playback.service';\r\n\r\n@Component({\r\n  selector: 'execution-log',\r\n  templateUrl: './execution-log.component.html',\r\n  styleUrls: ['./execution-log.component.scss', '../sidebar.component.scss']\r\n})\r\nexport class ExecutionLogComponent implements OnInit {\r\n\r\n  constructor(public playback: PlaybackService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"sidebarPopover\" id=\"executionTrace\" data-toggle=\"popover\" data-placement=\"left\" title=\"Execution Trace\" data-content=\"This will fill out as you play the algorithm with a log of all current line descriptions, so you can go back and get a better idea of what happens at certain parts in the algorithm!\" data-trigger=\"manual\"\r\n  data-template='<div class=\"popover fade show bs-popover-right popoverPositioning blackText\" style=\"color:black\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-header\"></h3><div class=\"popover-body\"></div></div>'>\r\n  <h1 class=\"pt-4 pl-3\" style=\"color:rgb(231, 231, 231); font-weight: 300; margin-bottom: 0; padding-bottom: 0; font-size: 1.4vw;\">\r\n    Execution Log\r\n  </h1>\r\n  <ol start=0 class=\"pt-3 pb-4\" style=\"width: 100%; display: table; margin: 0; vertical-align: middle; background-color: #1b1f23; padding-left: 30px; font-size: 0.8vw; line-height: 1.2vw;\">\r\n    <li class=\"mb-4 pr-2\" *ngFor=\"let line of this.playback.algorithmData['descriptions'].slice(0, this.playback.stepCounter + 1)\">\r\n      {{ line }}.\r\n    </li>\r\n  </ol>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AlgorithmRetrievalService } from 'src/app/algorithm-retrieval.service';\r\nimport { PlaybackService } from '../../services/playback/playback.service';\r\n\r\n@Component({\r\n  selector: 'free-agents',\r\n  templateUrl: './free-agents.component.html',\r\n  styleUrls: ['./free-agents.component.scss', '../sidebar.component.scss']\r\n})\r\nexport class FreeAgentsComponent implements OnInit {\r\n\r\n  constructor(\r\n    public playback: PlaybackService,  // injecting the playback service\r\n    public algorithmService: AlgorithmRetrievalService) {}  // injecting the algorithm service) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"border-bottom align-items-center\">\r\n    <div class=\"row align-items-center mx-2\" style=\"height: 100%\">\r\n      <div class=\"col-4 pr-2\" style=\"font-size: 22px;\">\r\n        <span style=\"font-size: 0.9vw;\">Free {{ this.algorithmService.pluralMap.get(this.algorithmService.currentAlgorithm.orientation[0]) }}:</span>\r\n      </div>\r\n      <div class=\"col-8 text-center pr-5 py-3\" style=\"font-size: 0.9vw;\">\r\n        [\r\n        <span *ngFor=\"let item of this.playback.commandList[this.playback.stepCounter]['freeAgents']; let lastItem = last;\">\r\n          <span class=\"{{ item }}\">{{ item.slice(item.length - 1) }}</span><span *ngIf=\"!lastItem\">, </span>\r\n        </span>\r\n        ]\r\n      </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AlgorithmRetrievalService } from 'src/app/algorithm-retrieval.service';\r\nimport { PlaybackService } from '../../services/playback/playback.service';\r\n\r\n@Component({\r\n  selector: 'pseudocode',\r\n  templateUrl: './pseudocode.component.html',\r\n  styleUrls: ['./pseudocode.component.scss', '../sidebar.component.scss']\r\n})\r\nexport class PseudocodeComponent implements OnInit {\r\n\r\n  algorithm: string;\r\n  animate: boolean = true;\r\n\r\n  constructor(public playback: PlaybackService, public algService: AlgorithmRetrievalService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.algorithm = this.algService.currentAlgorithm.id;\r\n  }\r\n\r\n}\r\n","<div class=\"border-bottom sidebarPopover mr-2\" style=\"background-color: #1b1f23; max-width: 100%;\" data-toggle=\"popover\" data-placement=\"left\" title=\"Code Display\" data-content=\"This highlights the current line that's being executed in the algorithm as you play or drag the playback slider.\" data-trigger=\"manual\"\r\ndata-template='<div class=\"popover fade show bs-popover-right popoverPositioning blackText\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-header\"></h3><div class=\"popover-body\"></div></div>'>\r\n    <h1 class=\"pt-4 pl-3\" style=\"color:rgb(231, 231, 231); font-weight: 300; margin-bottom: 0; padding-bottom: 0; font-size: 1.4vw;\">\r\n        Pseudocode\r\n    </h1>\r\n\r\n    <div style=\"white-space: pre; height: 100%; vertical-align: middle; font-size: 0.8vw; line-height: 1.2vw; margin: 0; color:rgb(231, 231, 231); width: 100%\">\r\n        <ol class=\"pt-3 pb-4\" style=\"width: 100%; display: table; margin: 0; vertical-align: middle; background-color: #1b1f23; padding-left: 30px;\">\r\n            <div style=\"display: table-row; width: 100%; vertical-align: middle; margin: 0; \" *ngFor=\"let line of this.algService.currentAlgorithm.code; let i = index\" id=\"line{{i+1}}\">\r\n                <li class=\"pl-2\" style=\"vertical-align: middle; width: 100%; tab-size: 0.8vw; word-wrap: break-word; white-space: pre-wrap\">\r\n                    {{ line }}\r\n                </li>\r\n            </div>\r\n        </ol>\r\n    </div>   \r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { AlgorithmRetrievalService } from 'src/app/algorithm-retrieval.service';\r\nimport { UtilsService } from 'src/app/utils/utils.service';\r\nimport { AlgorithmAnimationService } from '../animations/algorithm-animation.service';\r\nimport { CanvasService } from '../services/canvas/canvas.service';\r\nimport { PlaybackService } from '../services/playback/playback.service';\r\n\r\n@Component({\r\n  selector: 'sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.scss']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  @Input() showCode: boolean;\r\n  @Input() tutorialStep: number;\r\n\r\n  constructor(\r\n    public playback: PlaybackService,  // injecting the playback service\r\n    public algorithmService: AlgorithmRetrievalService,  // injecting the algorithm service\r\n    public drawService: CanvasService,  // injecting the canvas service\r\n    public animation: AlgorithmAnimationService,\r\n    public utils: UtilsService,\r\n    public dialog: MatDialog,  // injecting the dialog component\r\n    public router: Router  // injecting the router service (for programmatic route navigation)\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"d-none sidebar\" [ngClass]=\"{'col-md-3 d-md-block': !this.showCode, 'moveContentToTop': this.tutorialStep == 2}\">\r\n    <div class=\"sidebar-sticky shadow-lg\">\r\n      <div class=\"grid-container-algorithm\" id=\"sidebarContent\">\r\n\r\n        <!-- Algorithm Description -->\r\n        <alg-description></alg-description>\r\n\r\n\r\n        <!-- Free Agents -->\r\n        <free-agents></free-agents>\r\n\r\n\r\n        <!-- Code Display -->\r\n        <pseudocode></pseudocode>\r\n\r\n\r\n        <!-- Execution Log -->\r\n        <execution-log style=\"overflow: auto;\"></execution-log>\r\n\r\n      </div>\r\n  </div>\r\n</nav>","import { Injectable } from '@angular/core';\r\nimport { Algorithm } from './Algorithm';\r\nimport { HrResidentEgsService } from './algorithm-page/algorithms/algorithm-services/hr-resident-egs/hr-resident-egs.service';\r\nimport { EgsStableMarriageService } from './algorithm-page/algorithms/algorithm-services/smp-man-egs/egs-stable-marriage.service';\r\nimport { GsStableMarriageService } from './algorithm-page/algorithms/algorithm-services/smp-man-gs/gs-stable-marriage.service';\r\nimport { StableRoomIrvService } from './algorithm-page/algorithms/algorithm-services/smp-room-irv/stable-room-irv.service';\r\nimport { HrHospitalEgsService } from './algorithm-page/algorithms/algorithm-services/hr-hospital-egs/hr-hospital-egs.service';\r\n\r\n\r\n// ------------------------------------------------------- ALGORITHM TEMPLATE\r\n\r\n// [\r\n//   \"smp-man-egs\", {\r\n//     id: \"smp-man-egs\",\r\n//     name: \"Stable Marriage Problem\",\r\n//     orientation: [\"Man\", \"Woman\"],\r\n//     algorithm: \"Extended Gale-Shapley Stable Matching\",\r\n//     service: null,\r\n//     description: \"The stable marriage problem is the problem of finding a stable matching between two equally sized sets of elements. In this case: <b>men and women</b>.<br><br>To do this, the Extended Gale-Shapley Stable Marriage algorithm is used.\",\r\n//     helpTextMap: {\r\n\r\n//     },\r\n//   }\r\n// ],\r\n\r\n// -------------------------------------------------------\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlgorithmRetrievalService {\r\n\r\n  currentAlgorithm: Algorithm;\r\n\r\n  numberOfGroup1Agents: number = 5;\r\n  numberOfGroup2Agents: number = 5;\r\n\r\n  mapOfAvailableAlgorithms: Map<String, Algorithm> = new Map([\r\n    [\r\n      \"smp-man-gs\", {\r\n        id: \"smp-man-gs\",\r\n        name: \"Stable Marriage Problem\",\r\n        orientation: [\"Man\", \"Woman\"],\r\n        equalGroups: true,\r\n        algorithm: \"Gale-Shapley Stable Matching\",\r\n        service: this.gsStableMarriageService,\r\n        description: \"The stable marriage problem is the problem of finding a stable matching between two equally sized sets of elements. In this case: <b>men and women</b>.<br><br>To do this, the Gale-Shapley Stable Marriage algorithm is used.\",\r\n        helpTextMap: {\r\n          1: \"Ensure there are no pre-existing matches between men and women\",\r\n          2: \"While there is still a man without a match, select the first one (%man%)\",\r\n          3: \"%woman% is selected as %man%'s most preferred woman who he has not yet proposed to\",\r\n          4: \"Checking to see if %woman% has a match\",\r\n          5: \"%woman% was free, so matching her with %man%\",\r\n          6: \"%woman% is currently matched to %match%, so can't instantly engage %woman% and %man%\",\r\n          7: \"Checking if %woman% likes %match% more than %man%\",\r\n          8: \"%woman% likes %man% (current proposer) more than %match% (current match) so free %match% and engage %woman% and %man%\",\r\n          9: \"%woman% likes %match% more than %man%\",\r\n          10: \"No change to anyone's matches\",\r\n          11: \"A stable matching has been generated.\"\r\n        },\r\n        code: [\r\n          \"set each person to be free;\",\r\n          \"while some man m is free do:\",\r\n          \"\\tw = next most preferred woman on m’s list;\",\r\n          \"\\tif w is free then\",\r\n          \"\\t\\tassign m to w;\",\r\n          \"\\telse\",\r\n          \"\\t\\tif w prefers m to her current partner m' then\",\r\n          \"\\t\\t\\tassign m to w to be engaged and set m' to be free;\",\r\n          \"\\t\\telse\",\r\n          \"\\t\\t\\tw rejects m’s proposal and remains with m';\",\r\n          \"the stable matching consists of all n engagements\"\r\n        ]\r\n      }\r\n    ],\r\n\r\n    [\r\n      \"smp-man-egs\", {\r\n        id: \"smp-man-egs\",\r\n        name: \"Stable Marriage Problem\",\r\n        orientation: [\"Man\", \"Woman\"],\r\n        equalGroups: true,\r\n        algorithm: \"Extended Gale-Shapley Stable Matching\",\r\n        service: this.egsStableMarriageService,\r\n        description: \"The stable marriage problem is the problem of finding a stable matching between two equally sized sets of elements. In this case: <b>men and women</b>.<br><br>To do this, the Extended Gale-Shapley Stable Marriage algorithm is used.\",\r\n        helpTextMap: {\r\n          1: \"Set all men and women to have no engagements\",\r\n          2: \"While there are some men who are not engaged, select the next one (%currentAgent%)\",\r\n          3: \"%potentialProposee% is selected as %currentAgent%'s most preferred woman who he has not yet proposed to\",\r\n          4: \"Check if %woman% is currently engaged to someone\",\r\n          5: \"%woman% is engaged to %currentPartner%, so break the engagement between them\",\r\n          6: \"%woman% is not engaged, so continue with algorithm\",\r\n          7: \"Engage %man% and %woman%\",\r\n          8: \"Select each man with a worse preference ranking than %man% on %woman%\\'s list\",\r\n          9: \"%nextWorstMan% is chosen as the next worst man on %woman%\\'s preference list\",\r\n          10: \"Remove %nextWorstMan% and %woman% from each other\\'s lists\",\r\n          11: \"All men worse than %man% on %woman%\\'s preference list have been removed\",\r\n          12: \"A stable matching between men and women has been found\",\r\n        },\r\n        code: [\r\n          \"set each person to be free;\",\r\n          \"while some man m is free {\",\r\n          \"\\tw = first woman on m's list\",\r\n          \"\\tif w is currently engaged to someone {\",\r\n          \"\\t\\tbreak engagement between w and w's current partner\",\r\n          \"\\t}\",\r\n          \"\\tprovisionally engage m and w\",\r\n          \"\\tfor each successor m'' of m on w's list {\",\r\n          \"\\t\\tm'' = next worst man on w's preference list\",\r\n          \"\\t\\tremove m'' from w's preference list and vice versa\",\r\n          \"\\t}\",\r\n          \"}\"   // a stable matching between men and women has been found\r\n        ]\r\n      }\r\n    ],\r\n\r\n    [\r\n      \"hr-resident-egs\", {\r\n        id: \"hr-resident-egs\",\r\n        name: \"Hospitals/Residents Problem\",\r\n        orientation: [\"Resident\", \"Hospital\"],\r\n        equalGroups: false,\r\n        algorithm: \"Extended Gale-Shapley Stable Matching\",\r\n        service: this.HrResidentEgsService,\r\n        description: \"The Hospitals/Residents Problem is the problem of finding a stable matching between a set of <b>hospitals and residents</b>, where a hospital can take multiple residents.<br><br>This is the <b>resident-oriented</b> version of the algorithm, so <b>residents will propose to hospitals</b>.<br><br>To do this, the Extended Gale-Shapley Stable Marriage algorithm is used.\",\r\n        helpTextMap: {\r\n          1: \"Clear the matches of all residents and hospitals\",\r\n          2: \"The next resident who doesn't have a match and still has some hospitals in their preference list is selected (%currentAgent%\\)\",\r\n          3: \"The first hospital on %currentAgent%\\'s preference list is selected (%potentialProposee%)\",\r\n          4: \"Check if %hospital% is currently full: is it already matched with %capacity% resident(s)? If not, provisionally assign %resident% to %hospital%\",\r\n          5: \"%hospital%'s number of residents is equal to its max capacity, so choose the worst resident assigned to %hospital% (%worstResident%)\",\r\n          6: \"Clear the match between %hospital% and %worstResident%\",\r\n          7: \"Assign %resident% to %hospital%\",\r\n          8: \"Check if %hospital% is full after assigning %resident% to %hospital%\",\r\n          9: \"%hospital% is fully subscribed, so choose the worst resident assigned to them (%worstResident%) and remove each successor from %hospital%'s preference list\",\r\n          10: \"%nextResident% is chosen as the next resident to be removed from %hospital%'s list\",\r\n          11: \"Remove %nextResident% from %hospital%'s list\",\r\n          12: \"A stable matching between residents and hospitals has been found\",\r\n        },\r\n        code: [\r\n          \"set each hospital and resident to be completely free;\",\r\n          \"while (some resident r is free) and (r has a nonempty list)\",\r\n          \"\\th := first hospital on r's list\",\r\n          \"\\tif h is fully subscribed then\",\r\n          \"\\t\\tr' := worst resident provisionally assigned to h\",\r\n          \"\\t\\tassign r' to be free (clear match)\",\r\n          \"\\tprovisionally assign r to h\",\r\n          \"\\tif h is fully subscribed (after assigning r to h) then\",\r\n          \"\\t\\ts := worst resident provisionally assigned to h\",\r\n          \"\\t\\tfor each successor s' of s on h's list\",\r\n          \"\\t\\t\\tremove s' and h from each other's lists\",\r\n          \"the stable matching consists of all n engagements\"\r\n        ]\r\n      }\r\n    ],\r\n\r\n    // ADD NEW ALGORITHMS UNDER HERE\r\n\r\n    [\r\n      \"smp-room-irv\", {\r\n        id: \"smp-room-irv\",\r\n        name: \"Stable Roommates Problem\",\r\n        orientation: [\"Person\", \"Person\"],\r\n        equalGroups: true,\r\n        algorithm: \"Stable Roommates - Irving's Algorithm\",\r\n        service: this.StableRoomIrvService,\r\n        description: \"The stable roommates problem is the problem of finding a stable matching between 1 group of elements. In this case <b>people</b>.<br> <br>To do this the Irving’s algorithm is used \",\r\n        helpTextMap: {\r\n          1: \"Set all people to be free\",\r\n          2 : \"While some person %person% has not been assigned to a anyone and has a non-empty preferance list\",\r\n          3 : \"check if %person%\\'s preferance list is empty\",\r\n          4 : \"end the algorithm, there is no stable matching\",\r\n\r\n          5 : \"the first person on %person%\\'s preferance list is selected - %selected%\",\r\n          6 : \"set %person%\\ to be provisonally assigned to selected person %selected%\",\r\n\r\n          7 : \"check if any other person, other than %person% is assigned to %selected% \",\r\n          8 : \"If they are, then unassign them. unassign %old_person% from %selected%\",\r\n\r\n          9 : \"look through %selected%\\'s preferance list - %list%, for each person less prefered than %person%\",\r\n          10 : \"remove %removee% from %person%\\'s preferance list and remove %person% from %removee%\\'s preferance list\",\r\n\r\n          11 : \"While some person %person% has more then 1 person left in their preferance list - %list%\",\r\n          12 : \"look for rotations within %person%\\'s preferance list, that is a cycle of ordered pairs through preferance lists\",\r\n          13 : \"if a rotation is found\", //%rotation%\r\n          14 : \"delete pairs in rotation - remove %removee% from %person%\\'s preferance list and remove %person% from %removee%\\'s preferance list\",\r\n\r\n          15 : \"check if any person has only 1 preferance left\",\r\n          16 : \"assign %person% to the last person in their preferance list - %preferance%\",\r\n          17 : \"check if %person%\\'s preferance list is empty\",\r\n          18 : \"end the algorithm, there is no stable matching\",\r\n         \r\n          19 : \"Stable mathcing found.\",\r\n\r\n\r\n        },\r\n        code: [\r\n          \"Set each person to be free\",\r\n          \"While some person p is free (not assigned to someone)\",\r\n          \"\\t if person p has a empty preferance list\",\r\n          \"\\t\\t end - no stable matching\",\r\n\r\n          \"\\t person b := first preferance on p's list\",\r\n           \"\\t assign p to b\",\r\n\r\n          \"\\t if any person a is assigned to person b\",\r\n          \"\\t\\t free a\",\r\n\r\n          \"\\t for each person c less preferded than p on b's, preferance list\",\r\n          \"\\t\\t remove c from p's list and remove p from c's list\",\r\n          // 10 lines so far \r\n\r\n          // PAHSE 2\r\n          \"While some person p has more than 1 preferance left\",\r\n          \"look for rotations in perosn p's preferance list\",\r\n          \"if rotation r is found\",\r\n          \"\\t delete pairs in rotation r\",\r\n\r\n\r\n          \"\\t if a person b has 1 perferance left\",\r\n          \"\\t\\t person b := last preferance\",\r\n\r\n          \"if any people have empty preferance lists\",\r\n          \"\\t end - no stable matching\",\r\n         \r\n\r\n          \"done\"\r\n          // 11 ---> 17 lines \r\n          \r\n          \r\n        ]\r\n      }\r\n    ],\r\n\r\n    \r\n    [\r\n      \"hr-hospital-egs\", {\r\n        id: \"hr-hospital-egs\",\r\n        name: \"Hospitals/Residents Problem\",\r\n        orientation: [\"Hospital\", \"Resident\"],\r\n        equalGroups: false,\r\n        algorithm: \"Extended Gale-Shapley Stable Matching\",\r\n        service: this.HrHospitalEgsService,\r\n        description: \"The Hospitals/Residents Problem is the problem of finding a stable matching between a set of <b>hospitals and residents</b>, where a hospital can take multiple residents.<br><br>This is the <b>hospital-oriented</b> version of the algorithm, so <b>hospitals will propose to residents</b>.<br><br>To do this, the Extended Gale-Shapley Stable Marriage algorithm is used.\",\r\n        helpTextMap: {\r\n          1 : \"Set all hospitals and residents to be completely free\",\r\n          2 : \"While some hospital (%hospital%) is undersubscribed and has a resident on their preferance list that is not assigned to them\",\r\n          3 : \"Set r to %resident% from hospital's preferance list\",\r\n          4 : \"If %resident% is assigned to another hospital, unassign them from each other\",\r\n          5 : \"Unassign %resident% and %oldHospital% from each other\",\r\n          6 : \"Assign %resident% and %hospital% to each other\",\r\n          7 : \"For each resident r' after %resident% on %hospital%'s preferance list, remove them from each others preferance list\",\r\n          8 : \"remove %resident% from %hospital%'s preferance list and %hospital% from %resident%'s preferance list\",\r\n          9 : \"Stable matching is found\",\r\n\r\n          \r\n        },\r\n        code: [\r\n          \"Set each hospital and resident to be completely free\",\r\n          \"While some hospital h is undersubscibed, and has a resident on their preferance list\",\r\n          \"\\t r := first resident on h's prefernace list not assigned to h\",\r\n          \"\\t if r is assigned to another hospital h'\",\r\n          \"\\t\\t unassign r and h'\",\r\n          \r\n          \"\\t provisionally assign r to h\",\r\n          \"\\t for each successor r' of r on h's list\",\r\n          \"\\t\\t remove r' and h from each others preferance list\",\r\n          \"stable matching is found \"\r\n          \r\n         \r\n        ]\r\n\r\n    \r\n      }\r\n    ],\r\n\r\n\r\n  ]);\r\n\r\n  pluralMap: Map<string, string> = new Map([\r\n    [\"Man\", \"Men\"],\r\n    [\"Woman\", \"Women\"],\r\n    [\"Resident\", \"Residents\"],\r\n    [\"Hospital\", \"Hospitals\"],\r\n    [\"Person\", \"People\"],\r\n\r\n  ]);\r\n\r\n  constructor(\r\n    public gsStableMarriageService: GsStableMarriageService,\r\n    public egsStableMarriageService: EgsStableMarriageService,\r\n    public HrResidentEgsService: HrResidentEgsService,\r\n    public StableRoomIrvService: StableRoomIrvService,\r\n    public HrHospitalEgsService: HrHospitalEgsService,\r\n  ) { }\r\n\r\n  getListOfAlgorithms(): Array<Algorithm> {\r\n    return Array.from(this.mapOfAvailableAlgorithms.values());\r\n  }\r\n\r\n}\r\n","import { animate, animateChild, group, query, state, style, transition, trigger } from \"@angular/animations\";\r\n\r\nexport const simpleFadeAnimation =\r\n    // the fade-in/fade-out animation.\r\n    trigger('simpleFadeAnimation', [\r\n\r\n        // the \"in\" style determines the \"resting\" state of the element when it is visible.\r\n        state('in', style({opacity: 1})),\r\n  \r\n        // fade in when created. this could also be written as transition('void => *')\r\n        transition(':enter', [\r\n          style({opacity: 0}),\r\n          animate('400ms 0ms cubic-bezier(0.5, 0, 0.75, 0)')\r\n        ]),\r\n  \r\n        // fade out when destroyed. this could also be written as transition('void => *')\r\n        transition(':leave',\r\n          animate(500, style({opacity: 0})))\r\n      ]);","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n\r\n  title = 'individual-project';\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './routing/app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AlgorithmPageComponent } from './algorithm-page/algorithm-page.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatFormField, MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport { MatAnimatedIconComponent } from './algorithm-page/mat-animated-icon/mat-animated-icon.component';\r\nimport { PlaybackControlsComponent } from './algorithm-page/playback-controls/playback-controls.component';\r\nimport { CodeDisplayComponent } from './algorithm-page/code-display/code-display.component';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport { AngularResizedEventModule } from 'angular-resize-event';\r\nimport { HomeContentComponent } from './home-page/home-content/home-content.component';\r\nimport { AboutContentComponent } from './home-page/about-content/about-content.component';\r\nimport { AlgorithmContentComponent } from './home-page/algorithm-content/algorithm-content.component';\r\nimport { FeedbackContentComponent } from './home-page/feedback-content/feedback-content.component';\r\nimport { AlgorithmCardComponent } from './home-page/algorithm-content/algorithm-card/algorithm-card.component';\r\nimport { IconBannerComponent } from './home-page/icon-banner/icon-banner.component';\r\nimport { FeedbackBannerComponent } from './home-page/feedback-banner/feedback-banner.component';\r\nimport { NavbarComponent } from './home-page/navbar/navbar.component';\r\nimport { EditPreferencesDialogComponent } from './algorithm-page/edit-preferences-dialog/edit-preferences-dialog/edit-preferences-dialog.component';\r\nimport { AnimationGuideDialogComponent } from './algorithm-page/animation-guide-dialog/animation-guide-dialog.component';\r\nimport { SidebarComponent } from './algorithm-page/sidebar/sidebar.component';\r\nimport { AlgDescriptionComponent } from './algorithm-page/sidebar/alg-description/alg-description.component';\r\nimport { FreeAgentsComponent } from './algorithm-page/sidebar/free-agents/free-agents.component';\r\nimport { PseudocodeComponent } from './algorithm-page/sidebar/pseudocode/pseudocode.component';\r\nimport { ExecutionLogComponent } from './algorithm-page/sidebar/execution-log/execution-log.component';\r\nimport { AlgorithmNavbarComponent } from './algorithm-page/algorithm-navbar/algorithm-navbar.component';\r\nimport { AnimationContainerComponent } from './algorithm-page/animation-container/animation-container.component';\r\nimport { AgentTitlesComponent } from './algorithm-page/animation-container/agent-titles/agent-titles.component';\r\nimport { CanvasDisplayComponent } from './algorithm-page/animation-container/canvas-display/canvas-display.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AlgorithmPageComponent,\r\n    MatAnimatedIconComponent,\r\n    PlaybackControlsComponent,\r\n    CodeDisplayComponent,\r\n    HomePageComponent,\r\n    HomeContentComponent,\r\n    AboutContentComponent,\r\n    AlgorithmContentComponent,\r\n    FeedbackContentComponent,\r\n    AlgorithmCardComponent,\r\n    IconBannerComponent,\r\n    FeedbackBannerComponent,\r\n    NavbarComponent,\r\n    EditPreferencesDialogComponent,\r\n    AnimationGuideDialogComponent,\r\n    SidebarComponent,\r\n    AlgDescriptionComponent,\r\n    FreeAgentsComponent,\r\n    PseudocodeComponent,\r\n    ExecutionLogComponent,\r\n    AlgorithmNavbarComponent,\r\n    AnimationContainerComponent,\r\n    AgentTitlesComponent,\r\n    CanvasDisplayComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AngularResizedEventModule\r\n  ],\r\n\r\n\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { simpleFadeAnimation } from 'src/app/animations/fadeAnimation';\r\n\r\n@Component({\r\n  selector: 'app-about-content',\r\n  templateUrl: './about-content.component.html',\r\n  styleUrls: ['./about-content.component.scss', '../home-page.component.scss', '../home-content/home-content.component.scss'],\r\n  animations: [\r\n    simpleFadeAnimation\r\n  ]\r\n})\r\nexport class AboutContentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div [@simpleFadeAnimation]=\"'in'\" class=\"aboutContent\">\r\n    <div class=\"container text-center py-5 my-5 col-sm-11 col-lg-8 col-xl-6\">\r\n        <h1 class=\"title-text\">Hi, I'm Liam!<br><div class=\"divider my-4\"></div><span style=\"color: #464d57;\">This app was developed for my final year project at the University of Glasgow.</span></h1>\r\n    </div>\r\n\r\n    <div class=\"py-5\" style=\"background-color: #f6f6f8\">\r\n\r\n        <div class=\"container my-5\" style=\"font-family: DM Sans;\">\r\n            <div class=\"row pt-3\">\r\n                <div class=\"col-12\">\r\n                    <h1 style=\"font-size: 40px; line-height: 50px; font-weight: 600;\">The project</h1>\r\n                    <p class=\"pr-5\" style=\"font-size: 20px; line-height: 30px; font-weight: 300;\">\r\n                        This app is a matching algorithm animator proposed by Sofiat Olaosebikan, my supervisor for this project, and developed as part of my final year individual project over the course of 6 months.\r\n                        The idea of this app was to create a slick, easy to use learning tool for matching algorithms - that is, algorithms that involve the stable matching of 2 groups through various criteria.\r\n                        <br><br>\r\n                        Although this project is not as polished or feature-rich as I would like it to be, due to time and other constraints, I hope you like it and are also able to give me some feedback on what I could improve!\r\n                        <br><br>\r\n                        This app is created for <b>desktop</b> use - so will look the best on larger screens - I currently have no plans to optimise it for mobile devices so elements may not appear properly on smaller screens/windows.\r\n                        <br><br>\r\n                        To get started or learn more, head over to the Algorithms page where you can select an algorithm to run in different scenarios. Currently there are 3 options, and due to time constraints,\r\n                        I have no plans to add more.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"\" style=\"height: 150px\"></div>\r\n\r\n            <div class=\"row pb-5\">\r\n                <div class=\"col-lg-6 col-sm-12 my-auto\" id=\"homePageRow3Text\">\r\n                    <h1 style=\"font-size: 40px; line-height: 50px; font-weight: 600;\">More about me</h1>\r\n                    <p style=\"font-size: 20px; line-height: 30px; font-weight: 300;\">\r\n                        I'm Liam! A 4th year Computer Scientist at the University of Glasgow. When I'm not developing, I'm usually playing games, piano or learning whatever I can!\r\n                        <br><br>\r\n                        If you want to know more about me, head down to the bottom of the page and check out my social links!\r\n                    </p>\r\n                </div>\r\n                <div class=\"col-lg-6 col-sm-12 pl-5\">\r\n                    <div style=\"width: 300px; height: 300px; overflow: hidden; border-radius: 50%; border: 3px solid rgb(180, 180, 180);\" class=\"mx-auto\">\r\n                        <img src=\"assets/images/liam.jpg\" id=\"homePageRow3Content\" style=\"margin: 0 auto; margin-left: -8.2%; margin-top: -14%;height: 140%; width: auto;\" alt=\"me\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"\" style=\"height: 150px\"></div>\r\n\r\n            <div class=\"row pb-5\">\r\n                <div class=\"col-12\">\r\n                    <h1 style=\"font-size: 40px; line-height: 50px; font-weight: 600;\">Help and special mentions</h1>\r\n                    <p class=\"pr-5\" style=\"font-size: 20px; line-height: 30px; font-weight: 300;\">\r\n                        A big thank you to Sofiat Olaosebikan for helping me throughout the process and looking out for me to make sure on track, even in such a hectic year.\r\n                        <br><br>\r\n                        Also, thank you to Sarah, my partner, for your constant support and helping me out of my lowest lows.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlgorithmRetrievalService } from 'src/app/algorithm-retrieval.service';\r\nimport { Algorithm } from '../../../Algorithm';\r\n\r\ndeclare var anime: any;\r\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'algorithm-card',\r\n  templateUrl: './algorithm-card.component.html',\r\n  styleUrls: ['./algorithm-card.component.scss', '../../home-page.component.scss', '../../home-content/home-content.component.scss']\r\n})\r\nexport class AlgorithmCardComponent implements OnInit {\r\n\r\n  @Input() algorithm: Algorithm;\r\n\r\n\r\n  numberOfGroup1Agents = new FormControl('', [\r\n    Validators.required,\r\n    Validators.min(1),\r\n    Validators.max(9),\r\n    Validators.pattern(\"[2|4|6|8|10]\")\r\n  ]);\r\n\r\n  numberOfGroup2Agents = new FormControl('', [\r\n    Validators.required,\r\n    Validators.min(1),\r\n    Validators.max(9)\r\n  ]);\r\n\r\n  evenOnly(event): boolean {\r\n\r\n    if (event.key == \"enter\"){\r\n      return true\r\n    }\r\n  \r\n    if ([\"2\", \"4\", \"6\", \"8\", \"1\", \"0\"].includes(event.key)) {\r\n      return true\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  // matcher = new MyErrorStateMatcher();\r\n\r\n  constructor(public algorithmService: AlgorithmRetrievalService, public router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  // on clicking \"Generate Preferences\" change the global algorithm to the one passed into this dialog\r\n  async onGeneratePreferences(): Promise<void> {\r\n    this.algorithmService.currentAlgorithm = this.algorithm;\r\n    this.algorithmService.numberOfGroup1Agents = this.numberOfGroup1Agents.value;\r\n    if (this.numberOfGroup2Agents.value == '') {\r\n      this.algorithmService.numberOfGroup2Agents = this.numberOfGroup1Agents.value;\r\n    } else {\r\n      this.algorithmService.numberOfGroup2Agents = this.numberOfGroup2Agents.value;\r\n    }\r\n\r\n\r\n    anime({\r\n      targets: '.main-page',\r\n      easing: 'easeOutQuint',\r\n      opacity: [1, 0],\r\n      duration: 500\r\n    })\r\n\r\n    anime({\r\n      targets: '.navbar',\r\n      easing: 'easeOutQuint',\r\n      translateY: [0, -150],\r\n      opacity: [1, 0],\r\n      delay: 300,\r\n      duration: 500\r\n    })\r\n\r\n    await this.delay(700);\r\n\r\n    this.router.navigateByUrl(\"/animation\", { skipLocationChange: true });\r\n  }\r\n\r\n\r\n  delay(ms: number) {\r\n    return new Promise( resolve => setTimeout(resolve, ms) );\r\n  }\r\n\r\n}\r\n","<div class=\"card px-1\">\r\n    <div class=\"card-body\">\r\n        <div class=\"row mt-2\">\r\n            <div class=\"col-7\">\r\n                <h1 class=\"card-title\" style=\"font-size: 30px; font-weight: 400;\">{{ algorithm.name }}</h1>\r\n            </div>\r\n            <div class=\"col-5 mt-2 pr-4 text-right\">\r\n                <h6 class=\"card-subtitle text-muted\" style=\"font-size: 20px; font-weight: 400\">{{ algorithm.orientation[0] }}-Oriented</h6>\r\n            </div>\r\n        </div>\r\n        \r\n        <h5 class=\"card-subtitle mb-4 text-muted\" style=\"font-size: 22px; font-weight: 400\">{{ algorithm.algorithm }}</h5>\r\n\r\n        <div class=\"mt-3\" style=\"height: 150px; overflow:scroll\">\r\n            <p class=\"card-text\" style=\"font-size: 18px; line-height: 25px; font-weight: 400;\" [innerHTML]=\"algorithm.description\"></p>\r\n        </div>\r\n\r\n        <div class=\"divider mt-3\"></div>\r\n\r\n        <div class=\"row mt-4\">\r\n\r\n            <div class=\"col-7\">\r\n                <form class=\"example-form pl-3\">\r\n                    <div class=\"row justify-content-start\" *ngIf=\"algorithm.name == 'Stable Marriage Problem'\">\r\n                      <mat-form-field style=\"width: 200px;\">\r\n                        <mat-label>Number of Men and Women</mat-label>\r\n                        <input id={{algorithm.id}} [formControl]=\"numberOfGroup1Agents\" (keyup.enter)=\"(numberOfGroup1Agents.hasError('required') || numberOfGroup1Agents.hasError('max') || numberOfGroup1Agents.hasError('min')) ? '' : this.onGeneratePreferences()\" type=\"number\" matInput placeholder=\"5\" value=\"5\" min=\"1\" max=\"9\" onkeydown=\"if(event.key==='.'){event.preventDefault();}\" oninput=\"this.value = this.value > 0 && this.value < 10 ? (!!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null) : Number(String(this.value).charAt(1))\" onDrag=\"return false\" onDrop=\"return false\" onPaste=\"return false\">\r\n                        <mat-error *ngIf=\"numberOfGroup1Agents.hasError('required')\">\r\n                          This field is <strong>required</strong>\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"numberOfGroup1Agents.hasError('min') || numberOfGroup1Agents.hasError('max')\">\r\n                          Please input a number between 1 and 9\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                \r\n                    <div class=\"row justify-content-center\" *ngIf=\"algorithm.name == 'Hospitals/Residents Problem'\">\r\n                      <mat-form-field style=\"width: 200px;\" class=\"mr-1\">\r\n                        <mat-label>Number of Residents</mat-label>\r\n                        <input id=\"hr1\" [formControl]=\"numberOfGroup1Agents\" (keyup.enter)=\"numberOfGroup1Agents.hasError('required') || numberOfGroup1Agents.hasError('max') || numberOfGroup1Agents.hasError('min') || numberOfGroup2Agents.hasError('required') || numberOfGroup2Agents.hasError('max') || numberOfGroup2Agents.hasError('min') ? '' :  this.onGeneratePreferences()\" type=\"number\" matInput placeholder=\"5\" value=\"5\" min=\"2\" max=\"9\" oninput=\"this.value = this.value > 1 && this.value < 10 ? (!!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null) : Number(String(this.value).charAt(1))\" onDrag=\"return false\" onDrop=\"return false\" onPaste=\"return false\">\r\n                        <mat-error *ngIf=\"numberOfGroup1Agents.hasError('required')\">\r\n                          This field is <strong>required</strong>\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"numberOfGroup1Agents.hasError('min') || numberOfGroup1Agents.hasError('max')\">\r\n                          Please input a number between 1 and 9\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                \r\n                      <mat-form-field style=\"width: 200px;\" class=\"ml-1\">\r\n                        <mat-label>Number of Hospitals</mat-label>\r\n                        <input id=\"hr2\" [formControl]=\"numberOfGroup2Agents\" (keyup.enter)=\"numberOfGroup1Agents.hasError('required') || numberOfGroup1Agents.hasError('max') || numberOfGroup1Agents.hasError('min') || numberOfGroup2Agents.hasError('required') || numberOfGroup2Agents.hasError('max') || numberOfGroup2Agents.hasError('min') ? '' :  this.onGeneratePreferences()\" type=\"number\" matInput placeholder=\"5\" value=\"5\" min=\"2\" max=\"9\" oninput=\"this.value = this.value > 1 && this.value < 10 ? (!!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null) : Number(String(this.value).charAt(1))\" onDrag=\"return false\" onDrop=\"return false\" onPaste=\"return false\">\r\n                        <mat-error *ngIf=\"numberOfGroup2Agents.hasError('required')\">\r\n                          This field is <strong>required</strong>\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"numberOfGroup2Agents.hasError('min') || numberOfGroup2Agents.hasError('max')\">\r\n                          Please input a number between 1 and 9\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                    <!-- Roommates -->\r\n                    <div class=\"row justify-content-start\" *ngIf=\"algorithm.name == 'Stable Roommates Problem'\">\r\n                      <mat-form-field style=\"width: 200px;\">\r\n                        <mat-label>Number of People</mat-label>\r\n                        <input id={{algorithm.id}} [formControl]=\"numberOfGroup1Agents\" (keypress)=\"evenOnly($event)\" (keyup.enter)=\"((numberOfGroup1Agents.hasError('required') || numberOfGroup1Agents.hasError('max') || numberOfGroup1Agents.hasError('min')) ? '' : this.onGeneratePreferences())\" type=\"number\" matInput placeholder=\"5\" value=\"5\" min=\"1\" max=\"10\" onkeydown=\"if(event.key==='.'){event.preventDefault();}\" oninput=\"this.value = this.value > 0 && this.value < 10 ? (!!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null) : Number(String(this.value).charAt(1))\" onDrag=\"return false\" onDrop=\"return false\" onPaste=\"return false\">\r\n                        <mat-error *ngIf=\"numberOfGroup1Agents.hasError('required')\">\r\n                          This field is <strong>required</strong>\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"numberOfGroup1Agents.hasError('min') || numberOfGroup1Agents.hasError('max')\">\r\n                          Please input a even number between 1 and 8\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                \r\n                  </form>\r\n            </div>\r\n\r\n            <div class=\"col-5 text-right\">\r\n                <button class=\"cardButton\" mat-stroked-button style=\"border-radius: 70px; width: 220px; height: 45px;\" *ngIf=\"algorithm.name == 'Stable Marriage Problem' && !(numberOfGroup1Agents.hasError('required') || numberOfGroup1Agents.hasError('max') || numberOfGroup1Agents.hasError('min'))\" cdkFocusInitial [disabled]=\"numberOfGroup1Agents.hasError('required') || numberOfGroup1Agents.hasError('max') || numberOfGroup1Agents.hasError('min')\" (click)=\"this.onGeneratePreferences()\"><span style=\"font-size: 18px; font-weight: 500; color: black;\">Generate Preferences</span></button>\r\n                <button class=\"cardButton\" mat-stroked-button style=\"border-radius: 70px; width: 220px; height: 45px;\" *ngIf=\"algorithm.name == 'Hospitals/Residents Problem' && !(numberOfGroup1Agents.hasError('required') || numberOfGroup1Agents.hasError('max') || numberOfGroup1Agents.hasError('min') || numberOfGroup2Agents.hasError('required') || numberOfGroup2Agents.hasError('max') || numberOfGroup2Agents.hasError('min'))\" cdkFocusInitial [disabled]=\"numberOfGroup1Agents.hasError('required') || numberOfGroup1Agents.hasError('max') || numberOfGroup1Agents.hasError('min') || numberOfGroup2Agents.hasError('required') || numberOfGroup2Agents.hasError('max') || numberOfGroup2Agents.hasError('min')\" (click)=\"this.onGeneratePreferences()\"><span style=\"font-size: 18px; font-weight: 500; color: black;\">Generate Preferences</span></button>\r\n                <button class=\"cardButton\" mat-stroked-button style=\"border-radius: 70px; width: 220px; height: 45px;\" *ngIf=\"algorithm.name == 'Stable Roommates Problem' && !(numberOfGroup1Agents.hasError('required') || numberOfGroup1Agents.hasError('max') || numberOfGroup1Agents.hasError('min'))\" cdkFocusInitial [disabled]=\"numberOfGroup1Agents.hasError('required') || numberOfGroup1Agents.hasError('max') || numberOfGroup1Agents.hasError('min')\" (click)=\"this.onGeneratePreferences()\"><span style=\"font-size: 18px; font-weight: 500; color: black;\">Generate Preferences</span></button>\r\n\r\n              </div>\r\n        </div>\r\n        \r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AlgorithmRetrievalService } from 'src/app/algorithm-retrieval.service';\r\nimport { simpleFadeAnimation } from 'src/app/animations/fadeAnimation';\r\n\r\n@Component({\r\n  selector: 'app-algorithm-content',\r\n  templateUrl: './algorithm-content.component.html',\r\n  styleUrls: ['./algorithm-content.component.scss', '../home-page.component.scss', '../home-content/home-content.component.scss'],\r\n  animations: [\r\n    simpleFadeAnimation\r\n  ]\r\n})\r\nexport class AlgorithmContentComponent implements OnInit {\r\n\r\n  constructor(public algorithmRetrieval: AlgorithmRetrievalService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div [@simpleFadeAnimation]=\"'in'\" class=\"algorithmContent\">\r\n    <div class=\"container text-center py-5 my-5\">\r\n        <h1 class=\"title-text\">Learn a matching algorithm!</h1>\r\n\r\n        <div class=\"row pt-3 justify-content-center\">\r\n            <div class=\"col-9 pr-5 text-center\">\r\n                <p class=\"lead\" style=\"font-size: 1.6rem; line-height: 2.5rem; font-family: 'DM Sans'\">Using this app you can pick a problem (currently either Stable Marriage or Hospital/Residents) and see how the Gale-Shapley and Extended Gale-Shapley algorithms are used in those scenarios.</p>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"py-5\" style=\"background-color: #f6f6f8\">\r\n        <div class=\"container-fluid mt-3 mb-5\">\r\n\r\n            <div class=\"text-center\">\r\n                <h1 class=\"title-text\" style=\"color: #464d57;\">Problems</h1>\r\n            </div>\r\n            \r\n\r\n            <div class=\"row justify-content-center mb-4\">\r\n                <div class=\"col-6 text-center\">\r\n                    <p class=\"\" style=\"font-size: 1.2rem; line-height: 2rem; font-family: 'DM Sans';\">If it's your first time using this app, <b>try the algorithm on the left with 5 men and women</b>, then click on the question mark on the top right when the algorithm loads to get a short walkthrough of the functions of the app.</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row my-5 mx-5 justify-content-center\">\r\n                <div class=\"col-xl-6 col-sm-12 mb-5\" *ngFor=\"let algorithm of algorithmRetrieval.getListOfAlgorithms()\">\r\n                  <algorithm-card [algorithm]=algorithm></algorithm-card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'feedback-banner',\r\n  templateUrl: './feedback-banner.component.html',\r\n  styleUrls: ['./feedback-banner.component.scss']\r\n})\r\nexport class FeedbackBannerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"py-5\" id=\"feedbackBanner\" style=\"background-color: #1b1f23\">\r\n\r\n    <div class=\"text-center pt-2 px-5\">\r\n        <h2 class=\"mb-4\" style=\"color: white; font-weight: 400;\">\r\n            If you have any feedback for me, or anything you'd like to see in this app, click the button below to be navigated to the feedback page, or contact me at one of my socials!\r\n        </h2>\r\n\r\n        <h2 class=\"mb-5\" style=\"color: white; font-weight: 400;\">\r\n            I'm currently actively working on the app, however as it is part of my final year university project, I will eventually stop.\r\n        </h2>\r\n\r\n        <button class=\"feedbackButton\" mat-flat-button style=\"border-radius: 70px; width: 170px; height: 45px;\" routerLink=\"/feedback\"><span style=\"font-size: 18px; font-weight: 500; color: black; outline: none\">Give Feedback!</span></button>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { simpleFadeAnimation } from 'src/app/animations/fadeAnimation';\r\n\r\n@Component({\r\n  selector: 'app-feedback-content',\r\n  templateUrl: './feedback-content.component.html',\r\n  styleUrls: ['./feedback-content.component.scss', '../home-page.component.scss', '../home-content/home-content.component.scss'],\r\n  animations: [\r\n    simpleFadeAnimation\r\n  ]\r\n})\r\nexport class FeedbackContentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div [@simpleFadeAnimation]=\"'in'\" class=\"feedbackContent\">\r\n    <div class=\"container text-center py-5 my-5 col-sm-11 col-lg-8 col-xl-6\">\r\n        <h1 class=\"title-text\">I would greatly appreciate any feedback!<br><div class=\"divider my-4\"></div><span style=\"color: #464d57;\">I am collecting feedback to improve this app through Google Forms! Check below for details!</span></h1>\r\n    </div>\r\n\r\n    <div class=\"py-5\" style=\"background-color: #f6f6f8\">\r\n\r\n        <div class=\"container my-5\" style=\"font-family: DM Sans;\">\r\n            <div class=\"row pt-3\">\r\n                <div class=\"col-12\">\r\n                    <h1 style=\"font-size: 40px; line-height: 50px; font-weight: 600;\">Evaluation</h1>\r\n                    <p style=\"font-size: 20px; line-height: 30px; font-weight: 300;\">If you'd like to help me out, I'd really appreciate you spending the time to go through and do my evaluation of this app. It's at this Google Forms link.</p>\r\n                    <p style=\"font-size: 20px; line-height: 30px; font-weight: 300;\">If there's anything you'd like to mention that my evaluation doesn't cover, please contact me at 2314991L@student.gla.ac.uk. I'd love to hear any and all opinions!</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"\" style=\"height: 150px\"></div>\r\n\r\n            <div class=\"row pt-3\">\r\n                <div class=\"col-12\">\r\n                    <h1 style=\"font-size: 40px; line-height: 50px; font-weight: 600;\">Future Work</h1>\r\n                    <p style=\"font-size: 20px; line-height: 30px; font-weight: 300;\">As this is a university project, there's a limit on what I can feasibly do in the time given, especially alongside the rest of my studies. However, below is a list of features, fixes and improvements I would love to make, if I had the time:</p>\r\n                    <ul style=\"font-size: 18px; line-height: 30px; font-weight: 300;\">\r\n                        <li>Implementation of more algorithms</li>\r\n                        <li>Functionality to edit number of available spaces for hospitals through edit preferences</li>\r\n                        <li>A more robust, user friendly implementation of the edit preferences system</li>\r\n                        <li>A more in-depth, high quality tutorial</li>\r\n                        <li>Screen responsiveness (app responding properly to different screen sizes)</li>\r\n                        <li>Mobile version of the web app</li>\r\n                        <li>More polish - ensuring no bugs and other oddities with presentation</li>\r\n                        <li>User friendly system to create their own algorithms - possibly \"writing code\" or combining blocks of logic to create matching algorithms?</li>\r\n                    </ul>\r\n                    <p style=\"font-size: 20px; line-height: 30px; font-weight: 300;\">If there's anything you think would be a great addition to this app, please go through my evaluation and add your thoughts!</p>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { simpleFadeAnimation } from 'src/app/animations/fadeAnimation';\r\n\r\ndeclare var anime: any;\r\n\r\n@Component({\r\n  selector: 'home-content',\r\n  templateUrl: './home-content.component.html',\r\n  styleUrls: ['./home-content.component.scss', '../home-page.component.scss'],\r\n  animations: [\r\n    simpleFadeAnimation\r\n  ]\r\n})\r\nexport class HomeContentComponent implements OnInit {\r\n\r\n  @ViewChild('animationVid') animationVid: ElementRef;\r\n  @ViewChild('descriptionVid') descriptionVid: ElementRef;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    let vid: HTMLVideoElement = this.animationVid.nativeElement;\r\n    vid.muted = true;\r\n    vid.play();\r\n\r\n    vid = this.descriptionVid.nativeElement;\r\n    vid.muted = true;\r\n    vid.play();\r\n  }\r\n\r\n  delay(ms: number) {\r\n    return new Promise( resolve => setTimeout(resolve, ms) );\r\n  }\r\n\r\n}\r\n","<div [@simpleFadeAnimation]=\"'in'\" class=\"homeContent\">\r\n\r\n    <div class=\"titleContent\">\r\n        <div class=\"container text-center pt-5 col-sm-11 col-lg-8 col-xl-5\">\r\n            <h1 class=\"title-text\">Learn, visualise and walk through matching algorithms at your own pace.</h1>\r\n        </div>\r\n    \r\n        <div class=\"container pb-5 mb-5 text-center\">\r\n            <video #animationVid class=\"video\" id=\"animationVideo\" autoplay muted loop src=\"assets/animations/algAnimation.mp4\" type=\"video/mp4\"></video>\r\n            <!-- <button mat-flat-button color=\"accent\" style=\"border-radius: 70px; width: 300px; height: 90px\"><span style=\"font-size: 36px; font-weight: 500\">Get Started</span></button> -->\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n    <div class=\"py-5\" style=\"background-color: #f6f6f8; font-family: DM Sans;\">\r\n\r\n        <!-- <div class=\"titleContent mt-2 pb-5 mb-5 text-center\">\r\n            <button class=\"startButton\" mat-flat-button color=\"accent\" style=\"border-radius: 70px; width: 350px; height: 90px\"><span style=\"font-size: 36px; font-weight: 500; color: rgb(243, 243, 243);\">Get Started</span></button>\r\n        </div> -->\r\n\r\n        <div class=\"container my-5\">\r\n            <div class=\"row pt-5\">\r\n                <div class=\"col-lg-6 col-sm-12 my-auto text-right pr-5\" id=\"homePageRow1Text\">\r\n                    <h1 style=\"font-size: 40px; line-height: 50px; font-weight: 600;\">Perfect for beginners</h1>\r\n                    <p style=\"font-size: 20px; line-height: 30px; font-weight: 300;\">With a simple, intuitive interface, learn how the Gale-Shapley and Extended Gale-Shapley matching algorithms work in different problems with step-by-step playback.</p>\r\n                </div>\r\n                <div class=\"col-lg-6 col-sm-12 mx-auto text-center\">\r\n                    <video #descriptionVid id=\"homePageRow1Content\" class=\"video\" id=\"descriptionVideo\" autoplay muted loop src=\"assets/animations/descriptions.mp4\" type=\"video/mp4\" width=80% style=\"border: 1px solid rgb(180, 180, 180); height: auto; border-radius: 30px;\"></video>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"\" style=\"height: 150px\"></div>\r\n\r\n            <div class=\"row mt-5\">\r\n                <div class=\"col-lg-6 col-sm-12 mt-5 my-auto\">\r\n                    <div style=\"width: 300px; height: 300px; overflow: hidden; border-radius: 50%; background: white; border: 1px solid rgb(180, 180, 180);\" class=\"mx-auto\">\r\n                        <img src=\"assets/images/codeDisplayWhite.PNG\" style=\"margin: 0 auto; margin-left: 5%; margin-top: 5%;height: 100%; width: auto;\" id=\"homePageRow2Content\">\r\n                    </div>\r\n                </div>\r\n                <!-- <div class=\"col-sm-none\"></div> -->\r\n                <div class=\"col-lg-6 col-sm-12 my-auto pl-5\" id=\"homePageRow2Text\">\r\n                    <h1 style=\"font-size: 40px; line-height: 50px; font-weight: 600;\">Learn visually</h1>\r\n                    <p style=\"font-size: 20px; line-height: 30px; font-weight: 300;\">Decide to play each algorithm with pseudocode shown or not in conjunction with a visual representation of matching.</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"\" style=\"height: 150px\"></div>\r\n\r\n            <div class=\"row pb-5\">\r\n                <div class=\"col-lg-6 col-sm-12 my-auto text-right pr-5\" id=\"homePageRow3Text\">\r\n                    <h1 style=\"font-size: 40px; line-height: 50px; font-weight: 600;\">Control your learning</h1>\r\n                    <p style=\"font-size: 20px; line-height: 30px; font-weight: 300;\">Use the playback controls for each algorithm to control the speed you learn.</p>\r\n                </div>\r\n                <div class=\"col-lg-6 col-sm-12 pl-5\">\r\n                    <div style=\"width: 300px; height: 300px; overflow: hidden; border-radius: 50%; background: white; border: 1px solid rgb(180, 180, 180);\" class=\"mx-auto\">\r\n                        <img src=\"assets/images/playbackControlUnchanged.PNG\" id=\"homePageRow3Content\" style=\"margin: 0 auto; margin-left: -15.2%; margin-top: 17%;height: 60%; width: auto;\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { Router, RouterOutlet } from '@angular/router';\r\n\r\ndeclare var anime: any;\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.scss'],\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n\r\n  \r\n\r\n  constructor(public router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  async ngAfterViewInit(): Promise<void> {\r\n\r\n    anime({\r\n      targets: '.navbar',\r\n      easing: 'easeInOutQuint',\r\n      translateY: [-150, 0],\r\n      opacity: [0, 1],\r\n      delay: 100,\r\n      duration: 1000\r\n    })\r\n\r\n    anime({\r\n      targets: '.main-page',\r\n      easing: 'easeInOutQuint',\r\n      opacity: [0, 1],\r\n      // translateY: [-100, 0],\r\n      delay: 550,\r\n      duration: 900\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n","<navbar></navbar>\r\n\r\n<div class=\"main-page\">\r\n    <router-outlet #outlet=\"outlet\"></router-outlet>\r\n\r\n    <feedback-banner *ngIf=\"!(router.url === '/feedback')\"></feedback-banner>\r\n\r\n    <icon-banner></icon-banner>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'icon-banner',\r\n  templateUrl: './icon-banner.component.html',\r\n  styleUrls: ['./icon-banner.component.scss']\r\n})\r\nexport class IconBannerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"py-5 text-center\">\r\n    <a style=\"margin: 0 1em;\" href=\"https://github.com/liamlau/individual-project\" target=\"#blank\">\r\n        <svg height=\"50px\" id=\"github-icon\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fab\" data-icon=\"github\" class=\"svg-inline--fa fa-github fa-w-16 fa-2x \" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 496 512\"><path class=\"github-icon\" fill=\"currentColor\" d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"></path></svg>\r\n    </a>\r\n    <!-- <a style=\"margin: 0 1em;\" href=\"https://www.facebook.com/liam.lau3/\" target=\"#blank\">\r\n        <svg height=\"50px\" id=\"facebook-icon\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fab\" data-icon=\"facebook\" class=\"svg-inline--fa fa-facebook fa-w-16 fa-2x \" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path class=\"facebook-icon\" fill=\"currentColor\" d=\"M504 256C504 119 393 8 256 8S8 119 8 256c0 123.78 90.69 226.38 209.25 245V327.69h-63V256h63v-54.64c0-62.15 37-96.48 93.67-96.48 27.14 0 55.52 4.84 55.52 4.84v61h-31.28c-30.8 0-40.41 19.12-40.41 38.73V256h68.78l-11 71.69h-57.78V501C413.31 482.38 504 379.78 504 256z\"></path></svg>\r\n    </a> -->\r\n    <a style=\"margin: 0 1em;\" href=\"https://www.linkedin.com/in/liam-lau-01b2b31b0/\" target=\"#blank\">\r\n        <svg height=\"50px\" id=\"linkedin-icon\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fab\" data-icon=\"linkedin\" class=\"svg-inline--fa fa-linkedin fa-w-14 fa-2x \" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path class=\"linkedin-icon\" fill=\"currentColor\" d=\"M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z\"></path></svg>\r\n    </a>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\ndeclare var anime: any;\r\n\r\n@Component({\r\n  selector: 'navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  componentMap: Object = {\r\n    \"/\": \".homeContent\",\r\n    \"/about\": \".aboutContent\",\r\n    \"/algorithms\": \".algorithmContent\",\r\n    \"/feedback\": \".feedbackContent\"\r\n  };\r\n\r\n  constructor(public router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  fadeCurrentPage(): void {\r\n    anime({\r\n      targets: [this.componentMap[this.router.url]],\r\n      easing: 'easeInOutQuint',\r\n      opacity: [1, 0],\r\n      duration: 400\r\n    })\r\n  }\r\n\r\n  async goToPage(page: string): Promise<void> {\r\n    if (!(this.router.url == page)) {\r\n      this.fadeCurrentPage();\r\n      await this.delay(400);\r\n      this.router.navigateByUrl(page, { skipLocationChange: true });\r\n    }\r\n  }\r\n\r\n  delay(ms: number) {\r\n    return new Promise( resolve => setTimeout(resolve, ms) );\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar sticky-top navbar-expand-lg navbar-light\" style=\"background-color: white; font-family: 'DM Sans'\">\r\n    <a class=\"navbar-brand pl-5 mt-5 mb-4\" style=\"cursor: pointer;\" (click)=\"this.goToPage('/')\"><span class=\"display-1\" style=\"font-size: 40px;\"><span id=\"alg\">alg</span><span id=\"match\">match</span></span></a>\r\n    <button class=\"navbar-toggler mt-4 mr-5\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse ml-5\" id=\"navbarNavAltMarkup\">\r\n        <div class=\"navbar-nav ml-auto pt-5 pb-3 pr-5\">\r\n        <a class=\"nav-item nav-link mr-5\" id=\"homeLink\" style=\"font-size: 23px; font-weight: 600; cursor: pointer\" (click)=\"this.goToPage('/')\" [ngClass]=\"{'active' : !['/about', '/algorithms', '/feedback'].includes(this.router.url)}\">Home</a>\r\n        <a class=\"nav-item nav-link mr-5\" id=\"aboutLink\" style=\"font-size: 23px; font-weight: 600; cursor: pointer\" (click)=\"this.goToPage('/about')\" [ngClass]=\"{'active' : this.router.url == '/about'}\">About</a>\r\n        <a class=\"nav-item nav-link mr-4 pr-3\" id=\"algorithmsLink\" style=\"font-size: 23px; font-weight: 600; cursor: pointer\" (click)=\"this.goToPage('/algorithms')\" [ngClass]=\"{'active' : this.router.url == '/algorithms'}\">Algorithms</a>\r\n        <a class=\"nav-item nav-link mr-4\" id=\"feedbackLink\" style=\"font-size: 23px; font-weight: 600; cursor: pointer\" (click)=\"this.goToPage('/feedback')\" [ngClass]=\"{'active' : this.router.url == '/feedback'}\">Feedback</a>\r\n        </div>\r\n    </div>\r\n</nav>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AlgorithmRetrievalService } from '../algorithm-retrieval.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlgorithmGuard implements CanActivate {\r\n\r\n  constructor(public algorithmService: AlgorithmRetrievalService, private _router: Router) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if (this.algorithmService.currentAlgorithm) {\r\n      return true; \r\n    }\r\n\r\n    this._router.navigate(['/']);\r\n    return false;\r\n\r\n  }\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AlgorithmGuard } from './algorithm-guard';\r\nimport { AlgorithmPageComponent } from '../algorithm-page/algorithm-page.component';\r\nimport { AboutContentComponent } from '../home-page/about-content/about-content.component';\r\nimport { AlgorithmContentComponent } from '../home-page/algorithm-content/algorithm-content.component';\r\nimport { FeedbackContentComponent } from '../home-page/feedback-content/feedback-content.component';\r\nimport { HomeContentComponent } from '../home-page/home-content/home-content.component';\r\nimport { HomePageComponent } from '../home-page/home-page.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomePageComponent, children: [\r\n    {\r\n      path: '',\r\n      component: HomeContentComponent,\r\n      data: {animation: 'HomePage'}\r\n    },\r\n    {\r\n      path: 'about',\r\n      component: AboutContentComponent,\r\n      data: {animation: 'AboutPage'}\r\n    },\r\n    {\r\n      path: 'algorithms',\r\n      component: AlgorithmContentComponent\r\n    },\r\n    {\r\n      path: 'feedback',\r\n      component: FeedbackContentComponent\r\n    },\r\n  ]},\r\n  { path: 'animation', component: AlgorithmPageComponent, canActivate: [AlgorithmGuard] },\r\n  { path: '**', redirectTo: '' },  // Wildcard route\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {scrollPositionRestoration: 'enabled'})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UtilsService {\r\n\r\n  constructor() { }\r\n\r\n  delay(ms: number) {\r\n    return new Promise( resolve => setTimeout(resolve, ms) );\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}